ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"main.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 12020000 		.text
  20      02004600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	buildVersion
  24              		.data
  25              		.align	2
  26              		.type	buildVersion, %object
  27              		.size	buildVersion, 12
  28              	buildVersion:
  29 0000 4275696C 		.ascii	"Build 1.0.0\000"
  29      6420312E 
  29      302E3000 
  30              		.comm	strbuffer,100,4
  31              		.global	buttonInterrupted
  32              		.bss
  33              		.align	2
  34              		.type	buttonInterrupted, %object
  35              		.size	buttonInterrupted, 4
  36              	buttonInterrupted:
  37 0000 00000000 		.space	4
  38              		.global	rxInterrupted
  39              		.align	2
  40              		.type	rxInterrupted, %object
  41              		.size	rxInterrupted, 4
  42              	rxInterrupted:
  43 0004 00000000 		.space	4
  44              		.global	wheelTickInterrupted
  45              		.align	2
  46              		.type	wheelTickInterrupted, %object
  47              		.size	wheelTickInterrupted, 4
  48              	wheelTickInterrupted:
  49 0008 00000000 		.space	4
  50              		.global	tickTimeoutInterrupted
  51              		.align	2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 2


  52              		.type	tickTimeoutInterrupted, %object
  53              		.size	tickTimeoutInterrupted, 4
  54              	tickTimeoutInterrupted:
  55 000c 00000000 		.space	4
  56              		.global	pidTimerInterrupted
  57              		.align	2
  58              		.type	pidTimerInterrupted, %object
  59              		.size	pidTimerInterrupted, 4
  60              	pidTimerInterrupted:
  61 0010 00000000 		.space	4
  62              		.global	camCompRiseInterrupted
  63              		.align	2
  64              		.type	camCompRiseInterrupted, %object
  65              		.size	camCompRiseInterrupted, 4
  66              	camCompRiseInterrupted:
  67 0014 00000000 		.space	4
  68              		.global	camCompFallInterrupted
  69              		.align	2
  70              		.type	camCompFallInterrupted, %object
  71              		.size	camCompFallInterrupted, 4
  72              	camCompFallInterrupted:
  73 0018 00000000 		.space	4
  74              		.global	camRowInterrupted
  75              		.align	2
  76              		.type	camRowInterrupted, %object
  77              		.size	camRowInterrupted, 4
  78              	camRowInterrupted:
  79 001c 00000000 		.space	4
  80              		.global	camFrameInterrupted
  81              		.align	2
  82              		.type	camFrameInterrupted, %object
  83              		.size	camFrameInterrupted, 4
  84              	camFrameInterrupted:
  85 0020 00000000 		.space	4
  86              		.global	numFrames
  87              		.align	2
  88              		.type	numFrames, %object
  89              		.size	numFrames, 4
  90              	numFrames:
  91 0024 00000000 		.space	4
  92              		.global	numRows
  93              		.align	2
  94              		.type	numRows, %object
  95              		.size	numRows, 4
  96              	numRows:
  97 0028 00000000 		.space	4
  98              		.global	numCompBegin
  99              		.align	2
 100              		.type	numCompBegin, %object
 101              		.size	numCompBegin, 4
 102              	numCompBegin:
 103 002c 00000000 		.space	4
 104              		.global	numCompEnd
 105              		.align	2
 106              		.type	numCompEnd, %object
 107              		.size	numCompEnd, 4
 108              	numCompEnd:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 3


 109 0030 00000000 		.space	4
 110              		.global	rowCycles
 111              		.align	2
 112              		.type	rowCycles, %object
 113              		.size	rowCycles, 4
 114              	rowCycles:
 115 0034 00000000 		.space	4
 116              		.global	lineBeginCycles
 117              		.align	2
 118              		.type	lineBeginCycles, %object
 119              		.size	lineBeginCycles, 4
 120              	lineBeginCycles:
 121 0038 00000000 		.space	4
 122              		.global	lineEndCycles
 123              		.align	2
 124              		.type	lineEndCycles, %object
 125              		.size	lineEndCycles, 4
 126              	lineEndCycles:
 127 003c 00000000 		.space	4
 128              		.global	MAIN_CLK_FREQ
 129              		.section	.rodata
 130              		.align	3
 131              		.type	MAIN_CLK_FREQ, %object
 132              		.size	MAIN_CLK_FREQ, 8
 133              	MAIN_CLK_FREQ:
 134 0000 00000000 		.word	0
 135 0004 006AF840 		.word	1090021888
 136              		.global	MIN_TIME_SERVO
 137              		.align	3
 138              		.type	MIN_TIME_SERVO, %object
 139              		.size	MIN_TIME_SERVO, 8
 140              	MIN_TIME_SERVO:
 141 0008 158C4AEA 		.word	-364213227
 142 000c 0434513F 		.word	1062286340
 143              		.global	MAX_TIME_SERVO
 144              		.align	3
 145              		.type	MAX_TIME_SERVO, %object
 146              		.size	MAX_TIME_SERVO, 8
 147              	MAX_TIME_SERVO:
 148 0010 8E40BCAE 		.word	-1363394418
 149 0014 5FB05B3F 		.word	1062973535
 150              		.global	CAMERA_TIMER_PERIOD
 151              		.align	3
 152              		.type	CAMERA_TIMER_PERIOD, %object
 153              		.size	CAMERA_TIMER_PERIOD, 8
 154              	CAMERA_TIMER_PERIOD:
 155 0018 00000000 		.word	0
 156 001c 0000F040 		.word	1089470464
 157              		.global	EXPECTED_ROW_CYCLES
 158              		.align	3
 159              		.type	EXPECTED_ROW_CYCLES, %object
 160              		.size	EXPECTED_ROW_CYCLES, 8
 161              	EXPECTED_ROW_CYCLES:
 162 0020 00000000 		.word	0
 163 0024 00208640 		.word	1082531840
 164              		.global	test6
 165              		.bss
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 4


 166              		.align	2
 167              		.type	test6, %object
 168              		.size	test6, 4
 169              	test6:
 170 0040 00000000 		.space	4
 171              		.global	test7
 172              		.align	2
 173              		.type	test7, %object
 174              		.size	test7, 4
 175              	test7:
 176 0044 00000000 		.space	4
 177              		.global	test8
 178              		.align	2
 179              		.type	test8, %object
 180              		.size	test8, 4
 181              	test8:
 182 0048 00000000 		.space	4
 183              		.global	test9
 184              		.align	2
 185              		.type	test9, %object
 186              		.size	test9, 4
 187              	test9:
 188 004c 00000000 		.space	4
 189              		.global	__aeabi_d2iz
 190              		.global	__aeabi_i2d
 191              		.section	.text.floor,"ax",%progbits
 192              		.align	2
 193              		.global	floor
 194              		.thumb
 195              		.thumb_func
 196              		.type	floor, %function
 197              	floor:
 198              	.LFB29:
 199              		.file 1 ".\\main.c"
   1:.\main.c      **** /*-----------------------------------------------------------------*/
   2:.\main.c      **** /* main.c                                                          */
   3:.\main.c      **** /*                                                                 */
   4:.\main.c      **** /* BC Cho (bccho@) and TJ Smith (tjs8@)                            */
   5:.\main.c      **** /*-----------------------------------------------------------------*/
   6:.\main.c      **** #include <device.h>
   7:.\main.c      **** #include <stdio.h>
   8:.\main.c      **** #include <speedcontrol.h>
   9:.\main.c      **** #include <serial.h>
  10:.\main.c      **** 
  11:.\main.c      **** char buildVersion[] = "Build 1.0.0";
  12:.\main.c      **** char strbuffer[100];
  13:.\main.c      **** 
  14:.\main.c      **** // Function prototypes
  15:.\main.c      **** void parseMessage();
  16:.\main.c      **** 
  17:.\main.c      **** 
  18:.\main.c      **** int buttonInterrupted = 0;
  19:.\main.c      **** int rxInterrupted = 0;
  20:.\main.c      **** int wheelTickInterrupted = 0;
  21:.\main.c      **** int tickTimeoutInterrupted = 0;
  22:.\main.c      **** int pidTimerInterrupted = 0;
  23:.\main.c      **** int camCompRiseInterrupted = 0;
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 5


  24:.\main.c      **** int camCompFallInterrupted = 0;
  25:.\main.c      **** int camRowInterrupted = 0;
  26:.\main.c      **** int camFrameInterrupted = 0;
  27:.\main.c      **** 
  28:.\main.c      **** int numFrames = 0;
  29:.\main.c      **** int numRows = 0;
  30:.\main.c      **** int numCompBegin = 0;
  31:.\main.c      **** int numCompEnd = 0;
  32:.\main.c      **** int rowCycles = 0;
  33:.\main.c      **** int lineBeginCycles = 0;
  34:.\main.c      **** int lineEndCycles = 0;
  35:.\main.c      **** #define CAM_CLK_FREQ 12000000
  36:.\main.c      **** const double MAIN_CLK_FREQ = 100000;
  37:.\main.c      **** 
  38:.\main.c      **** // Control pulse times in s
  39:.\main.c      **** const double MIN_TIME_SERVO = 0.00105;
  40:.\main.c      **** const double MAX_TIME_SERVO = 0.00169;
  41:.\main.c      **** 
  42:.\main.c      **** const double CAMERA_TIMER_PERIOD = 65536;
  43:.\main.c      **** 
  44:.\main.c      **** #define EXPECTED_ROW_TIME 0.000059
  45:.\main.c      **** const double EXPECTED_ROW_CYCLES = EXPECTED_ROW_TIME * CAM_CLK_FREQ;
  46:.\main.c      **** 
  47:.\main.c      **** int test6 = 0;
  48:.\main.c      **** int test7 = 0;
  49:.\main.c      **** int test8 = 0;
  50:.\main.c      **** int test9 = 0;
  51:.\main.c      **** 
  52:.\main.c      **** double floor(double a) {
  53:.\main.c      ****     return (double) (int) a;
 200              		.loc 1 53 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 8
 207 0002 82B0     		sub	sp, sp, #8
 208              	.LCFI1:
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_offset 14, -4
 212              		.cfi_offset 7, -8
 213              	.LCFI2:
 214              		.cfi_def_cfa_register 7
 215 0006 C7E90001 		strd	r0, [r7]
 216              		.loc 1 53 0
 217 000a D7E90001 		ldrd	r0, [r7]
 218 000e FFF7FEFF 		bl	__aeabi_d2iz
 219 0012 0346     		mov	r3, r0
 220 0014 1846     		mov	r0, r3
 221 0016 FFF7FEFF 		bl	__aeabi_i2d
 222 001a 0246     		mov	r2, r0
 223 001c 0B46     		mov	r3, r1
  54:.\main.c      **** }
 224              		.loc 1 54 0
 225 001e 1046     		mov	r0, r2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 6


 226 0020 1946     		mov	r1, r3
 227 0022 07F10807 		add	r7, r7, #8
 228 0026 BD46     		mov	sp, r7
 229 0028 80BD     		pop	{r7, pc}
 230              		.cfi_endproc
 231              	.LFE29:
 232              		.size	floor, .-floor
 233              		.global	__aeabi_dadd
 234 002a 00BF     		.section	.text.ceil,"ax",%progbits
 235              		.align	2
 236              		.global	ceil
 237              		.thumb
 238              		.thumb_func
 239              		.type	ceil, %function
 240              	ceil:
 241              	.LFB30:
  55:.\main.c      **** 
  56:.\main.c      **** double ceil(double a) {
  57:.\main.c      ****     return floor(a) + 1;
 242              		.loc 1 57 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 8
 249 0002 82B0     		sub	sp, sp, #8
 250              	.LCFI4:
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_offset 14, -4
 254              		.cfi_offset 7, -8
 255              	.LCFI5:
 256              		.cfi_def_cfa_register 7
 257 0006 C7E90001 		strd	r0, [r7]
 258              		.loc 1 57 0
 259 000a D7E90001 		ldrd	r0, [r7]
 260 000e FFF7FEFF 		bl	floor
 261 0012 0246     		mov	r2, r0
 262 0014 0B46     		mov	r3, r1
 263 0016 1046     		mov	r0, r2
 264 0018 1946     		mov	r1, r3
 265 001a 4FF00002 		mov	r2, #0
 266 001e 4FF07E53 		mov	r3, #1065353216
 267 0022 03F5E003 		add	r3, r3, #7340032
 268 0026 FFF7FEFF 		bl	__aeabi_dadd
 269 002a 0246     		mov	r2, r0
 270 002c 0B46     		mov	r3, r1
  58:.\main.c      **** }
 271              		.loc 1 58 0
 272 002e 1046     		mov	r0, r2
 273 0030 1946     		mov	r1, r3
 274 0032 07F10807 		add	r7, r7, #8
 275 0036 BD46     		mov	sp, r7
 276 0038 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE30:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 7


 279              		.size	ceil, .-ceil
 280 003a 00BF     		.section	.rodata
 281              		.align	2
 282              	.LC0:
 283 0028 25335B41 		.ascii	"%3[A-Za-z]\000"
 283      2D5A612D 
 283      7A5D00
 284 0033 00       		.align	2
 285              	.LC1:
 286 0034 435400   		.ascii	"CT\000"
 287 0037 00       		.align	2
 288              	.LC2:
 289 0038 256900   		.ascii	"%i\000"
 290 003b 00       		.align	2
 291              	.LC3:
 292 003c 5468726F 		.ascii	"Throttle = %i\012\000"
 292      74746C65 
 292      203D2025 
 292      690A00
 293 004b 00       		.align	2
 294              	.LC4:
 295 004c 4700     		.ascii	"G\000"
 296 004e 0000     		.align	2
 297              	.LC5:
 298 0050 5468726F 		.ascii	"Throttle: %d\012Speed: %f ft/s\012P = %.2f\011I = %"
 298      74746C65 
 298      3A202564 
 298      0A537065 
 298      65643A20 
 299 007a 2E326609 		.ascii	".2f\011D = %.2f\012\000"
 299      44203D20 
 299      252E3266 
 299      0A00
 300              		.align	2
 301              	.LC6:
 302 0088 545000   		.ascii	"TP\000"
 303 008b 00       		.align	2
 304              	.LC7:
 305 008c 50494420 		.ascii	"PID control on\012\000"
 305      636F6E74 
 305      726F6C20 
 305      6F6E0A00 
 306              		.align	2
 307              	.LC8:
 308 009c 50494420 		.ascii	"PID control off\012\000"
 308      636F6E74 
 308      726F6C20 
 308      6F66660A 
 308      00
 309 00ad 000000   		.align	2
 310              	.LC9:
 311 00b0 54444300 		.ascii	"TDC\000"
 312              		.align	2
 313              	.LC10:
 314 00b4 44697374 		.ascii	"Distance control on\012\000"
 314      616E6365 
 314      20636F6E 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 8


 314      74726F6C 
 314      206F6E0A 
 315 00c9 000000   		.align	2
 316              	.LC11:
 317 00cc 44697374 		.ascii	"Distance control off\012\000"
 317      616E6365 
 317      20636F6E 
 317      74726F6C 
 317      206F6666 
 318 00e2 0000     		.align	2
 319              	.LC12:
 320 00e4 54445300 		.ascii	"TDS\000"
 321              		.align	2
 322              	.LC13:
 323 00e8 44796E61 		.ascii	"Dynamic target speed update on\012\000"
 323      6D696320 
 323      74617267 
 323      65742073 
 323      70656564 
 324              		.align	2
 325              	.LC14:
 326 0108 44796E61 		.ascii	"Dynamic target speed update off\012\000"
 326      6D696320 
 326      74617267 
 326      65742073 
 326      70656564 
 327 0129 000000   		.align	2
 328              	.LC15:
 329 012c 435000   		.ascii	"CP\000"
 330 012f 00       		.align	2
 331              	.LC16:
 332 0130 50203D20 		.ascii	"P = %.2f\012\000"
 332      252E3266 
 332      0A00
 333 013a 0000     		.align	2
 334              	.LC17:
 335 013c 434900   		.ascii	"CI\000"
 336 013f 00       		.align	2
 337              	.LC18:
 338 0140 256C6600 		.ascii	"%lf\000"
 339              		.align	2
 340              	.LC19:
 341 0144 49203D20 		.ascii	"I = %.2f\012\000"
 341      252E3266 
 341      0A00
 342 014e 0000     		.align	2
 343              	.LC20:
 344 0150 434400   		.ascii	"CD\000"
 345 0153 00       		.align	2
 346              	.LC21:
 347 0154 44203D20 		.ascii	"D = %.2f\012\000"
 347      252E3266 
 347      0A00
 348 015e 0000     		.align	2
 349              	.LC22:
 350 0160 43535300 		.ascii	"CSS\000"
 351              		.align	2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 9


 352              	.LC23:
 353 0164 53532054 		.ascii	"SS Throttle = %i\012\000"
 353      68726F74 
 353      746C6520 
 353      3D202569 
 353      0A00
 354 0176 0000     		.align	2
 355              	.LC24:
 356 0178 43545300 		.ascii	"CTS\000"
 357              		.align	2
 358              	.LC25:
 359 017c 54617267 		.ascii	"Target Speed = %f ft/s\012\000"
 359      65742053 
 359      70656564 
 359      203D2025 
 359      66206674 
 360              		.align	2
 361              	.LC26:
 362 0194 43544400 		.ascii	"CTD\000"
 363              		.align	2
 364              	.LC27:
 365 0198 54617267 		.ascii	"Target distance = %.2f ft\012\000"
 365      65742064 
 365      69737461 
 365      6E636520 
 365      3D20252E 
 366 01b3 00       		.align	2
 367              	.LC28:
 368 01b4 54565000 		.ascii	"TVP\000"
 369              		.align	2
 370              	.LC29:
 371 01b8 56657262 		.ascii	"Verbose printout on\012\000"
 371      6F736520 
 371      7072696E 
 371      746F7574 
 371      206F6E0A 
 372 01cd 000000   		.align	2
 373              	.LC30:
 374 01d0 56657262 		.ascii	"Verbose printout off\012\000"
 374      6F736520 
 374      7072696E 
 374      746F7574 
 374      206F6666 
 375 01e6 0000     		.align	2
 376              	.LC31:
 377 01e8 4100     		.ascii	"A\000"
 378 01ea 0000     		.align	2
 379              	.LC32:
 380 01ec 474300   		.ascii	"GC\000"
 381 01ef 00       		.align	2
 382              	.LC33:
 383 01f0 4672616D 		.ascii	"Frame count = %d\012Row count = %d\012Comparator co"
 383      6520636F 
 383      756E7420 
 383      3D202564 
 383      0A526F77 
 384 021d 756E7473 		.ascii	"unts (begin) = %d\012Comparator counts (end) = %d\012"
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 10


 384      20286265 
 384      67696E29 
 384      203D2025 
 384      640A436F 
 385 024c 526F7720 		.ascii	"Row cycles = %d\012Line begin cycles = %d\012Line e"
 385      6379636C 
 385      6573203D 
 385      2025640A 
 385      4C696E65 
 386 0279 6E642063 		.ascii	"nd cycles = %d\012\000"
 386      79636C65 
 386      73203D20 
 386      25640A00 
 387 0289 000000   		.align	2
 388              	.LC34:
 389 028c 475400   		.ascii	"GT\000"
 390 028f 00       		.align	2
 391              	.LC35:
 392 0290 363A2025 		.ascii	"6: %d\0127: %d\0128: %d\0129: %d\012\012\000"
 392      640A373A 
 392      2025640A 
 392      383A2025 
 392      640A393A 
 393 02aa 0000     		.align	2
 394              	.LC36:
 395 02ac 524300   		.ascii	"RC\000"
 396 02af 00       		.align	2
 397              	.LC37:
 398 02b0 43616D65 		.ascii	"Camera variables reset\012\000"
 398      72612076 
 398      61726961 
 398      626C6573 
 398      20726573 
 399              		.align	2
 400              	.LC38:
 401 02c8 435300   		.ascii	"CS\000"
 402              		.global	__aeabi_dcmpgt
 403              		.global	__aeabi_dcmplt
 404              		.global	__aeabi_dsub
 405              		.global	__aeabi_dmul
 406              		.global	__aeabi_d2uiz
 407              		.global	__aeabi_ddiv
 408 02cb 00       		.align	2
 409              	.LC39:
 410 02cc 53657276 		.ascii	"Servo set to %.3f (%.3f ms)\012\000"
 410      6F207365 
 410      7420746F 
 410      20252E33 
 410      66202825 
 411              		.section	.text.parseMessage,"ax",%progbits
 412              		.align	2
 413              		.global	parseMessage
 414              		.thumb
 415              		.thumb_func
 416              		.type	parseMessage, %function
 417              	parseMessage:
 418              	.LFB31:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 11


  59:.\main.c      **** 
  60:.\main.c      **** /*
  61:.\main.c      ****  * parseMessage()
  62:.\main.c      ****  *
  63:.\main.c      ****  * Parse serial input string and act on it
  64:.\main.c      ****  *
  65:.\main.c      ****  * Inputs: message
  66:.\main.c      ****  * Returns: none
  67:.\main.c      ****  */
  68:.\main.c      **** void parseMessage(char *message) {
 419              		.loc 1 68 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 104
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 424              	.LCFI6:
 425              		.cfi_def_cfa_offset 36
 426 0004 A3B0     		sub	sp, sp, #140
 427              	.LCFI7:
 428              		.cfi_def_cfa_offset 176
 429 0006 08AF     		add	r7, sp, #32
 430              		.cfi_offset 14, -4
 431              		.cfi_offset 11, -8
 432              		.cfi_offset 10, -12
 433              		.cfi_offset 9, -16
 434              		.cfi_offset 8, -20
 435              		.cfi_offset 7, -24
 436              		.cfi_offset 6, -28
 437              		.cfi_offset 5, -32
 438              		.cfi_offset 4, -36
 439              	.LCFI8:
 440              		.cfi_def_cfa 7, 144
 441 0008 7860     		str	r0, [r7, #4]
  69:.\main.c      ****     if (message == NULL) return;
 442              		.loc 1 69 0
 443 000a 7B68     		ldr	r3, [r7, #4]
 444 000c 002B     		cmp	r3, #0
 445 000e 00F0AC84 		beq	.L59
 446              	.L6:
  70:.\main.c      ****     
  71:.\main.c      ****     char msgPrefix[4];
  72:.\main.c      ****     if (sscanf(message, "%3[A-Za-z]", msgPrefix) == 1) {
 447              		.loc 1 72 0
 448 0012 07F13803 		add	r3, r7, #56
 449 0016 7868     		ldr	r0, [r7, #4]
 450 0018 40F20001 		movw	r1, #:lower16:.LC0
 451 001c C0F20001 		movt	r1, #:upper16:.LC0
 452 0020 1A46     		mov	r2, r3
 453 0022 FFF7FEFF 		bl	sscanf
 454 0026 0346     		mov	r3, r0
 455 0028 012B     		cmp	r3, #1
 456 002a 40F09F84 		bne	.L58
 457              	.LBB2:
  73:.\main.c      ****         int prefixLen = strlen(msgPrefix);
 458              		.loc 1 73 0
 459 002e 07F13803 		add	r3, r7, #56
 460 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 12


 461 0034 FFF7FEFF 		bl	strlen
 462 0038 0346     		mov	r3, r0
 463 003a FB63     		str	r3, [r7, #60]
  74:.\main.c      ****         
  75:.\main.c      ****         // Messages of the form "CTx" (x integer) set the duty cycle to x out of MAX_THROTTLE
  76:.\main.c      ****         if (strcmp(msgPrefix, "CT") == 0) {
 464              		.loc 1 76 0
 465 003c 07F13803 		add	r3, r7, #56
 466 0040 1846     		mov	r0, r3
 467 0042 40F20001 		movw	r1, #:lower16:.LC1
 468 0046 C0F20001 		movt	r1, #:upper16:.LC1
 469 004a FFF7FEFF 		bl	strcmp
 470 004e 0346     		mov	r3, r0
 471 0050 002B     		cmp	r3, #0
 472 0052 2CD1     		bne	.L8
 473              	.LBB3:
  77:.\main.c      ****             int value = 0;
 474              		.loc 1 77 0
 475 0054 4FF00003 		mov	r3, #0
 476 0058 7B63     		str	r3, [r7, #52]
  78:.\main.c      ****             if (sscanf(message + prefixLen, "%i", &value) > 0) {
 477              		.loc 1 78 0
 478 005a FA6B     		ldr	r2, [r7, #60]
 479 005c 7B68     		ldr	r3, [r7, #4]
 480 005e 1A44     		add	r2, r2, r3
 481 0060 07F13403 		add	r3, r7, #52
 482 0064 1046     		mov	r0, r2
 483 0066 40F20001 		movw	r1, #:lower16:.LC2
 484 006a C0F20001 		movt	r1, #:upper16:.LC2
 485 006e 1A46     		mov	r2, r3
 486 0070 FFF7FEFF 		bl	sscanf
 487 0074 0346     		mov	r3, r0
 488 0076 002B     		cmp	r3, #0
 489 0078 03DD     		ble	.L9
  79:.\main.c      ****                 SpeedControl_setThrottle(value);
 490              		.loc 1 79 0
 491 007a 7B6B     		ldr	r3, [r7, #52]
 492 007c 1846     		mov	r0, r3
 493 007e FFF7FEFF 		bl	SpeedControl_setThrottle
 494              	.L9:
  80:.\main.c      ****             }
  81:.\main.c      ****             sprintf(strbuffer, "Throttle = %i\n", SpeedControl_getThrottle());
 495              		.loc 1 81 0
 496 0082 FFF7FEFF 		bl	SpeedControl_getThrottle
 497 0086 0346     		mov	r3, r0
 498 0088 40F20000 		movw	r0, #:lower16:strbuffer
 499 008c C0F20000 		movt	r0, #:upper16:strbuffer
 500 0090 40F20001 		movw	r1, #:lower16:.LC3
 501 0094 C0F20001 		movt	r1, #:upper16:.LC3
 502 0098 1A46     		mov	r2, r3
 503 009a FFF7FEFF 		bl	sprintf
  82:.\main.c      ****             UART_PutString(strbuffer);
 504              		.loc 1 82 0
 505 009e 40F20000 		movw	r0, #:lower16:strbuffer
 506 00a2 C0F20000 		movt	r0, #:upper16:strbuffer
 507 00a6 FFF7FEFF 		bl	UART_PutString
 508 00aa 00F05FBC 		b	.L58
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 13


 509              	.L8:
 510              	.LBE3:
  83:.\main.c      ****         }
  84:.\main.c      ****         
  85:.\main.c      ****         // Messages beginning with "G" return the throttle, speed, and PID controls
  86:.\main.c      ****         else if (strcmp(msgPrefix, "G") == 0) {
 511              		.loc 1 86 0
 512 00ae 07F13803 		add	r3, r7, #56
 513 00b2 1846     		mov	r0, r3
 514 00b4 40F20001 		movw	r1, #:lower16:.LC4
 515 00b8 C0F20001 		movt	r1, #:upper16:.LC4
 516 00bc FFF7FEFF 		bl	strcmp
 517 00c0 0346     		mov	r3, r0
 518 00c2 002B     		cmp	r3, #0
 519 00c4 2DD1     		bne	.L10
  87:.\main.c      ****             sprintf(strbuffer, "Throttle: %d\nSpeed: %f ft/s\nP = %.2f\tI = %.2f\tD = %.2f\n", 
 520              		.loc 1 87 0
 521 00c6 FFF7FEFF 		bl	SpeedControl_getThrottle
 522 00ca 0646     		mov	r6, r0
 523 00cc FFF7FEFF 		bl	SpeedControl_getSpeed
 524 00d0 8246     		mov	sl, r0
 525 00d2 8B46     		mov	fp, r1
 526 00d4 FFF7FEFF 		bl	SpeedControl_getP
 527 00d8 8046     		mov	r8, r0
 528 00da 8946     		mov	r9, r1
 529 00dc FFF7FEFF 		bl	SpeedControl_getI
 530 00e0 0446     		mov	r4, r0
 531 00e2 0D46     		mov	r5, r1
 532 00e4 FFF7FEFF 		bl	SpeedControl_getD
 533 00e8 0246     		mov	r2, r0
 534 00ea 0B46     		mov	r3, r1
 535 00ec CDE900AB 		strd	sl, [sp]
 536 00f0 CDE90289 		strd	r8, [sp, #8]
 537 00f4 CDE90445 		strd	r4, [sp, #16]
 538 00f8 CDE90623 		strd	r2, [sp, #24]
 539 00fc 40F20000 		movw	r0, #:lower16:strbuffer
 540 0100 C0F20000 		movt	r0, #:upper16:strbuffer
 541 0104 40F20001 		movw	r1, #:lower16:.LC5
 542 0108 C0F20001 		movt	r1, #:upper16:.LC5
 543 010c 3246     		mov	r2, r6
 544 010e FFF7FEFF 		bl	sprintf
  88:.\main.c      ****                     SpeedControl_getThrottle(), SpeedControl_getSpeed(), SpeedControl_getP(), 
  89:.\main.c      ****                     SpeedControl_getI(), SpeedControl_getD());
  90:.\main.c      ****             UART_PutString(strbuffer);
 545              		.loc 1 90 0
 546 0112 40F20000 		movw	r0, #:lower16:strbuffer
 547 0116 C0F20000 		movt	r0, #:upper16:strbuffer
 548 011a FFF7FEFF 		bl	UART_PutString
 549 011e 00F025BC 		b	.L58
 550              	.L10:
  91:.\main.c      ****         }
  92:.\main.c      ****         
  93:.\main.c      ****         // Messages beginning with "TP" toggle PID control
  94:.\main.c      ****         else if (strcmp(msgPrefix, "TP") == 0) {
 551              		.loc 1 94 0
 552 0122 07F13803 		add	r3, r7, #56
 553 0126 1846     		mov	r0, r3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 14


 554 0128 40F20001 		movw	r1, #:lower16:.LC6
 555 012c C0F20001 		movt	r1, #:upper16:.LC6
 556 0130 FFF7FEFF 		bl	strcmp
 557 0134 0346     		mov	r3, r0
 558 0136 002B     		cmp	r3, #0
 559 0138 1DD1     		bne	.L11
  95:.\main.c      ****             if (!SpeedControl_isEnabled()) {
 560              		.loc 1 95 0
 561 013a FFF7FEFF 		bl	SpeedControl_isEnabled
 562 013e 0346     		mov	r3, r0
 563 0140 002B     		cmp	r3, #0
 564 0142 02D1     		bne	.L12
  96:.\main.c      ****                 SpeedControl_enable();
 565              		.loc 1 96 0
 566 0144 FFF7FEFF 		bl	SpeedControl_enable
 567 0148 01E0     		b	.L13
 568              	.L12:
  97:.\main.c      ****             } else {
  98:.\main.c      ****                 SpeedControl_disable();
 569              		.loc 1 98 0
 570 014a FFF7FEFF 		bl	SpeedControl_disable
 571              	.L13:
  99:.\main.c      ****             }
 100:.\main.c      ****             if (SpeedControl_isEnabled()) {
 572              		.loc 1 100 0
 573 014e FFF7FEFF 		bl	SpeedControl_isEnabled
 574 0152 0346     		mov	r3, r0
 575 0154 002B     		cmp	r3, #0
 576 0156 07D0     		beq	.L14
 101:.\main.c      ****                 UART_PutString("PID control on\n");
 577              		.loc 1 101 0
 578 0158 40F20000 		movw	r0, #:lower16:.LC7
 579 015c C0F20000 		movt	r0, #:upper16:.LC7
 580 0160 FFF7FEFF 		bl	UART_PutString
 102:.\main.c      ****             } else {
 103:.\main.c      ****                 UART_PutString("PID control off\n");
 581              		.loc 1 103 0
 582 0164 00F002BC 		b	.L58
 583              	.L14:
 584 0168 40F20000 		movw	r0, #:lower16:.LC8
 585 016c C0F20000 		movt	r0, #:upper16:.LC8
 586 0170 FFF7FEFF 		bl	UART_PutString
 587 0174 FAE3     		b	.L58
 588              	.L11:
 104:.\main.c      ****             }
 105:.\main.c      ****         }
 106:.\main.c      ****         
 107:.\main.c      ****         // Messages of the form "TPT" toggle distance control
 108:.\main.c      ****         else if (strcmp(msgPrefix, "TDC") == 0) {
 589              		.loc 1 108 0
 590 0176 07F13803 		add	r3, r7, #56
 591 017a 1846     		mov	r0, r3
 592 017c 40F20001 		movw	r1, #:lower16:.LC9
 593 0180 C0F20001 		movt	r1, #:upper16:.LC9
 594 0184 FFF7FEFF 		bl	strcmp
 595 0188 0346     		mov	r3, r0
 596 018a 002B     		cmp	r3, #0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 15


 597 018c 1CD1     		bne	.L16
 109:.\main.c      ****             if (!SpeedControl_isDistanceControlEnabled()) {
 598              		.loc 1 109 0
 599 018e FFF7FEFF 		bl	SpeedControl_isDistanceControlEnabled
 600 0192 0346     		mov	r3, r0
 601 0194 002B     		cmp	r3, #0
 602 0196 02D1     		bne	.L17
 110:.\main.c      ****                 SpeedControl_enableDistanceControl();
 603              		.loc 1 110 0
 604 0198 FFF7FEFF 		bl	SpeedControl_enableDistanceControl
 605 019c 01E0     		b	.L18
 606              	.L17:
 111:.\main.c      ****             } else {
 112:.\main.c      ****                 SpeedControl_disableDistanceControl();
 607              		.loc 1 112 0
 608 019e FFF7FEFF 		bl	SpeedControl_disableDistanceControl
 609              	.L18:
 113:.\main.c      ****             }
 114:.\main.c      ****             if (SpeedControl_isDistanceControlEnabled()) {
 610              		.loc 1 114 0
 611 01a2 FFF7FEFF 		bl	SpeedControl_isDistanceControlEnabled
 612 01a6 0346     		mov	r3, r0
 613 01a8 002B     		cmp	r3, #0
 614 01aa 06D0     		beq	.L19
 115:.\main.c      ****                 UART_PutString("Distance control on\n");
 615              		.loc 1 115 0
 616 01ac 40F20000 		movw	r0, #:lower16:.LC10
 617 01b0 C0F20000 		movt	r0, #:upper16:.LC10
 618 01b4 FFF7FEFF 		bl	UART_PutString
 116:.\main.c      ****             } else {
 117:.\main.c      ****                 UART_PutString("Distance control off\n");
 619              		.loc 1 117 0
 620 01b8 D8E3     		b	.L58
 621              	.L19:
 622 01ba 40F20000 		movw	r0, #:lower16:.LC11
 623 01be C0F20000 		movt	r0, #:upper16:.LC11
 624 01c2 FFF7FEFF 		bl	UART_PutString
 625 01c6 D1E3     		b	.L58
 626              	.L16:
 118:.\main.c      ****             }
 119:.\main.c      ****         }
 120:.\main.c      ****         
 121:.\main.c      ****         // Messages beginning with "TDS" toggle whether we dynamically update target speed to reach
 122:.\main.c      ****         else if (strcmp(msgPrefix, "TDS") == 0) {
 627              		.loc 1 122 0
 628 01c8 07F13803 		add	r3, r7, #56
 629 01cc 1846     		mov	r0, r3
 630 01ce 40F20001 		movw	r1, #:lower16:.LC12
 631 01d2 C0F20001 		movt	r1, #:upper16:.LC12
 632 01d6 FFF7FEFF 		bl	strcmp
 633 01da 0346     		mov	r3, r0
 634 01dc 002B     		cmp	r3, #0
 635 01de 1CD1     		bne	.L21
 123:.\main.c      ****             if (!SpeedControl_isDynamicTargetUpdateEnabled()) {
 636              		.loc 1 123 0
 637 01e0 FFF7FEFF 		bl	SpeedControl_isDynamicTargetUpdateEnabled
 638 01e4 0346     		mov	r3, r0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 16


 639 01e6 002B     		cmp	r3, #0
 640 01e8 02D1     		bne	.L22
 124:.\main.c      ****                 SpeedControl_enableDynamicTargetUpdate();
 641              		.loc 1 124 0
 642 01ea FFF7FEFF 		bl	SpeedControl_enableDynamicTargetUpdate
 643 01ee 01E0     		b	.L23
 644              	.L22:
 125:.\main.c      ****             } else {
 126:.\main.c      ****                 SpeedControl_disableDynamicTargetUpdate();
 645              		.loc 1 126 0
 646 01f0 FFF7FEFF 		bl	SpeedControl_disableDynamicTargetUpdate
 647              	.L23:
 127:.\main.c      ****             }
 128:.\main.c      ****             if (SpeedControl_isDynamicTargetUpdateEnabled()) {
 648              		.loc 1 128 0
 649 01f4 FFF7FEFF 		bl	SpeedControl_isDynamicTargetUpdateEnabled
 650 01f8 0346     		mov	r3, r0
 651 01fa 002B     		cmp	r3, #0
 652 01fc 06D0     		beq	.L24
 129:.\main.c      ****                 UART_PutString("Dynamic target speed update on\n");
 653              		.loc 1 129 0
 654 01fe 40F20000 		movw	r0, #:lower16:.LC13
 655 0202 C0F20000 		movt	r0, #:upper16:.LC13
 656 0206 FFF7FEFF 		bl	UART_PutString
 130:.\main.c      ****             } else {
 131:.\main.c      ****                 UART_PutString("Dynamic target speed update off\n");
 657              		.loc 1 131 0
 658 020a AFE3     		b	.L58
 659              	.L24:
 660 020c 40F20000 		movw	r0, #:lower16:.LC14
 661 0210 C0F20000 		movt	r0, #:upper16:.LC14
 662 0214 FFF7FEFF 		bl	UART_PutString
 663 0218 A8E3     		b	.L58
 664              	.L21:
 132:.\main.c      ****             }
 133:.\main.c      ****         }
 134:.\main.c      ****         
 135:.\main.c      ****         // Messages of the form "CPx" (x integer) change the proportional term to x
 136:.\main.c      ****         else if (strcmp(msgPrefix, "CP") == 0) {
 665              		.loc 1 136 0
 666 021a 07F13803 		add	r3, r7, #56
 667 021e 1846     		mov	r0, r3
 668 0220 40F20001 		movw	r1, #:lower16:.LC15
 669 0224 C0F20001 		movt	r1, #:upper16:.LC15
 670 0228 FFF7FEFF 		bl	strcmp
 671 022c 0346     		mov	r3, r0
 672 022e 002B     		cmp	r3, #0
 673 0230 31D1     		bne	.L26
 674              	.LBB4:
 137:.\main.c      ****             int value = 0;
 675              		.loc 1 137 0
 676 0232 4FF00003 		mov	r3, #0
 677 0236 3B63     		str	r3, [r7, #48]
 138:.\main.c      ****             if (sscanf(message + prefixLen, "%i", &value) > 0) {
 678              		.loc 1 138 0
 679 0238 FA6B     		ldr	r2, [r7, #60]
 680 023a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 17


 681 023c 1A44     		add	r2, r2, r3
 682 023e 07F13003 		add	r3, r7, #48
 683 0242 1046     		mov	r0, r2
 684 0244 40F20001 		movw	r1, #:lower16:.LC2
 685 0248 C0F20001 		movt	r1, #:upper16:.LC2
 686 024c 1A46     		mov	r2, r3
 687 024e FFF7FEFF 		bl	sscanf
 688 0252 0346     		mov	r3, r0
 689 0254 002B     		cmp	r3, #0
 690 0256 09DD     		ble	.L27
 139:.\main.c      ****                 SpeedControl_setP(value);
 691              		.loc 1 139 0
 692 0258 3B6B     		ldr	r3, [r7, #48]
 693 025a 1846     		mov	r0, r3
 694 025c FFF7FEFF 		bl	__aeabi_i2d
 695 0260 0246     		mov	r2, r0
 696 0262 0B46     		mov	r3, r1
 697 0264 1046     		mov	r0, r2
 698 0266 1946     		mov	r1, r3
 699 0268 FFF7FEFF 		bl	SpeedControl_setP
 700              	.L27:
 140:.\main.c      ****             }
 141:.\main.c      **** 
 142:.\main.c      ****             sprintf(strbuffer, "P = %.2f\n", SpeedControl_getP());
 701              		.loc 1 142 0
 702 026c FFF7FEFF 		bl	SpeedControl_getP
 703 0270 0246     		mov	r2, r0
 704 0272 0B46     		mov	r3, r1
 705 0274 40F20000 		movw	r0, #:lower16:strbuffer
 706 0278 C0F20000 		movt	r0, #:upper16:strbuffer
 707 027c 40F20001 		movw	r1, #:lower16:.LC16
 708 0280 C0F20001 		movt	r1, #:upper16:.LC16
 709 0284 FFF7FEFF 		bl	sprintf
 143:.\main.c      ****             UART_PutString(strbuffer);
 710              		.loc 1 143 0
 711 0288 40F20000 		movw	r0, #:lower16:strbuffer
 712 028c C0F20000 		movt	r0, #:upper16:strbuffer
 713 0290 FFF7FEFF 		bl	UART_PutString
 714 0294 6AE3     		b	.L58
 715              	.L26:
 716              	.LBE4:
 144:.\main.c      ****         }
 145:.\main.c      ****         
 146:.\main.c      ****         // Messages of the form "CIx" (x float) change the integral term to x
 147:.\main.c      ****         else if (strcmp(msgPrefix, "CI") == 0) {
 717              		.loc 1 147 0
 718 0296 07F13803 		add	r3, r7, #56
 719 029a 1846     		mov	r0, r3
 720 029c 40F20001 		movw	r1, #:lower16:.LC17
 721 02a0 C0F20001 		movt	r1, #:upper16:.LC17
 722 02a4 FFF7FEFF 		bl	strcmp
 723 02a8 0346     		mov	r3, r0
 724 02aa 002B     		cmp	r3, #0
 725 02ac 30D1     		bne	.L28
 726              	.LBB5:
 148:.\main.c      ****             double value = 0;
 727              		.loc 1 148 0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 18


 728 02ae 4FF00002 		mov	r2, #0
 729 02b2 4FF00003 		mov	r3, #0
 730 02b6 C7E90A23 		strd	r2, [r7, #40]
 149:.\main.c      ****             if (sscanf(message + prefixLen, "%lf", &value) > 0) {
 731              		.loc 1 149 0
 732 02ba FA6B     		ldr	r2, [r7, #60]
 733 02bc 7B68     		ldr	r3, [r7, #4]
 734 02be 1A44     		add	r2, r2, r3
 735 02c0 07F12803 		add	r3, r7, #40
 736 02c4 1046     		mov	r0, r2
 737 02c6 40F20001 		movw	r1, #:lower16:.LC18
 738 02ca C0F20001 		movt	r1, #:upper16:.LC18
 739 02ce 1A46     		mov	r2, r3
 740 02d0 FFF7FEFF 		bl	sscanf
 741 02d4 0346     		mov	r3, r0
 742 02d6 002B     		cmp	r3, #0
 743 02d8 05DD     		ble	.L29
 150:.\main.c      ****                 SpeedControl_setI(value);
 744              		.loc 1 150 0
 745 02da D7E90A23 		ldrd	r2, [r7, #40]
 746 02de 1046     		mov	r0, r2
 747 02e0 1946     		mov	r1, r3
 748 02e2 FFF7FEFF 		bl	SpeedControl_setI
 749              	.L29:
 151:.\main.c      ****             }
 152:.\main.c      **** 
 153:.\main.c      ****             sprintf(strbuffer, "I = %.2f\n", SpeedControl_getI());
 750              		.loc 1 153 0
 751 02e6 FFF7FEFF 		bl	SpeedControl_getI
 752 02ea 0246     		mov	r2, r0
 753 02ec 0B46     		mov	r3, r1
 754 02ee 40F20000 		movw	r0, #:lower16:strbuffer
 755 02f2 C0F20000 		movt	r0, #:upper16:strbuffer
 756 02f6 40F20001 		movw	r1, #:lower16:.LC19
 757 02fa C0F20001 		movt	r1, #:upper16:.LC19
 758 02fe FFF7FEFF 		bl	sprintf
 154:.\main.c      ****             UART_PutString(strbuffer);
 759              		.loc 1 154 0
 760 0302 40F20000 		movw	r0, #:lower16:strbuffer
 761 0306 C0F20000 		movt	r0, #:upper16:strbuffer
 762 030a FFF7FEFF 		bl	UART_PutString
 763 030e 2DE3     		b	.L58
 764              	.L28:
 765              	.LBE5:
 155:.\main.c      ****         }
 156:.\main.c      ****         
 157:.\main.c      ****         // Messages of the form "CDx" (x integer) change the derivative term to x
 158:.\main.c      ****         else if (strcmp(msgPrefix, "CD") == 0) {
 766              		.loc 1 158 0
 767 0310 07F13803 		add	r3, r7, #56
 768 0314 1846     		mov	r0, r3
 769 0316 40F20001 		movw	r1, #:lower16:.LC20
 770 031a C0F20001 		movt	r1, #:upper16:.LC20
 771 031e FFF7FEFF 		bl	strcmp
 772 0322 0346     		mov	r3, r0
 773 0324 002B     		cmp	r3, #0
 774 0326 31D1     		bne	.L30
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 19


 775              	.LBB6:
 159:.\main.c      ****             int value = 0;
 776              		.loc 1 159 0
 777 0328 4FF00003 		mov	r3, #0
 778 032c 7B62     		str	r3, [r7, #36]
 160:.\main.c      ****             if (sscanf(message + prefixLen, "%i", &value) > 0) {
 779              		.loc 1 160 0
 780 032e FA6B     		ldr	r2, [r7, #60]
 781 0330 7B68     		ldr	r3, [r7, #4]
 782 0332 1A44     		add	r2, r2, r3
 783 0334 07F12403 		add	r3, r7, #36
 784 0338 1046     		mov	r0, r2
 785 033a 40F20001 		movw	r1, #:lower16:.LC2
 786 033e C0F20001 		movt	r1, #:upper16:.LC2
 787 0342 1A46     		mov	r2, r3
 788 0344 FFF7FEFF 		bl	sscanf
 789 0348 0346     		mov	r3, r0
 790 034a 002B     		cmp	r3, #0
 791 034c 09DD     		ble	.L31
 161:.\main.c      ****                 SpeedControl_setD(value);
 792              		.loc 1 161 0
 793 034e 7B6A     		ldr	r3, [r7, #36]
 794 0350 1846     		mov	r0, r3
 795 0352 FFF7FEFF 		bl	__aeabi_i2d
 796 0356 0246     		mov	r2, r0
 797 0358 0B46     		mov	r3, r1
 798 035a 1046     		mov	r0, r2
 799 035c 1946     		mov	r1, r3
 800 035e FFF7FEFF 		bl	SpeedControl_setD
 801              	.L31:
 162:.\main.c      ****             }
 163:.\main.c      **** 
 164:.\main.c      ****             sprintf(strbuffer, "D = %.2f\n", SpeedControl_getD());
 802              		.loc 1 164 0
 803 0362 FFF7FEFF 		bl	SpeedControl_getD
 804 0366 0246     		mov	r2, r0
 805 0368 0B46     		mov	r3, r1
 806 036a 40F20000 		movw	r0, #:lower16:strbuffer
 807 036e C0F20000 		movt	r0, #:upper16:strbuffer
 808 0372 40F20001 		movw	r1, #:lower16:.LC21
 809 0376 C0F20001 		movt	r1, #:upper16:.LC21
 810 037a FFF7FEFF 		bl	sprintf
 165:.\main.c      ****             UART_PutString(strbuffer);
 811              		.loc 1 165 0
 812 037e 40F20000 		movw	r0, #:lower16:strbuffer
 813 0382 C0F20000 		movt	r0, #:upper16:strbuffer
 814 0386 FFF7FEFF 		bl	UART_PutString
 815 038a EFE2     		b	.L58
 816              	.L30:
 817              	.LBE6:
 166:.\main.c      ****         }
 167:.\main.c      ****         
 168:.\main.c      ****         // Messages of the form "CSSx" (x integer) change steady state throttle to x
 169:.\main.c      ****          else if (strcmp(msgPrefix, "CSS") == 0) {
 818              		.loc 1 169 0
 819 038c 07F13803 		add	r3, r7, #56
 820 0390 1846     		mov	r0, r3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 20


 821 0392 40F20001 		movw	r1, #:lower16:.LC22
 822 0396 C0F20001 		movt	r1, #:upper16:.LC22
 823 039a FFF7FEFF 		bl	strcmp
 824 039e 0346     		mov	r3, r0
 825 03a0 002B     		cmp	r3, #0
 826 03a2 2BD1     		bne	.L32
 827              	.LBB7:
 170:.\main.c      ****             int value = 0;
 828              		.loc 1 170 0
 829 03a4 4FF00003 		mov	r3, #0
 830 03a8 3B62     		str	r3, [r7, #32]
 171:.\main.c      ****             if (sscanf(message + prefixLen, "%i", &value) > 0) {
 831              		.loc 1 171 0
 832 03aa FA6B     		ldr	r2, [r7, #60]
 833 03ac 7B68     		ldr	r3, [r7, #4]
 834 03ae 1A44     		add	r2, r2, r3
 835 03b0 07F12003 		add	r3, r7, #32
 836 03b4 1046     		mov	r0, r2
 837 03b6 40F20001 		movw	r1, #:lower16:.LC2
 838 03ba C0F20001 		movt	r1, #:upper16:.LC2
 839 03be 1A46     		mov	r2, r3
 840 03c0 FFF7FEFF 		bl	sscanf
 841 03c4 0346     		mov	r3, r0
 842 03c6 002B     		cmp	r3, #0
 843 03c8 03DD     		ble	.L33
 172:.\main.c      ****                 SpeedControl_setSteadyStateThrottle(value);
 844              		.loc 1 172 0
 845 03ca 3B6A     		ldr	r3, [r7, #32]
 846 03cc 1846     		mov	r0, r3
 847 03ce FFF7FEFF 		bl	SpeedControl_setSteadyStateThrottle
 848              	.L33:
 173:.\main.c      ****             }
 174:.\main.c      ****             
 175:.\main.c      ****             sprintf(strbuffer, "SS Throttle = %i\n", SpeedControl_getSteadyStateThrottle());
 849              		.loc 1 175 0
 850 03d2 FFF7FEFF 		bl	SpeedControl_getSteadyStateThrottle
 851 03d6 0346     		mov	r3, r0
 852 03d8 40F20000 		movw	r0, #:lower16:strbuffer
 853 03dc C0F20000 		movt	r0, #:upper16:strbuffer
 854 03e0 40F20001 		movw	r1, #:lower16:.LC23
 855 03e4 C0F20001 		movt	r1, #:upper16:.LC23
 856 03e8 1A46     		mov	r2, r3
 857 03ea FFF7FEFF 		bl	sprintf
 176:.\main.c      ****             UART_PutString(strbuffer);
 858              		.loc 1 176 0
 859 03ee 40F20000 		movw	r0, #:lower16:strbuffer
 860 03f2 C0F20000 		movt	r0, #:upper16:strbuffer
 861 03f6 FFF7FEFF 		bl	UART_PutString
 862 03fa B7E2     		b	.L58
 863              	.L32:
 864              	.LBE7:
 177:.\main.c      ****         }
 178:.\main.c      ****         
 179:.\main.c      ****         // Messages of the form "CTSx" (x float) change target speed to x ft/s
 180:.\main.c      ****         else if (strcmp(msgPrefix, "CTS") == 0) {
 865              		.loc 1 180 0
 866 03fc 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 21


 867 0400 1846     		mov	r0, r3
 868 0402 40F20001 		movw	r1, #:lower16:.LC24
 869 0406 C0F20001 		movt	r1, #:upper16:.LC24
 870 040a FFF7FEFF 		bl	strcmp
 871 040e 0346     		mov	r3, r0
 872 0410 002B     		cmp	r3, #0
 873 0412 30D1     		bne	.L34
 874              	.LBB8:
 181:.\main.c      ****             double value = 0;
 875              		.loc 1 181 0
 876 0414 4FF00002 		mov	r2, #0
 877 0418 4FF00003 		mov	r3, #0
 878 041c C7E90623 		strd	r2, [r7, #24]
 182:.\main.c      ****             if (sscanf(message + prefixLen, "%lf", &value) > 0) {
 879              		.loc 1 182 0
 880 0420 FA6B     		ldr	r2, [r7, #60]
 881 0422 7B68     		ldr	r3, [r7, #4]
 882 0424 1A44     		add	r2, r2, r3
 883 0426 07F11803 		add	r3, r7, #24
 884 042a 1046     		mov	r0, r2
 885 042c 40F20001 		movw	r1, #:lower16:.LC18
 886 0430 C0F20001 		movt	r1, #:upper16:.LC18
 887 0434 1A46     		mov	r2, r3
 888 0436 FFF7FEFF 		bl	sscanf
 889 043a 0346     		mov	r3, r0
 890 043c 002B     		cmp	r3, #0
 891 043e 05DD     		ble	.L35
 183:.\main.c      ****                 SpeedControl_setTargetSpeed(value);
 892              		.loc 1 183 0
 893 0440 D7E90623 		ldrd	r2, [r7, #24]
 894 0444 1046     		mov	r0, r2
 895 0446 1946     		mov	r1, r3
 896 0448 FFF7FEFF 		bl	SpeedControl_setTargetSpeed
 897              	.L35:
 184:.\main.c      ****             }
 185:.\main.c      ****             
 186:.\main.c      ****             sprintf(strbuffer, "Target Speed = %f ft/s\n", SpeedControl_getTargetSpeed());
 898              		.loc 1 186 0
 899 044c FFF7FEFF 		bl	SpeedControl_getTargetSpeed
 900 0450 0246     		mov	r2, r0
 901 0452 0B46     		mov	r3, r1
 902 0454 40F20000 		movw	r0, #:lower16:strbuffer
 903 0458 C0F20000 		movt	r0, #:upper16:strbuffer
 904 045c 40F20001 		movw	r1, #:lower16:.LC25
 905 0460 C0F20001 		movt	r1, #:upper16:.LC25
 906 0464 FFF7FEFF 		bl	sprintf
 187:.\main.c      ****             UART_PutString(strbuffer);
 907              		.loc 1 187 0
 908 0468 40F20000 		movw	r0, #:lower16:strbuffer
 909 046c C0F20000 		movt	r0, #:upper16:strbuffer
 910 0470 FFF7FEFF 		bl	UART_PutString
 911 0474 7AE2     		b	.L58
 912              	.L34:
 913              	.LBE8:
 188:.\main.c      ****         }
 189:.\main.c      ****         
 190:.\main.c      ****         // Messages of the form "CTDx" (x float) change target distance to x ft
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 22


 191:.\main.c      ****         else if (strcmp(msgPrefix, "CTD") == 0) {
 914              		.loc 1 191 0
 915 0476 07F13803 		add	r3, r7, #56
 916 047a 1846     		mov	r0, r3
 917 047c 40F20001 		movw	r1, #:lower16:.LC26
 918 0480 C0F20001 		movt	r1, #:upper16:.LC26
 919 0484 FFF7FEFF 		bl	strcmp
 920 0488 0346     		mov	r3, r0
 921 048a 002B     		cmp	r3, #0
 922 048c 30D1     		bne	.L36
 923              	.LBB9:
 192:.\main.c      ****             double value = 0;
 924              		.loc 1 192 0
 925 048e 4FF00002 		mov	r2, #0
 926 0492 4FF00003 		mov	r3, #0
 927 0496 C7E90423 		strd	r2, [r7, #16]
 193:.\main.c      ****             if (sscanf(message + prefixLen, "%lf", &value) > 0) {
 928              		.loc 1 193 0
 929 049a FA6B     		ldr	r2, [r7, #60]
 930 049c 7B68     		ldr	r3, [r7, #4]
 931 049e 1A44     		add	r2, r2, r3
 932 04a0 07F11003 		add	r3, r7, #16
 933 04a4 1046     		mov	r0, r2
 934 04a6 40F20001 		movw	r1, #:lower16:.LC18
 935 04aa C0F20001 		movt	r1, #:upper16:.LC18
 936 04ae 1A46     		mov	r2, r3
 937 04b0 FFF7FEFF 		bl	sscanf
 938 04b4 0346     		mov	r3, r0
 939 04b6 002B     		cmp	r3, #0
 940 04b8 05DD     		ble	.L37
 194:.\main.c      ****                 SpeedControl_setTargetDistance(value);
 941              		.loc 1 194 0
 942 04ba D7E90423 		ldrd	r2, [r7, #16]
 943 04be 1046     		mov	r0, r2
 944 04c0 1946     		mov	r1, r3
 945 04c2 FFF7FEFF 		bl	SpeedControl_setTargetDistance
 946              	.L37:
 195:.\main.c      ****             }
 196:.\main.c      ****             
 197:.\main.c      ****             sprintf(strbuffer, "Target distance = %.2f ft\n", SpeedControl_getTargetDistance());
 947              		.loc 1 197 0
 948 04c6 FFF7FEFF 		bl	SpeedControl_getTargetDistance
 949 04ca 0246     		mov	r2, r0
 950 04cc 0B46     		mov	r3, r1
 951 04ce 40F20000 		movw	r0, #:lower16:strbuffer
 952 04d2 C0F20000 		movt	r0, #:upper16:strbuffer
 953 04d6 40F20001 		movw	r1, #:lower16:.LC27
 954 04da C0F20001 		movt	r1, #:upper16:.LC27
 955 04de FFF7FEFF 		bl	sprintf
 198:.\main.c      ****             UART_PutString(strbuffer);
 956              		.loc 1 198 0
 957 04e2 40F20000 		movw	r0, #:lower16:strbuffer
 958 04e6 C0F20000 		movt	r0, #:upper16:strbuffer
 959 04ea FFF7FEFF 		bl	UART_PutString
 960 04ee 3DE2     		b	.L58
 961              	.L36:
 962              	.LBE9:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 23


 199:.\main.c      ****         }
 200:.\main.c      ****         
 201:.\main.c      ****         // Message of the form "TVP" toggle verbose printout for speed PID control
 202:.\main.c      ****         else if (strcmp(msgPrefix, "TVP") == 0) {
 963              		.loc 1 202 0
 964 04f0 07F13803 		add	r3, r7, #56
 965 04f4 1846     		mov	r0, r3
 966 04f6 40F20001 		movw	r1, #:lower16:.LC28
 967 04fa C0F20001 		movt	r1, #:upper16:.LC28
 968 04fe FFF7FEFF 		bl	strcmp
 969 0502 0346     		mov	r3, r0
 970 0504 002B     		cmp	r3, #0
 971 0506 1CD1     		bne	.L38
 203:.\main.c      ****             if (!SpeedControl_isVerbosePrintoutEnabled()) {
 972              		.loc 1 203 0
 973 0508 FFF7FEFF 		bl	SpeedControl_isVerbosePrintoutEnabled
 974 050c 0346     		mov	r3, r0
 975 050e 002B     		cmp	r3, #0
 976 0510 02D1     		bne	.L39
 204:.\main.c      ****                 SpeedControl_enableVerbosePrintout();
 977              		.loc 1 204 0
 978 0512 FFF7FEFF 		bl	SpeedControl_enableVerbosePrintout
 979 0516 01E0     		b	.L40
 980              	.L39:
 205:.\main.c      ****             } else {
 206:.\main.c      ****                 SpeedControl_disableVerbosePrintout();
 981              		.loc 1 206 0
 982 0518 FFF7FEFF 		bl	SpeedControl_disableVerbosePrintout
 983              	.L40:
 207:.\main.c      ****             }
 208:.\main.c      ****             if (SpeedControl_isVerbosePrintoutEnabled()) {
 984              		.loc 1 208 0
 985 051c FFF7FEFF 		bl	SpeedControl_isVerbosePrintoutEnabled
 986 0520 0346     		mov	r3, r0
 987 0522 002B     		cmp	r3, #0
 988 0524 06D0     		beq	.L41
 209:.\main.c      ****                 UART_PutString("Verbose printout on\n");
 989              		.loc 1 209 0
 990 0526 40F20000 		movw	r0, #:lower16:.LC29
 991 052a C0F20000 		movt	r0, #:upper16:.LC29
 992 052e FFF7FEFF 		bl	UART_PutString
 210:.\main.c      ****             } else {
 211:.\main.c      ****                 UART_PutString("Verbose printout off\n");
 993              		.loc 1 211 0
 994 0532 1BE2     		b	.L58
 995              	.L41:
 996 0534 40F20000 		movw	r0, #:lower16:.LC30
 997 0538 C0F20000 		movt	r0, #:upper16:.LC30
 998 053c FFF7FEFF 		bl	UART_PutString
 999 0540 14E2     		b	.L58
 1000              	.L38:
 212:.\main.c      ****             }
 213:.\main.c      ****         }
 214:.\main.c      ****         
 215:.\main.c      ****         // Messages starting with "A" will abort
 216:.\main.c      ****         else if (strcmp(msgPrefix, "A") == 0) {
 1001              		.loc 1 216 0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 24


 1002 0542 07F13803 		add	r3, r7, #56
 1003 0546 1846     		mov	r0, r3
 1004 0548 40F20001 		movw	r1, #:lower16:.LC31
 1005 054c C0F20001 		movt	r1, #:upper16:.LC31
 1006 0550 FFF7FEFF 		bl	strcmp
 1007 0554 0346     		mov	r3, r0
 1008 0556 002B     		cmp	r3, #0
 1009 0558 02D1     		bne	.L43
 217:.\main.c      ****             SpeedControl_kill();
 1010              		.loc 1 217 0
 1011 055a FFF7FEFF 		bl	SpeedControl_kill
 1012 055e 05E2     		b	.L58
 1013              	.L43:
 218:.\main.c      ****         }
 219:.\main.c      ****         
 220:.\main.c      ****         
 221:.\main.c      ****         
 222:.\main.c      ****         
 223:.\main.c      ****         
 224:.\main.c      ****         
 225:.\main.c      ****         
 226:.\main.c      ****         
 227:.\main.c      ****         
 228:.\main.c      ****         
 229:.\main.c      ****         
 230:.\main.c      ****         
 231:.\main.c      ****         
 232:.\main.c      ****         
 233:.\main.c      ****         
 234:.\main.c      ****         // Messages of the form "GC" retun all camera variables
 235:.\main.c      ****         else if (strcmp(msgPrefix, "GC") == 0) {
 1014              		.loc 1 235 0
 1015 0560 07F13803 		add	r3, r7, #56
 1016 0564 1846     		mov	r0, r3
 1017 0566 40F20001 		movw	r1, #:lower16:.LC32
 1018 056a C0F20001 		movt	r1, #:upper16:.LC32
 1019 056e FFF7FEFF 		bl	strcmp
 1020 0572 0346     		mov	r3, r0
 1021 0574 002B     		cmp	r3, #0
 1022 0576 3CD1     		bne	.L44
 236:.\main.c      ****             sprintf(strbuffer, "Frame count = %d\nRow count = %d\nComparator counts (begin) = %d\nC
 1023              		.loc 1 236 0
 1024 0578 40F20003 		movw	r3, #:lower16:numFrames
 1025 057c C0F20003 		movt	r3, #:upper16:numFrames
 1026 0580 1A68     		ldr	r2, [r3, #0]
 1027 0582 40F20003 		movw	r3, #:lower16:numRows
 1028 0586 C0F20003 		movt	r3, #:upper16:numRows
 1029 058a D3F800C0 		ldr	ip, [r3, #0]
 1030 058e 40F20003 		movw	r3, #:lower16:numCompBegin
 1031 0592 C0F20003 		movt	r3, #:upper16:numCompBegin
 1032 0596 1C68     		ldr	r4, [r3, #0]
 1033 0598 40F20003 		movw	r3, #:lower16:numCompEnd
 1034 059c C0F20003 		movt	r3, #:upper16:numCompEnd
 1035 05a0 D3F800E0 		ldr	lr, [r3, #0]
 1036 05a4 40F20003 		movw	r3, #:lower16:rowCycles
 1037 05a8 C0F20003 		movt	r3, #:upper16:rowCycles
 1038 05ac 1868     		ldr	r0, [r3, #0]
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 25


 1039 05ae 40F20003 		movw	r3, #:lower16:lineBeginCycles
 1040 05b2 C0F20003 		movt	r3, #:upper16:lineBeginCycles
 1041 05b6 1968     		ldr	r1, [r3, #0]
 1042 05b8 40F20003 		movw	r3, #:lower16:lineEndCycles
 1043 05bc C0F20003 		movt	r3, #:upper16:lineEndCycles
 1044 05c0 1B68     		ldr	r3, [r3, #0]
 1045 05c2 0094     		str	r4, [sp, #0]
 1046 05c4 CDF804E0 		str	lr, [sp, #4]
 1047 05c8 0290     		str	r0, [sp, #8]
 1048 05ca 0391     		str	r1, [sp, #12]
 1049 05cc 0493     		str	r3, [sp, #16]
 1050 05ce 40F20000 		movw	r0, #:lower16:strbuffer
 1051 05d2 C0F20000 		movt	r0, #:upper16:strbuffer
 1052 05d6 40F20001 		movw	r1, #:lower16:.LC33
 1053 05da C0F20001 		movt	r1, #:upper16:.LC33
 1054 05de 6346     		mov	r3, ip
 1055 05e0 FFF7FEFF 		bl	sprintf
 237:.\main.c      ****                     numFrames, numRows, numCompBegin, numCompEnd, rowCycles, lineBeginCycles, lineE
 238:.\main.c      ****             UART_PutString(strbuffer);
 1056              		.loc 1 238 0
 1057 05e4 40F20000 		movw	r0, #:lower16:strbuffer
 1058 05e8 C0F20000 		movt	r0, #:upper16:strbuffer
 1059 05ec FFF7FEFF 		bl	UART_PutString
 1060 05f0 BCE1     		b	.L58
 1061              	.L44:
 239:.\main.c      ****         }
 240:.\main.c      ****         
 241:.\main.c      ****         // Messages of the form "GT" retun all test variables
 242:.\main.c      ****         else if (strcmp(msgPrefix, "GT") == 0) {
 1062              		.loc 1 242 0
 1063 05f2 07F13803 		add	r3, r7, #56
 1064 05f6 1846     		mov	r0, r3
 1065 05f8 40F20001 		movw	r1, #:lower16:.LC34
 1066 05fc C0F20001 		movt	r1, #:upper16:.LC34
 1067 0600 FFF7FEFF 		bl	strcmp
 1068 0604 0346     		mov	r3, r0
 1069 0606 002B     		cmp	r3, #0
 1070 0608 28D1     		bne	.L45
 243:.\main.c      ****             sprintf(strbuffer, "6: %d\n7: %d\n8: %d\n9: %d\n\n", test6, test7, test8, test9);
 1071              		.loc 1 243 0
 1072 060a 40F20003 		movw	r3, #:lower16:test6
 1073 060e C0F20003 		movt	r3, #:upper16:test6
 1074 0612 1A68     		ldr	r2, [r3, #0]
 1075 0614 40F20003 		movw	r3, #:lower16:test7
 1076 0618 C0F20003 		movt	r3, #:upper16:test7
 1077 061c D3F800C0 		ldr	ip, [r3, #0]
 1078 0620 40F20003 		movw	r3, #:lower16:test8
 1079 0624 C0F20003 		movt	r3, #:upper16:test8
 1080 0628 1968     		ldr	r1, [r3, #0]
 1081 062a 40F20003 		movw	r3, #:lower16:test9
 1082 062e C0F20003 		movt	r3, #:upper16:test9
 1083 0632 1B68     		ldr	r3, [r3, #0]
 1084 0634 0091     		str	r1, [sp, #0]
 1085 0636 0193     		str	r3, [sp, #4]
 1086 0638 40F20000 		movw	r0, #:lower16:strbuffer
 1087 063c C0F20000 		movt	r0, #:upper16:strbuffer
 1088 0640 40F20001 		movw	r1, #:lower16:.LC35
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 26


 1089 0644 C0F20001 		movt	r1, #:upper16:.LC35
 1090 0648 6346     		mov	r3, ip
 1091 064a FFF7FEFF 		bl	sprintf
 244:.\main.c      ****             UART_PutString(strbuffer);
 1092              		.loc 1 244 0
 1093 064e 40F20000 		movw	r0, #:lower16:strbuffer
 1094 0652 C0F20000 		movt	r0, #:upper16:strbuffer
 1095 0656 FFF7FEFF 		bl	UART_PutString
 1096 065a 87E1     		b	.L58
 1097              	.L45:
 245:.\main.c      ****         }
 246:.\main.c      ****         
 247:.\main.c      ****         // Messages of the form "RC" resets camera variables
 248:.\main.c      ****         else if (strcmp(msgPrefix, "RC") == 0) {
 1098              		.loc 1 248 0
 1099 065c 07F13803 		add	r3, r7, #56
 1100 0660 1846     		mov	r0, r3
 1101 0662 40F20001 		movw	r1, #:lower16:.LC36
 1102 0666 C0F20001 		movt	r1, #:upper16:.LC36
 1103 066a FFF7FEFF 		bl	strcmp
 1104 066e 0346     		mov	r3, r0
 1105 0670 002B     		cmp	r3, #0
 1106 0672 37D1     		bne	.L46
 249:.\main.c      ****             numCompBegin = 0;
 1107              		.loc 1 249 0
 1108 0674 40F20003 		movw	r3, #:lower16:numCompBegin
 1109 0678 C0F20003 		movt	r3, #:upper16:numCompBegin
 1110 067c 4FF00002 		mov	r2, #0
 1111 0680 1A60     		str	r2, [r3, #0]
 250:.\main.c      ****             numCompEnd = 0;
 1112              		.loc 1 250 0
 1113 0682 40F20003 		movw	r3, #:lower16:numCompEnd
 1114 0686 C0F20003 		movt	r3, #:upper16:numCompEnd
 1115 068a 4FF00002 		mov	r2, #0
 1116 068e 1A60     		str	r2, [r3, #0]
 251:.\main.c      ****             numFrames = 0;
 1117              		.loc 1 251 0
 1118 0690 40F20003 		movw	r3, #:lower16:numFrames
 1119 0694 C0F20003 		movt	r3, #:upper16:numFrames
 1120 0698 4FF00002 		mov	r2, #0
 1121 069c 1A60     		str	r2, [r3, #0]
 252:.\main.c      ****             numRows = 0;
 1122              		.loc 1 252 0
 1123 069e 40F20003 		movw	r3, #:lower16:numRows
 1124 06a2 C0F20003 		movt	r3, #:upper16:numRows
 1125 06a6 4FF00002 		mov	r2, #0
 1126 06aa 1A60     		str	r2, [r3, #0]
 253:.\main.c      ****             
 254:.\main.c      ****             rowCycles = 0;
 1127              		.loc 1 254 0
 1128 06ac 40F20003 		movw	r3, #:lower16:rowCycles
 1129 06b0 C0F20003 		movt	r3, #:upper16:rowCycles
 1130 06b4 4FF00002 		mov	r2, #0
 1131 06b8 1A60     		str	r2, [r3, #0]
 255:.\main.c      ****             lineBeginCycles = 0;
 1132              		.loc 1 255 0
 1133 06ba 40F20003 		movw	r3, #:lower16:lineBeginCycles
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 27


 1134 06be C0F20003 		movt	r3, #:upper16:lineBeginCycles
 1135 06c2 4FF00002 		mov	r2, #0
 1136 06c6 1A60     		str	r2, [r3, #0]
 256:.\main.c      ****             lineEndCycles = 0;
 1137              		.loc 1 256 0
 1138 06c8 40F20003 		movw	r3, #:lower16:lineEndCycles
 1139 06cc C0F20003 		movt	r3, #:upper16:lineEndCycles
 1140 06d0 4FF00002 		mov	r2, #0
 1141 06d4 1A60     		str	r2, [r3, #0]
 257:.\main.c      ****             
 258:.\main.c      ****             UART_PutString("Camera variables reset\n");
 1142              		.loc 1 258 0
 1143 06d6 40F20000 		movw	r0, #:lower16:.LC37
 1144 06da C0F20000 		movt	r0, #:upper16:.LC37
 1145 06de FFF7FEFF 		bl	UART_PutString
 1146 06e2 43E1     		b	.L58
 1147              	.L46:
 259:.\main.c      ****         }
 260:.\main.c      ****         
 261:.\main.c      ****         // Messages of the form "CSx" change servo direction to x (0 is full left, 1 is full right)
 262:.\main.c      ****         else if (strcmp(msgPrefix, "CS") == 0) {
 1148              		.loc 1 262 0
 1149 06e4 07F13803 		add	r3, r7, #56
 1150 06e8 1846     		mov	r0, r3
 1151 06ea 40F20001 		movw	r1, #:lower16:.LC38
 1152 06ee C0F20001 		movt	r1, #:upper16:.LC38
 1153 06f2 FFF7FEFF 		bl	strcmp
 1154 06f6 0346     		mov	r3, r0
 1155 06f8 002B     		cmp	r3, #0
 1156 06fa 40F03781 		bne	.L58
 1157              	.LBB10:
 263:.\main.c      ****             double value = 0;
 1158              		.loc 1 263 0
 1159 06fe 4FF00002 		mov	r2, #0
 1160 0702 4FF00003 		mov	r3, #0
 1161 0706 C7E90223 		strd	r2, [r7, #8]
 264:.\main.c      ****             if (sscanf(message + prefixLen, "%lf", &value) > 0) {
 1162              		.loc 1 264 0
 1163 070a FA6B     		ldr	r2, [r7, #60]
 1164 070c 7B68     		ldr	r3, [r7, #4]
 1165 070e 1A44     		add	r2, r2, r3
 1166 0710 07F10803 		add	r3, r7, #8
 1167 0714 1046     		mov	r0, r2
 1168 0716 40F20001 		movw	r1, #:lower16:.LC18
 1169 071a C0F20001 		movt	r1, #:upper16:.LC18
 1170 071e 1A46     		mov	r2, r3
 1171 0720 FFF7FEFF 		bl	sscanf
 1172 0724 0346     		mov	r3, r0
 1173 0726 002B     		cmp	r3, #0
 1174 0728 40F3C680 		ble	.L47
 1175              	.LBB11:
 265:.\main.c      ****                 if (value > 1) value = 1;
 1176              		.loc 1 265 0
 1177 072c D7E90223 		ldrd	r2, [r7, #8]
 1178 0730 4FF00001 		mov	r1, #0
 1179 0734 0C46     		mov	r4, r1
 1180 0736 1046     		mov	r0, r2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 28


 1181 0738 1946     		mov	r1, r3
 1182 073a 4FF00002 		mov	r2, #0
 1183 073e 4FF07E53 		mov	r3, #1065353216
 1184 0742 03F5E003 		add	r3, r3, #7340032
 1185 0746 FFF7FEFF 		bl	__aeabi_dcmpgt
 1186 074a 0346     		mov	r3, r0
 1187 074c 002B     		cmp	r3, #0
 1188 074e 02D0     		beq	.L48
 1189              	.L49:
 1190 0750 4FF00103 		mov	r3, #1
 1191 0754 1C46     		mov	r4, r3
 1192              	.L48:
 1193 0756 E3B2     		uxtb	r3, r4
 1194 0758 002B     		cmp	r3, #0
 1195 075a 07D0     		beq	.L50
 1196 075c 4FF00002 		mov	r2, #0
 1197 0760 4FF07E53 		mov	r3, #1065353216
 1198 0764 03F5E003 		add	r3, r3, #7340032
 1199 0768 C7E90223 		strd	r2, [r7, #8]
 1200              	.L50:
 266:.\main.c      ****                 if (value < 0) value = 0;
 1201              		.loc 1 266 0
 1202 076c D7E90223 		ldrd	r2, [r7, #8]
 1203 0770 4FF00001 		mov	r1, #0
 1204 0774 0C46     		mov	r4, r1
 1205 0776 1046     		mov	r0, r2
 1206 0778 1946     		mov	r1, r3
 1207 077a 4FF00002 		mov	r2, #0
 1208 077e 4FF00003 		mov	r3, #0
 1209 0782 FFF7FEFF 		bl	__aeabi_dcmplt
 1210 0786 0346     		mov	r3, r0
 1211 0788 002B     		cmp	r3, #0
 1212 078a 02D0     		beq	.L51
 1213              	.L52:
 1214 078c 4FF00103 		mov	r3, #1
 1215 0790 1C46     		mov	r4, r3
 1216              	.L51:
 1217 0792 E3B2     		uxtb	r3, r4
 1218 0794 002B     		cmp	r3, #0
 1219 0796 05D0     		beq	.L53
 1220 0798 4FF00002 		mov	r2, #0
 1221 079c 4FF00003 		mov	r3, #0
 1222 07a0 C7E90223 		strd	r2, [r7, #8]
 1223              	.L53:
 267:.\main.c      ****                 double servoTime = MIN_TIME_SERVO + (MAX_TIME_SERVO - MIN_TIME_SERVO) * value;
 1224              		.loc 1 267 0
 1225 07a4 40F20003 		movw	r3, #:lower16:MAX_TIME_SERVO
 1226 07a8 C0F20003 		movt	r3, #:upper16:MAX_TIME_SERVO
 1227 07ac D3E90001 		ldrd	r0, [r3]
 1228 07b0 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1229 07b4 C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1230 07b8 D3E90023 		ldrd	r2, [r3]
 1231 07bc FFF7FEFF 		bl	__aeabi_dsub
 1232 07c0 0246     		mov	r2, r0
 1233 07c2 0B46     		mov	r3, r1
 1234 07c4 1046     		mov	r0, r2
 1235 07c6 1946     		mov	r1, r3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 29


 1236 07c8 D7E90223 		ldrd	r2, [r7, #8]
 1237 07cc FFF7FEFF 		bl	__aeabi_dmul
 1238 07d0 0246     		mov	r2, r0
 1239 07d2 0B46     		mov	r3, r1
 1240 07d4 1046     		mov	r0, r2
 1241 07d6 1946     		mov	r1, r3
 1242 07d8 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1243 07dc C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1244 07e0 D3E90023 		ldrd	r2, [r3]
 1245 07e4 FFF7FEFF 		bl	__aeabi_dadd
 1246 07e8 0246     		mov	r2, r0
 1247 07ea 0B46     		mov	r3, r1
 1248 07ec C7E91423 		strd	r2, [r7, #80]
 268:.\main.c      ****                 double servoPeriod = servoTime * MAIN_CLK_FREQ;
 1249              		.loc 1 268 0
 1250 07f0 40F20003 		movw	r3, #:lower16:MAIN_CLK_FREQ
 1251 07f4 C0F20003 		movt	r3, #:upper16:MAIN_CLK_FREQ
 1252 07f8 D3E90023 		ldrd	r2, [r3]
 1253 07fc D7E91401 		ldrd	r0, [r7, #80]
 1254 0800 FFF7FEFF 		bl	__aeabi_dmul
 1255 0804 0246     		mov	r2, r0
 1256 0806 0B46     		mov	r3, r1
 1257 0808 C7E91623 		strd	r2, [r7, #88]
 269:.\main.c      ****                 double midPeriod = 0.5*(MAX_TIME_SERVO + MIN_TIME_SERVO) * MAIN_CLK_FREQ;
 1258              		.loc 1 269 0
 1259 080c 40F20003 		movw	r3, #:lower16:MAX_TIME_SERVO
 1260 0810 C0F20003 		movt	r3, #:upper16:MAX_TIME_SERVO
 1261 0814 D3E90001 		ldrd	r0, [r3]
 1262 0818 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1263 081c C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1264 0820 D3E90023 		ldrd	r2, [r3]
 1265 0824 FFF7FEFF 		bl	__aeabi_dadd
 1266 0828 0246     		mov	r2, r0
 1267 082a 0B46     		mov	r3, r1
 1268 082c 1046     		mov	r0, r2
 1269 082e 1946     		mov	r1, r3
 1270 0830 4FF00002 		mov	r2, #0
 1271 0834 4FF07E53 		mov	r3, #1065353216
 1272 0838 03F5C003 		add	r3, r3, #6291456
 1273 083c FFF7FEFF 		bl	__aeabi_dmul
 1274 0840 0246     		mov	r2, r0
 1275 0842 0B46     		mov	r3, r1
 1276 0844 1046     		mov	r0, r2
 1277 0846 1946     		mov	r1, r3
 1278 0848 40F20003 		movw	r3, #:lower16:MAIN_CLK_FREQ
 1279 084c C0F20003 		movt	r3, #:upper16:MAIN_CLK_FREQ
 1280 0850 D3E90023 		ldrd	r2, [r3]
 1281 0854 FFF7FEFF 		bl	__aeabi_dmul
 1282 0858 0246     		mov	r2, r0
 1283 085a 0B46     		mov	r3, r1
 1284 085c C7E91823 		strd	r2, [r7, #96]
 270:.\main.c      ****                 if (servoPeriod > midPeriod) servoPeriod = floor(servoPeriod);
 1285              		.loc 1 270 0
 1286 0860 4FF00003 		mov	r3, #0
 1287 0864 1C46     		mov	r4, r3
 1288 0866 D7E91601 		ldrd	r0, [r7, #88]
 1289 086a D7E91823 		ldrd	r2, [r7, #96]
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 30


 1290 086e FFF7FEFF 		bl	__aeabi_dcmpgt
 1291 0872 0346     		mov	r3, r0
 1292 0874 002B     		cmp	r3, #0
 1293 0876 02D0     		beq	.L54
 1294              	.L55:
 1295 0878 4FF00103 		mov	r3, #1
 1296 087c 1C46     		mov	r4, r3
 1297              	.L54:
 1298 087e E3B2     		uxtb	r3, r4
 1299 0880 002B     		cmp	r3, #0
 1300 0882 08D0     		beq	.L56
 1301 0884 D7E91601 		ldrd	r0, [r7, #88]
 1302 0888 FFF7FEFF 		bl	floor
 1303 088c 0246     		mov	r2, r0
 1304 088e 0B46     		mov	r3, r1
 1305 0890 C7E91623 		strd	r2, [r7, #88]
 1306 0894 07E0     		b	.L57
 1307              	.L56:
 271:.\main.c      ****                 else servoPeriod = ceil(servoPeriod);
 1308              		.loc 1 271 0
 1309 0896 D7E91601 		ldrd	r0, [r7, #88]
 1310 089a FFF7FEFF 		bl	ceil
 1311 089e 0246     		mov	r2, r0
 1312 08a0 0B46     		mov	r3, r1
 1313 08a2 C7E91623 		strd	r2, [r7, #88]
 1314              	.L57:
 272:.\main.c      ****                 PWM_Servo_WriteCompare(servoPeriod);
 1315              		.loc 1 272 0
 1316 08a6 D7E91601 		ldrd	r0, [r7, #88]
 1317 08aa FFF7FEFF 		bl	__aeabi_d2uiz
 1318 08ae 0346     		mov	r3, r0
 1319 08b0 9BB2     		uxth	r3, r3
 1320 08b2 1846     		mov	r0, r3
 1321 08b4 FFF7FEFF 		bl	PWM_Servo_WriteCompare
 1322              	.L47:
 1323              	.LBE11:
 273:.\main.c      ****             }
 274:.\main.c      ****             double servoVal = PWM_Servo_ReadCompare() / MAIN_CLK_FREQ;
 1324              		.loc 1 274 0
 1325 08b8 46F22643 		movw	r3, #:lower16:1073767462
 1326 08bc C4F20003 		movt	r3, #:upper16:1073767462
 1327 08c0 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1328 08c2 9BB2     		uxth	r3, r3
 1329 08c4 1846     		mov	r0, r3
 1330 08c6 FFF7FEFF 		bl	__aeabi_i2d
 1331 08ca 40F20003 		movw	r3, #:lower16:MAIN_CLK_FREQ
 1332 08ce C0F20003 		movt	r3, #:upper16:MAIN_CLK_FREQ
 1333 08d2 D3E90023 		ldrd	r2, [r3]
 1334 08d6 FFF7FEFF 		bl	__aeabi_ddiv
 1335 08da 0246     		mov	r2, r0
 1336 08dc 0B46     		mov	r3, r1
 1337 08de C7E91023 		strd	r2, [r7, #64]
 275:.\main.c      ****             double setVal = (servoVal - MIN_TIME_SERVO) / (MAX_TIME_SERVO - MIN_TIME_SERVO);
 1338              		.loc 1 275 0
 1339 08e2 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1340 08e6 C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1341 08ea D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 31


 1342 08ee D7E91001 		ldrd	r0, [r7, #64]
 1343 08f2 FFF7FEFF 		bl	__aeabi_dsub
 1344 08f6 0246     		mov	r2, r0
 1345 08f8 0B46     		mov	r3, r1
 1346 08fa 1446     		mov	r4, r2
 1347 08fc 1D46     		mov	r5, r3
 1348 08fe 40F20003 		movw	r3, #:lower16:MAX_TIME_SERVO
 1349 0902 C0F20003 		movt	r3, #:upper16:MAX_TIME_SERVO
 1350 0906 D3E90001 		ldrd	r0, [r3]
 1351 090a 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1352 090e C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1353 0912 D3E90023 		ldrd	r2, [r3]
 1354 0916 FFF7FEFF 		bl	__aeabi_dsub
 1355 091a 0246     		mov	r2, r0
 1356 091c 0B46     		mov	r3, r1
 1357 091e 2046     		mov	r0, r4
 1358 0920 2946     		mov	r1, r5
 1359 0922 FFF7FEFF 		bl	__aeabi_ddiv
 1360 0926 0246     		mov	r2, r0
 1361 0928 0B46     		mov	r3, r1
 1362 092a C7E91223 		strd	r2, [r7, #72]
 276:.\main.c      ****             sprintf(strbuffer, "Servo set to %.3f (%.3f ms)\n", setVal, servoVal*1000);
 1363              		.loc 1 276 0
 1364 092e D7E91001 		ldrd	r0, [r7, #64]
 1365 0932 11A3     		adr	r3, .L60
 1366 0934 D3E90023 		ldrd	r2, [r3]
 1367 0938 FFF7FEFF 		bl	__aeabi_dmul
 1368 093c 0246     		mov	r2, r0
 1369 093e 0B46     		mov	r3, r1
 1370 0940 CDE90023 		strd	r2, [sp]
 1371 0944 40F20000 		movw	r0, #:lower16:strbuffer
 1372 0948 C0F20000 		movt	r0, #:upper16:strbuffer
 1373 094c 40F20001 		movw	r1, #:lower16:.LC39
 1374 0950 C0F20001 		movt	r1, #:upper16:.LC39
 1375 0954 D7E91223 		ldrd	r2, [r7, #72]
 1376 0958 FFF7FEFF 		bl	sprintf
 277:.\main.c      ****             UART_PutString(strbuffer);
 1377              		.loc 1 277 0
 1378 095c 40F20000 		movw	r0, #:lower16:strbuffer
 1379 0960 C0F20000 		movt	r0, #:upper16:strbuffer
 1380 0964 FFF7FEFF 		bl	UART_PutString
 1381 0968 00E0     		b	.L58
 1382              	.L59:
 1383              	.LBE10:
 1384              	.LBE2:
 1385              		.loc 1 69 0
 1386 096a 00BF     		nop
 1387              	.L58:
 278:.\main.c      ****         }
 279:.\main.c      ****     }
 280:.\main.c      **** }
 1388              		.loc 1 280 0
 1389 096c 07F16C07 		add	r7, r7, #108
 1390 0970 BD46     		mov	sp, r7
 1391 0972 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1392              	.L61:
 1393 0976 00BF     		.align	3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 32


 1394              	.L60:
 1395 0978 00000000 		.word	0
 1396 097c 00408F40 		.word	1083129856
 1397              		.cfi_endproc
 1398              	.LFE31:
 1399              		.size	parseMessage, .-parseMessage
 1400              		.section	.rodata
 1401 02e9 000000   		.align	2
 1402              	.LC40:
 1403 02ec 4572726F 		.ascii	"Error 1: Interrupt not handled\012\000"
 1403      7220313A 
 1403      20496E74 
 1403      65727275 
 1403      7074206E 
 1404              		.section	.text.button_inter,"ax",%progbits
 1405              		.align	2
 1406              		.global	button_inter
 1407              		.thumb
 1408              		.thumb_func
 1409              		.type	button_inter, %function
 1410              	button_inter:
 1411              	.LFB32:
 281:.\main.c      **** 
 282:.\main.c      **** 
 283:.\main.c      **** /* Button interrupt */
 284:.\main.c      **** CY_ISR(button_inter) {
 1412              		.loc 1 284 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 80B5     		push	{r7, lr}
 1417              	.LCFI9:
 1418              		.cfi_def_cfa_offset 8
 1419 0002 00AF     		add	r7, sp, #0
 1420              		.cfi_offset 14, -4
 1421              		.cfi_offset 7, -8
 1422              	.LCFI10:
 1423              		.cfi_def_cfa_register 7
 285:.\main.c      ****     if (buttonInterrupted) {
 1424              		.loc 1 285 0
 1425 0004 40F20003 		movw	r3, #:lower16:buttonInterrupted
 1426 0008 C0F20003 		movt	r3, #:upper16:buttonInterrupted
 1427 000c 1B68     		ldr	r3, [r3, #0]
 1428 000e 002B     		cmp	r3, #0
 1429 0010 05D0     		beq	.L63
 286:.\main.c      ****         UART_PutString("Error 1: Interrupt not handled\n");
 1430              		.loc 1 286 0
 1431 0012 40F20000 		movw	r0, #:lower16:.LC40
 1432 0016 C0F20000 		movt	r0, #:upper16:.LC40
 1433 001a FFF7FEFF 		bl	UART_PutString
 1434              	.L63:
 287:.\main.c      ****     }
 288:.\main.c      ****     buttonInterrupted = 1;
 1435              		.loc 1 288 0
 1436 001e 40F20003 		movw	r3, #:lower16:buttonInterrupted
 1437 0022 C0F20003 		movt	r3, #:upper16:buttonInterrupted
 1438 0026 4FF00102 		mov	r2, #1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 33


 1439 002a 1A60     		str	r2, [r3, #0]
 289:.\main.c      **** }
 1440              		.loc 1 289 0
 1441 002c 80BD     		pop	{r7, pc}
 1442              		.cfi_endproc
 1443              	.LFE32:
 1444              		.size	button_inter, .-button_inter
 1445 002e 00BF     		.section	.rodata
 1446              		.align	2
 1447              	.LC41:
 1448 030c 4572726F 		.ascii	"Error 2: Interrupt not handled\012\000"
 1448      7220323A 
 1448      20496E74 
 1448      65727275 
 1448      7074206E 
 1449              		.section	.text.rx_inter,"ax",%progbits
 1450              		.align	2
 1451              		.global	rx_inter
 1452              		.thumb
 1453              		.thumb_func
 1454              		.type	rx_inter, %function
 1455              	rx_inter:
 1456              	.LFB33:
 290:.\main.c      **** 
 291:.\main.c      **** /* Recieved data interrupt */
 292:.\main.c      **** CY_ISR(rx_inter) {
 1457              		.loc 1 292 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461 0000 80B5     		push	{r7, lr}
 1462              	.LCFI11:
 1463              		.cfi_def_cfa_offset 8
 1464 0002 00AF     		add	r7, sp, #0
 1465              		.cfi_offset 14, -4
 1466              		.cfi_offset 7, -8
 1467              	.LCFI12:
 1468              		.cfi_def_cfa_register 7
 293:.\main.c      ****     if (rxInterrupted) {
 1469              		.loc 1 293 0
 1470 0004 40F20003 		movw	r3, #:lower16:rxInterrupted
 1471 0008 C0F20003 		movt	r3, #:upper16:rxInterrupted
 1472 000c 1B68     		ldr	r3, [r3, #0]
 1473 000e 002B     		cmp	r3, #0
 1474 0010 05D0     		beq	.L66
 294:.\main.c      ****         UART_PutString("Error 2: Interrupt not handled\n");
 1475              		.loc 1 294 0
 1476 0012 40F20000 		movw	r0, #:lower16:.LC41
 1477 0016 C0F20000 		movt	r0, #:upper16:.LC41
 1478 001a FFF7FEFF 		bl	UART_PutString
 1479              	.L66:
 295:.\main.c      ****     }
 296:.\main.c      ****     rxInterrupted = 1;
 1480              		.loc 1 296 0
 1481 001e 40F20003 		movw	r3, #:lower16:rxInterrupted
 1482 0022 C0F20003 		movt	r3, #:upper16:rxInterrupted
 1483 0026 4FF00102 		mov	r2, #1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 34


 1484 002a 1A60     		str	r2, [r3, #0]
 297:.\main.c      **** }
 1485              		.loc 1 297 0
 1486 002c 80BD     		pop	{r7, pc}
 1487              		.cfi_endproc
 1488              	.LFE33:
 1489              		.size	rx_inter, .-rx_inter
 1490 002e 00BF     		.section	.rodata
 1491              		.align	2
 1492              	.LC42:
 1493 032c 4572726F 		.ascii	"Error 3: Interrupt not handled\012\000"
 1493      7220333A 
 1493      20496E74 
 1493      65727275 
 1493      7074206E 
 1494              		.section	.text.wheel_inter,"ax",%progbits
 1495              		.align	2
 1496              		.global	wheel_inter
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	wheel_inter, %function
 1500              	wheel_inter:
 1501              	.LFB34:
 298:.\main.c      **** 
 299:.\main.c      **** /* Wheel tick interrupt */
 300:.\main.c      **** CY_ISR(wheel_inter) {
 1502              		.loc 1 300 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506 0000 80B5     		push	{r7, lr}
 1507              	.LCFI13:
 1508              		.cfi_def_cfa_offset 8
 1509 0002 00AF     		add	r7, sp, #0
 1510              		.cfi_offset 14, -4
 1511              		.cfi_offset 7, -8
 1512              	.LCFI14:
 1513              		.cfi_def_cfa_register 7
 301:.\main.c      ****     if (wheelTickInterrupted) {
 1514              		.loc 1 301 0
 1515 0004 40F20003 		movw	r3, #:lower16:wheelTickInterrupted
 1516 0008 C0F20003 		movt	r3, #:upper16:wheelTickInterrupted
 1517 000c 1B68     		ldr	r3, [r3, #0]
 1518 000e 002B     		cmp	r3, #0
 1519 0010 05D0     		beq	.L69
 302:.\main.c      ****         UART_PutString("Error 3: Interrupt not handled\n");
 1520              		.loc 1 302 0
 1521 0012 40F20000 		movw	r0, #:lower16:.LC42
 1522 0016 C0F20000 		movt	r0, #:upper16:.LC42
 1523 001a FFF7FEFF 		bl	UART_PutString
 1524              	.L69:
 303:.\main.c      ****     }
 304:.\main.c      ****     wheelTickInterrupted = 1;
 1525              		.loc 1 304 0
 1526 001e 40F20003 		movw	r3, #:lower16:wheelTickInterrupted
 1527 0022 C0F20003 		movt	r3, #:upper16:wheelTickInterrupted
 1528 0026 4FF00102 		mov	r2, #1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 35


 1529 002a 1A60     		str	r2, [r3, #0]
 305:.\main.c      **** }
 1530              		.loc 1 305 0
 1531 002c 80BD     		pop	{r7, pc}
 1532              		.cfi_endproc
 1533              	.LFE34:
 1534              		.size	wheel_inter, .-wheel_inter
 1535 002e 00BF     		.section	.rodata
 1536              		.align	2
 1537              	.LC43:
 1538 034c 4572726F 		.ascii	"Error 4: Interrupt not handled\012\000"
 1538      7220343A 
 1538      20496E74 
 1538      65727275 
 1538      7074206E 
 1539              		.section	.text.timeout_inter,"ax",%progbits
 1540              		.align	2
 1541              		.global	timeout_inter
 1542              		.thumb
 1543              		.thumb_func
 1544              		.type	timeout_inter, %function
 1545              	timeout_inter:
 1546              	.LFB35:
 306:.\main.c      **** 
 307:.\main.c      **** /* Wheel tick timeout interrupt */
 308:.\main.c      **** CY_ISR(timeout_inter) {
 1547              		.loc 1 308 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 1, uses_anonymous_args = 0
 1551 0000 80B5     		push	{r7, lr}
 1552              	.LCFI15:
 1553              		.cfi_def_cfa_offset 8
 1554 0002 00AF     		add	r7, sp, #0
 1555              		.cfi_offset 14, -4
 1556              		.cfi_offset 7, -8
 1557              	.LCFI16:
 1558              		.cfi_def_cfa_register 7
 309:.\main.c      ****     if (tickTimeoutInterrupted) {
 1559              		.loc 1 309 0
 1560 0004 40F20003 		movw	r3, #:lower16:tickTimeoutInterrupted
 1561 0008 C0F20003 		movt	r3, #:upper16:tickTimeoutInterrupted
 1562 000c 1B68     		ldr	r3, [r3, #0]
 1563 000e 002B     		cmp	r3, #0
 1564 0010 05D0     		beq	.L72
 310:.\main.c      ****         UART_PutString("Error 4: Interrupt not handled\n");
 1565              		.loc 1 310 0
 1566 0012 40F20000 		movw	r0, #:lower16:.LC43
 1567 0016 C0F20000 		movt	r0, #:upper16:.LC43
 1568 001a FFF7FEFF 		bl	UART_PutString
 1569              	.L72:
 311:.\main.c      ****     }
 312:.\main.c      ****     tickTimeoutInterrupted = 1;
 1570              		.loc 1 312 0
 1571 001e 40F20003 		movw	r3, #:lower16:tickTimeoutInterrupted
 1572 0022 C0F20003 		movt	r3, #:upper16:tickTimeoutInterrupted
 1573 0026 4FF00102 		mov	r2, #1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 36


 1574 002a 1A60     		str	r2, [r3, #0]
 313:.\main.c      **** }
 1575              		.loc 1 313 0
 1576 002c 80BD     		pop	{r7, pc}
 1577              		.cfi_endproc
 1578              	.LFE35:
 1579              		.size	timeout_inter, .-timeout_inter
 1580 002e 00BF     		.section	.rodata
 1581              		.align	2
 1582              	.LC44:
 1583 036c 4572726F 		.ascii	"Error 5: Interrupt not handled\012\000"
 1583      7220353A 
 1583      20496E74 
 1583      65727275 
 1583      7074206E 
 1584 038c 00000000 		.section	.text.pid_inter,"ax",%progbits
 1585              		.align	2
 1586              		.global	pid_inter
 1587              		.thumb
 1588              		.thumb_func
 1589              		.type	pid_inter, %function
 1590              	pid_inter:
 1591              	.LFB36:
 314:.\main.c      **** 
 315:.\main.c      **** /* PID timer interrupt */
 316:.\main.c      **** CY_ISR(pid_inter) {
 1592              		.loc 1 316 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 1, uses_anonymous_args = 0
 1596 0000 80B5     		push	{r7, lr}
 1597              	.LCFI17:
 1598              		.cfi_def_cfa_offset 8
 1599 0002 00AF     		add	r7, sp, #0
 1600              		.cfi_offset 14, -4
 1601              		.cfi_offset 7, -8
 1602              	.LCFI18:
 1603              		.cfi_def_cfa_register 7
 317:.\main.c      ****     if (pidTimerInterrupted) {
 1604              		.loc 1 317 0
 1605 0004 40F20003 		movw	r3, #:lower16:pidTimerInterrupted
 1606 0008 C0F20003 		movt	r3, #:upper16:pidTimerInterrupted
 1607 000c 1B68     		ldr	r3, [r3, #0]
 1608 000e 002B     		cmp	r3, #0
 1609 0010 05D0     		beq	.L75
 318:.\main.c      ****         UART_PutString("Error 5: Interrupt not handled\n");
 1610              		.loc 1 318 0
 1611 0012 40F20000 		movw	r0, #:lower16:.LC44
 1612 0016 C0F20000 		movt	r0, #:upper16:.LC44
 1613 001a FFF7FEFF 		bl	UART_PutString
 1614              	.L75:
 319:.\main.c      ****     }
 320:.\main.c      ****     pidTimerInterrupted = 1;
 1615              		.loc 1 320 0
 1616 001e 40F20003 		movw	r3, #:lower16:pidTimerInterrupted
 1617 0022 C0F20003 		movt	r3, #:upper16:pidTimerInterrupted
 1618 0026 4FF00102 		mov	r2, #1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 37


 1619 002a 1A60     		str	r2, [r3, #0]
 321:.\main.c      **** }
 1620              		.loc 1 321 0
 1621 002c 80BD     		pop	{r7, pc}
 1622              		.cfi_endproc
 1623              	.LFE36:
 1624              		.size	pid_inter, .-pid_inter
 1625 002e 00BF     		.section	.text.cam_comp_rise_inter,"ax",%progbits
 1626              		.align	2
 1627              		.global	cam_comp_rise_inter
 1628              		.thumb
 1629              		.thumb_func
 1630              		.type	cam_comp_rise_inter, %function
 1631              	cam_comp_rise_inter:
 1632              	.LFB37:
 322:.\main.c      **** 
 323:.\main.c      **** /* Camera comparator rise interrupt */
 324:.\main.c      **** CY_ISR(cam_comp_rise_inter) {
 1633              		.loc 1 324 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638 0000 80B4     		push	{r7}
 1639              	.LCFI19:
 1640              		.cfi_def_cfa_offset 4
 1641 0002 00AF     		add	r7, sp, #0
 1642              		.cfi_offset 7, -4
 1643              	.LCFI20:
 1644              		.cfi_def_cfa_register 7
 325:.\main.c      ****     if (camCompRiseInterrupted) {
 326:.\main.c      ****         //UART_PutString("Error 6: Interrupt not handled\n");
 327:.\main.c      ****     }
 328:.\main.c      ****     test6++;
 1645              		.loc 1 328 0
 1646 0004 40F20003 		movw	r3, #:lower16:test6
 1647 0008 C0F20003 		movt	r3, #:upper16:test6
 1648 000c 1B68     		ldr	r3, [r3, #0]
 1649 000e 03F10102 		add	r2, r3, #1
 1650 0012 40F20003 		movw	r3, #:lower16:test6
 1651 0016 C0F20003 		movt	r3, #:upper16:test6
 1652 001a 1A60     		str	r2, [r3, #0]
 329:.\main.c      ****     camCompRiseInterrupted = 1;
 1653              		.loc 1 329 0
 1654 001c 40F20003 		movw	r3, #:lower16:camCompRiseInterrupted
 1655 0020 C0F20003 		movt	r3, #:upper16:camCompRiseInterrupted
 1656 0024 4FF00102 		mov	r2, #1
 1657 0028 1A60     		str	r2, [r3, #0]
 330:.\main.c      **** }
 1658              		.loc 1 330 0
 1659 002a BD46     		mov	sp, r7
 1660 002c 80BC     		pop	{r7}
 1661 002e 7047     		bx	lr
 1662              		.cfi_endproc
 1663              	.LFE37:
 1664              		.size	cam_comp_rise_inter, .-cam_comp_rise_inter
 1665              		.section	.text.cam_comp_fall_inter,"ax",%progbits
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 38


 1666              		.align	2
 1667              		.global	cam_comp_fall_inter
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	cam_comp_fall_inter, %function
 1671              	cam_comp_fall_inter:
 1672              	.LFB38:
 331:.\main.c      **** 
 332:.\main.c      **** /* Camera comparator fall interrupt */
 333:.\main.c      **** CY_ISR(cam_comp_fall_inter) {
 1673              		.loc 1 333 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0000 80B4     		push	{r7}
 1679              	.LCFI21:
 1680              		.cfi_def_cfa_offset 4
 1681 0002 00AF     		add	r7, sp, #0
 1682              		.cfi_offset 7, -4
 1683              	.LCFI22:
 1684              		.cfi_def_cfa_register 7
 334:.\main.c      ****     if (camCompFallInterrupted) {
 335:.\main.c      ****         //UART_PutString("Error 7: Interrupt not handled\n");
 336:.\main.c      ****     }
 337:.\main.c      ****     test7++;
 1685              		.loc 1 337 0
 1686 0004 40F20003 		movw	r3, #:lower16:test7
 1687 0008 C0F20003 		movt	r3, #:upper16:test7
 1688 000c 1B68     		ldr	r3, [r3, #0]
 1689 000e 03F10102 		add	r2, r3, #1
 1690 0012 40F20003 		movw	r3, #:lower16:test7
 1691 0016 C0F20003 		movt	r3, #:upper16:test7
 1692 001a 1A60     		str	r2, [r3, #0]
 338:.\main.c      ****     camCompFallInterrupted = 1;
 1693              		.loc 1 338 0
 1694 001c 40F20003 		movw	r3, #:lower16:camCompFallInterrupted
 1695 0020 C0F20003 		movt	r3, #:upper16:camCompFallInterrupted
 1696 0024 4FF00102 		mov	r2, #1
 1697 0028 1A60     		str	r2, [r3, #0]
 339:.\main.c      **** }
 1698              		.loc 1 339 0
 1699 002a BD46     		mov	sp, r7
 1700 002c 80BC     		pop	{r7}
 1701 002e 7047     		bx	lr
 1702              		.cfi_endproc
 1703              	.LFE38:
 1704              		.size	cam_comp_fall_inter, .-cam_comp_fall_inter
 1705              		.section	.text.cam_row_inter,"ax",%progbits
 1706              		.align	2
 1707              		.global	cam_row_inter
 1708              		.thumb
 1709              		.thumb_func
 1710              		.type	cam_row_inter, %function
 1711              	cam_row_inter:
 1712              	.LFB39:
 340:.\main.c      **** 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 39


 341:.\main.c      **** /* Camera row start interrupt */
 342:.\main.c      **** CY_ISR(cam_row_inter) {
 1713              		.loc 1 342 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 1718 0000 80B4     		push	{r7}
 1719              	.LCFI23:
 1720              		.cfi_def_cfa_offset 4
 1721 0002 00AF     		add	r7, sp, #0
 1722              		.cfi_offset 7, -4
 1723              	.LCFI24:
 1724              		.cfi_def_cfa_register 7
 343:.\main.c      ****     if (camRowInterrupted) {
 344:.\main.c      ****         //UART_PutString("Error 8: Interrupt not handled\n");
 345:.\main.c      ****     }
 346:.\main.c      ****     test8++;
 1725              		.loc 1 346 0
 1726 0004 40F20003 		movw	r3, #:lower16:test8
 1727 0008 C0F20003 		movt	r3, #:upper16:test8
 1728 000c 1B68     		ldr	r3, [r3, #0]
 1729 000e 03F10102 		add	r2, r3, #1
 1730 0012 40F20003 		movw	r3, #:lower16:test8
 1731 0016 C0F20003 		movt	r3, #:upper16:test8
 1732 001a 1A60     		str	r2, [r3, #0]
 347:.\main.c      ****     camRowInterrupted = 1;
 1733              		.loc 1 347 0
 1734 001c 40F20003 		movw	r3, #:lower16:camRowInterrupted
 1735 0020 C0F20003 		movt	r3, #:upper16:camRowInterrupted
 1736 0024 4FF00102 		mov	r2, #1
 1737 0028 1A60     		str	r2, [r3, #0]
 348:.\main.c      **** }
 1738              		.loc 1 348 0
 1739 002a BD46     		mov	sp, r7
 1740 002c 80BC     		pop	{r7}
 1741 002e 7047     		bx	lr
 1742              		.cfi_endproc
 1743              	.LFE39:
 1744              		.size	cam_row_inter, .-cam_row_inter
 1745              		.section	.text.cam_frame_inter,"ax",%progbits
 1746              		.align	2
 1747              		.global	cam_frame_inter
 1748              		.thumb
 1749              		.thumb_func
 1750              		.type	cam_frame_inter, %function
 1751              	cam_frame_inter:
 1752              	.LFB40:
 349:.\main.c      **** 
 350:.\main.c      **** /* Camera frame start interrupt */
 351:.\main.c      **** CY_ISR(cam_frame_inter) {
 1753              		.loc 1 351 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 1, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758 0000 80B4     		push	{r7}
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 40


 1759              	.LCFI25:
 1760              		.cfi_def_cfa_offset 4
 1761 0002 00AF     		add	r7, sp, #0
 1762              		.cfi_offset 7, -4
 1763              	.LCFI26:
 1764              		.cfi_def_cfa_register 7
 352:.\main.c      ****     if (camFrameInterrupted) {
 353:.\main.c      ****         //UART_PutString("Error 9: Interrupt not handled\n");
 354:.\main.c      ****     }
 355:.\main.c      ****     test9++;
 1765              		.loc 1 355 0
 1766 0004 40F20003 		movw	r3, #:lower16:test9
 1767 0008 C0F20003 		movt	r3, #:upper16:test9
 1768 000c 1B68     		ldr	r3, [r3, #0]
 1769 000e 03F10102 		add	r2, r3, #1
 1770 0012 40F20003 		movw	r3, #:lower16:test9
 1771 0016 C0F20003 		movt	r3, #:upper16:test9
 1772 001a 1A60     		str	r2, [r3, #0]
 356:.\main.c      ****     camFrameInterrupted = 1;
 1773              		.loc 1 356 0
 1774 001c 40F20003 		movw	r3, #:lower16:camFrameInterrupted
 1775 0020 C0F20003 		movt	r3, #:upper16:camFrameInterrupted
 1776 0024 4FF00102 		mov	r2, #1
 1777 0028 1A60     		str	r2, [r3, #0]
 357:.\main.c      **** }
 1778              		.loc 1 357 0
 1779 002a BD46     		mov	sp, r7
 1780 002c 80BC     		pop	{r7}
 1781 002e 7047     		bx	lr
 1782              		.cfi_endproc
 1783              	.LFE40:
 1784              		.size	cam_frame_inter, .-cam_frame_inter
 1785              		.section	.text.main,"ax",%progbits
 1786              		.align	2
 1787              		.global	main
 1788              		.thumb
 1789              		.thumb_func
 1790              		.type	main, %function
 1791              	main:
 1792              	.LFB41:
 358:.\main.c      **** 
 359:.\main.c      **** int main() {
 1793              		.loc 1 359 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 8
 1796              		@ frame_needed = 1, uses_anonymous_args = 0
 1797 0000 80B5     		push	{r7, lr}
 1798              	.LCFI27:
 1799              		.cfi_def_cfa_offset 8
 1800 0002 82B0     		sub	sp, sp, #8
 1801              	.LCFI28:
 1802              		.cfi_def_cfa_offset 16
 1803 0004 00AF     		add	r7, sp, #0
 1804              		.cfi_offset 14, -4
 1805              		.cfi_offset 7, -8
 1806              	.LCFI29:
 1807              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 41


 360:.\main.c      ****     /* Initialization */
 361:.\main.c      ****     CyGlobalIntEnable; // Enable global interrupts
 1808              		.loc 1 361 0
 1809              	@ 361 ".\main.c" 1
 1810 0006 62B6     		CPSIE   i
 1811              	@ 0 "" 2
 362:.\main.c      ****     
 363:.\main.c      ****     // Start LCD
 364:.\main.c      ****     LCD_Start();
 1812              		.loc 1 364 0
 1813              		.thumb
 1814 0008 FFF7FEFF 		bl	LCD_Start
 365:.\main.c      ****     
 366:.\main.c      ****     // Start motor PWM
 367:.\main.c      ****     PWM_Motor_Start();
 1815              		.loc 1 367 0
 1816 000c FFF7FEFF 		bl	PWM_Motor_Start
 368:.\main.c      ****     
 369:.\main.c      ****     // Start servo PWM
 370:.\main.c      ****     PWM_Servo_Start();
 1817              		.loc 1 370 0
 1818 0010 FFF7FEFF 		bl	PWM_Servo_Start
 371:.\main.c      ****     PWM_Servo_WriteCompare((MIN_TIME_SERVO + MAX_TIME_SERVO)/2 * MAIN_CLK_FREQ);
 1819              		.loc 1 371 0
 1820 0014 40F20003 		movw	r3, #:lower16:MIN_TIME_SERVO
 1821 0018 C0F20003 		movt	r3, #:upper16:MIN_TIME_SERVO
 1822 001c D3E90001 		ldrd	r0, [r3]
 1823 0020 40F20003 		movw	r3, #:lower16:MAX_TIME_SERVO
 1824 0024 C0F20003 		movt	r3, #:upper16:MAX_TIME_SERVO
 1825 0028 D3E90023 		ldrd	r2, [r3]
 1826 002c FFF7FEFF 		bl	__aeabi_dadd
 1827 0030 0246     		mov	r2, r0
 1828 0032 0B46     		mov	r3, r1
 1829 0034 1046     		mov	r0, r2
 1830 0036 1946     		mov	r1, r3
 1831 0038 4FF00002 		mov	r2, #0
 1832 003c 4FF08043 		mov	r3, #1073741824
 1833 0040 FFF7FEFF 		bl	__aeabi_ddiv
 1834 0044 0246     		mov	r2, r0
 1835 0046 0B46     		mov	r3, r1
 1836 0048 1046     		mov	r0, r2
 1837 004a 1946     		mov	r1, r3
 1838 004c 40F20003 		movw	r3, #:lower16:MAIN_CLK_FREQ
 1839 0050 C0F20003 		movt	r3, #:upper16:MAIN_CLK_FREQ
 1840 0054 D3E90023 		ldrd	r2, [r3]
 1841 0058 FFF7FEFF 		bl	__aeabi_dmul
 1842 005c 0246     		mov	r2, r0
 1843 005e 0B46     		mov	r3, r1
 1844 0060 1046     		mov	r0, r2
 1845 0062 1946     		mov	r1, r3
 1846 0064 FFF7FEFF 		bl	__aeabi_d2uiz
 1847 0068 0346     		mov	r3, r0
 1848 006a 9BB2     		uxth	r3, r3
 1849 006c 1846     		mov	r0, r3
 1850 006e FFF7FEFF 		bl	PWM_Servo_WriteCompare
 372:.\main.c      ****     
 373:.\main.c      ****     // Start pushbutton
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 42


 374:.\main.c      ****     inter_button_Start();
 1851              		.loc 1 374 0
 1852 0072 FFF7FEFF 		bl	inter_button_Start
 375:.\main.c      ****     inter_button_SetVector(button_inter);
 1853              		.loc 1 375 0
 1854 0076 40F20000 		movw	r0, #:lower16:button_inter
 1855 007a C0F20000 		movt	r0, #:upper16:button_inter
 1856 007e FFF7FEFF 		bl	inter_button_SetVector
 376:.\main.c      ****     
 377:.\main.c      ****     // Start UART
 378:.\main.c      ****     UART_Start();
 1857              		.loc 1 378 0
 1858 0082 FFF7FEFF 		bl	UART_Start
 379:.\main.c      ****     rx_rcvd_Start();
 1859              		.loc 1 379 0
 1860 0086 FFF7FEFF 		bl	rx_rcvd_Start
 380:.\main.c      ****     rx_rcvd_SetVector(rx_inter);
 1861              		.loc 1 380 0
 1862 008a 40F20000 		movw	r0, #:lower16:rx_inter
 1863 008e C0F20000 		movt	r0, #:upper16:rx_inter
 1864 0092 FFF7FEFF 		bl	rx_rcvd_SetVector
 381:.\main.c      ****     
 382:.\main.c      ****     // Start wheel tick timer
 383:.\main.c      ****     Timer_Wheel_Tick_Start();
 1865              		.loc 1 383 0
 1866 0096 FFF7FEFF 		bl	Timer_Wheel_Tick_Start
 384:.\main.c      ****     wheel_tick_Start();
 1867              		.loc 1 384 0
 1868 009a FFF7FEFF 		bl	wheel_tick_Start
 385:.\main.c      ****     wheel_tick_SetVector(wheel_inter);
 1869              		.loc 1 385 0
 1870 009e 40F20000 		movw	r0, #:lower16:wheel_inter
 1871 00a2 C0F20000 		movt	r0, #:upper16:wheel_inter
 1872 00a6 FFF7FEFF 		bl	wheel_tick_SetVector
 386:.\main.c      ****     
 387:.\main.c      ****     // Start tick timeout counter
 388:.\main.c      ****     Counter_Tick_Timeout_Start();
 1873              		.loc 1 388 0
 1874 00aa FFF7FEFF 		bl	Counter_Tick_Timeout_Start
 389:.\main.c      ****     tick_timeout_Start();
 1875              		.loc 1 389 0
 1876 00ae FFF7FEFF 		bl	tick_timeout_Start
 390:.\main.c      ****     tick_timeout_SetVector(timeout_inter);
 1877              		.loc 1 390 0
 1878 00b2 40F20000 		movw	r0, #:lower16:timeout_inter
 1879 00b6 C0F20000 		movt	r0, #:upper16:timeout_inter
 1880 00ba FFF7FEFF 		bl	tick_timeout_SetVector
 391:.\main.c      ****     
 392:.\main.c      ****     // Start PID update counter
 393:.\main.c      ****     Counter_PID_Start();
 1881              		.loc 1 393 0
 1882 00be FFF7FEFF 		bl	Counter_PID_Start
 394:.\main.c      ****     throttle_update_Start();
 1883              		.loc 1 394 0
 1884 00c2 FFF7FEFF 		bl	throttle_update_Start
 395:.\main.c      ****     throttle_update_SetVector(pid_inter);
 1885              		.loc 1 395 0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 43


 1886 00c6 40F20000 		movw	r0, #:lower16:pid_inter
 1887 00ca C0F20000 		movt	r0, #:upper16:pid_inter
 1888 00ce FFF7FEFF 		bl	throttle_update_SetVector
 396:.\main.c      ****     
 397:.\main.c      ****     // Start camera interrupts
 398:.\main.c      ****     camera_comp_rise_Start();
 1889              		.loc 1 398 0
 1890 00d2 FFF7FEFF 		bl	camera_comp_rise_Start
 399:.\main.c      ****     camera_comp_rise_SetVector(cam_comp_rise_inter);
 1891              		.loc 1 399 0
 1892 00d6 40F20000 		movw	r0, #:lower16:cam_comp_rise_inter
 1893 00da C0F20000 		movt	r0, #:upper16:cam_comp_rise_inter
 1894 00de FFF7FEFF 		bl	camera_comp_rise_SetVector
 400:.\main.c      ****     camera_comp_fall_Start();
 1895              		.loc 1 400 0
 1896 00e2 FFF7FEFF 		bl	camera_comp_fall_Start
 401:.\main.c      ****     camera_comp_fall_SetVector(cam_comp_fall_inter);
 1897              		.loc 1 401 0
 1898 00e6 40F20000 		movw	r0, #:lower16:cam_comp_fall_inter
 1899 00ea C0F20000 		movt	r0, #:upper16:cam_comp_fall_inter
 1900 00ee FFF7FEFF 		bl	camera_comp_fall_SetVector
 402:.\main.c      ****     camera_row_start_Start();
 1901              		.loc 1 402 0
 1902 00f2 FFF7FEFF 		bl	camera_row_start_Start
 403:.\main.c      ****     camera_row_start_SetVector(cam_row_inter);
 1903              		.loc 1 403 0
 1904 00f6 40F20000 		movw	r0, #:lower16:cam_row_inter
 1905 00fa C0F20000 		movt	r0, #:upper16:cam_row_inter
 1906 00fe FFF7FEFF 		bl	camera_row_start_SetVector
 404:.\main.c      ****     camera_frame_start_Start();
 1907              		.loc 1 404 0
 1908 0102 FFF7FEFF 		bl	camera_frame_start_Start
 405:.\main.c      ****     camera_frame_start_SetVector(cam_frame_inter);
 1909              		.loc 1 405 0
 1910 0106 40F20000 		movw	r0, #:lower16:cam_frame_inter
 1911 010a C0F20000 		movt	r0, #:upper16:cam_frame_inter
 1912 010e FFF7FEFF 		bl	camera_frame_start_SetVector
 406:.\main.c      ****     Timer_Line_Begin_Start();
 1913              		.loc 1 406 0
 1914 0112 FFF7FEFF 		bl	Timer_Line_Begin_Start
 407:.\main.c      ****     Timer_Line_End_Start(); 
 1915              		.loc 1 407 0
 1916 0116 FFF7FEFF 		bl	Timer_Line_End_Start
 408:.\main.c      ****     Timer_Row_Start();
 1917              		.loc 1 408 0
 1918 011a FFF7FEFF 		bl	Timer_Row_Start
 409:.\main.c      ****     
 410:.\main.c      ****     // LCD initial text
 411:.\main.c      ****     LCD_Position(0, 0);
 1919              		.loc 1 411 0
 1920 011e 4FF00000 		mov	r0, #0
 1921 0122 4FF00001 		mov	r1, #0
 1922 0126 FFF7FEFF 		bl	LCD_Position
 412:.\main.c      ****     LCD_PrintString(buildVersion);
 1923              		.loc 1 412 0
 1924 012a 40F20000 		movw	r0, #:lower16:buildVersion
 1925 012e C0F20000 		movt	r0, #:upper16:buildVersion
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 44


 1926 0132 FFF7FEFF 		bl	LCD_PrintString
 413:.\main.c      ****     
 414:.\main.c      ****     // Init serial
 415:.\main.c      ****     Serial_init();
 1927              		.loc 1 415 0
 1928 0136 FFF7FEFF 		bl	Serial_init
 416:.\main.c      ****     
 417:.\main.c      ****     // Init speed control
 418:.\main.c      ****     SpeedControl_init();
 1929              		.loc 1 418 0
 1930 013a FFF7FEFF 		bl	SpeedControl_init
 1931 013e 00E0     		b	.L97
 1932              	.L99:
 419:.\main.c      ****     
 420:.\main.c      ****     for(;;)
 421:.\main.c      ****     {
 422:.\main.c      ****         // Handle push button interrupt
 423:.\main.c      ****         if (buttonInterrupted) {
 424:.\main.c      ****             if (SpeedControl_isEnabled()) {
 425:.\main.c      ****                 SpeedControl_kill();
 426:.\main.c      ****             } else {
 427:.\main.c      ****                 SpeedControl_enableDistanceControl();
 428:.\main.c      ****                 SpeedControl_enable();
 429:.\main.c      ****             }
 430:.\main.c      ****             buttonInterrupted = 0;
 431:.\main.c      ****         }
 432:.\main.c      ****         
 433:.\main.c      ****         // Handle incoming serial data
 434:.\main.c      ****         if (rxInterrupted) {
 435:.\main.c      ****             char *message = Serial_handleData();
 436:.\main.c      ****             parseMessage(message);
 437:.\main.c      ****             rxInterrupted = 0;
 438:.\main.c      ****         }
 439:.\main.c      ****         
 440:.\main.c      ****         // Handle wheel ticks
 441:.\main.c      ****         if (wheelTickInterrupted) {
 442:.\main.c      ****             SpeedControl_handleWheelTick();
 443:.\main.c      ****             wheelTickInterrupted = 0;
 444:.\main.c      ****         }
 445:.\main.c      ****         
 446:.\main.c      ****         // Handle wheel tick timeout
 447:.\main.c      ****         if (tickTimeoutInterrupted) {
 448:.\main.c      ****             SpeedControl_handleWheelTickTimeout();
 449:.\main.c      ****             tickTimeoutInterrupted = 0;
 450:.\main.c      ****         }
 451:.\main.c      ****         
 452:.\main.c      ****         // Perform PID update and update time count
 453:.\main.c      ****         if (pidTimerInterrupted) {
 454:.\main.c      ****             SpeedControl_handleTimer();
 455:.\main.c      ****             pidTimerInterrupted = 0;
 456:.\main.c      ****         }
 457:.\main.c      ****         
 458:.\main.c      ****         // Handle comparator rise interrupt
 459:.\main.c      ****         if (camCompRiseInterrupted) {
 460:.\main.c      **** //            if (Vertical_sync_Read() == 1) {
 461:.\main.c      **** //                double lineBeginCyclesTemp = CAMERA_TIMER_PERIOD - Timer_Line_Begin_ReadCapture()
 462:.\main.c      **** //                if (lineBeginCyclesTemp > 0.15*EXPECTED_ROW_CYCLES && lineBeginCyclesTemp < 0.95*
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 45


 463:.\main.c      ****                     numCompBegin++;
 464:.\main.c      **** //                    lineBeginCycles = lineBeginCyclesTemp;
 465:.\main.c      **** //                }
 466:.\main.c      **** //            }
 467:.\main.c      ****             camCompRiseInterrupted = 0;
 468:.\main.c      ****         }
 469:.\main.c      ****         
 470:.\main.c      ****         // Handle comparator fall interrupt
 471:.\main.c      ****         if (camCompFallInterrupted) {
 472:.\main.c      **** //            if (Vertical_sync_Read() == 1) {
 473:.\main.c      **** //                double lineEndCyclesTemp = CAMERA_TIMER_PERIOD - Timer_Line_End_ReadCapture();
 474:.\main.c      **** //                if (lineEndCyclesTemp > 0.15*EXPECTED_ROW_CYCLES && lineEndCyclesTemp < 0.95*EXPE
 475:.\main.c      ****                     numCompEnd++;
 476:.\main.c      **** //                    lineEndCycles = lineEndCyclesTemp;
 477:.\main.c      **** //                }
 478:.\main.c      **** //            }
 479:.\main.c      ****             camCompFallInterrupted = 0;
 480:.\main.c      ****         }
 481:.\main.c      ****         
 482:.\main.c      ****         // Handle row interrupt
 483:.\main.c      ****         if (camRowInterrupted) {
 484:.\main.c      **** //            if (Vertical_sync_Read() == 1) {
 485:.\main.c      **** //                rowCycles = CAMERA_TIMER_PERIOD - Timer_Row_ReadCapture();
 486:.\main.c      **** //                if (rowCycles > 0.8*EXPECTED_ROW_CYCLES && rowCycles < 1.2*EXPECTED_ROW_CYCLES) {
 487:.\main.c      ****                    numRows++;
 488:.\main.c      **** //                }
 489:.\main.c      **** //            }
 490:.\main.c      ****             camRowInterrupted = 0;
 491:.\main.c      ****         }
 492:.\main.c      ****         
 493:.\main.c      ****         // Handle frame interrupts
 494:.\main.c      ****         if (camFrameInterrupted) {
 495:.\main.c      ****             numFrames++;
 496:.\main.c      ****             camFrameInterrupted = 0;
 497:.\main.c      ****         }
 498:.\main.c      ****     }
 1933              		.loc 1 498 0
 1934 0140 00BF     		nop
 1935              	.L97:
 1936              		.loc 1 423 0
 1937 0142 40F20003 		movw	r3, #:lower16:buttonInterrupted
 1938 0146 C0F20003 		movt	r3, #:upper16:buttonInterrupted
 1939 014a 1B68     		ldr	r3, [r3, #0]
 1940 014c 002B     		cmp	r3, #0
 1941 014e 12D0     		beq	.L86
 1942              		.loc 1 424 0
 1943 0150 FFF7FEFF 		bl	SpeedControl_isEnabled
 1944 0154 0346     		mov	r3, r0
 1945 0156 002B     		cmp	r3, #0
 1946 0158 02D0     		beq	.L87
 1947              		.loc 1 425 0
 1948 015a FFF7FEFF 		bl	SpeedControl_kill
 1949 015e 03E0     		b	.L88
 1950              	.L87:
 1951              		.loc 1 427 0
 1952 0160 FFF7FEFF 		bl	SpeedControl_enableDistanceControl
 1953              		.loc 1 428 0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 46


 1954 0164 FFF7FEFF 		bl	SpeedControl_enable
 1955              	.L88:
 1956              		.loc 1 430 0
 1957 0168 40F20003 		movw	r3, #:lower16:buttonInterrupted
 1958 016c C0F20003 		movt	r3, #:upper16:buttonInterrupted
 1959 0170 4FF00002 		mov	r2, #0
 1960 0174 1A60     		str	r2, [r3, #0]
 1961              	.L86:
 1962              		.loc 1 434 0
 1963 0176 40F20003 		movw	r3, #:lower16:rxInterrupted
 1964 017a C0F20003 		movt	r3, #:upper16:rxInterrupted
 1965 017e 1B68     		ldr	r3, [r3, #0]
 1966 0180 002B     		cmp	r3, #0
 1967 0182 0DD0     		beq	.L89
 1968              	.LBB12:
 1969              		.loc 1 435 0
 1970 0184 FFF7FEFF 		bl	Serial_handleData
 1971 0188 0346     		mov	r3, r0
 1972 018a 7B60     		str	r3, [r7, #4]
 1973              		.loc 1 436 0
 1974 018c 7868     		ldr	r0, [r7, #4]
 1975 018e FFF7FEFF 		bl	parseMessage
 1976              		.loc 1 437 0
 1977 0192 40F20003 		movw	r3, #:lower16:rxInterrupted
 1978 0196 C0F20003 		movt	r3, #:upper16:rxInterrupted
 1979 019a 4FF00002 		mov	r2, #0
 1980 019e 1A60     		str	r2, [r3, #0]
 1981              	.L89:
 1982              	.LBE12:
 1983              		.loc 1 441 0
 1984 01a0 40F20003 		movw	r3, #:lower16:wheelTickInterrupted
 1985 01a4 C0F20003 		movt	r3, #:upper16:wheelTickInterrupted
 1986 01a8 1B68     		ldr	r3, [r3, #0]
 1987 01aa 002B     		cmp	r3, #0
 1988 01ac 08D0     		beq	.L90
 1989              		.loc 1 442 0
 1990 01ae FFF7FEFF 		bl	SpeedControl_handleWheelTick
 1991              		.loc 1 443 0
 1992 01b2 40F20003 		movw	r3, #:lower16:wheelTickInterrupted
 1993 01b6 C0F20003 		movt	r3, #:upper16:wheelTickInterrupted
 1994 01ba 4FF00002 		mov	r2, #0
 1995 01be 1A60     		str	r2, [r3, #0]
 1996              	.L90:
 1997              		.loc 1 447 0
 1998 01c0 40F20003 		movw	r3, #:lower16:tickTimeoutInterrupted
 1999 01c4 C0F20003 		movt	r3, #:upper16:tickTimeoutInterrupted
 2000 01c8 1B68     		ldr	r3, [r3, #0]
 2001 01ca 002B     		cmp	r3, #0
 2002 01cc 08D0     		beq	.L91
 2003              		.loc 1 448 0
 2004 01ce FFF7FEFF 		bl	SpeedControl_handleWheelTickTimeout
 2005              		.loc 1 449 0
 2006 01d2 40F20003 		movw	r3, #:lower16:tickTimeoutInterrupted
 2007 01d6 C0F20003 		movt	r3, #:upper16:tickTimeoutInterrupted
 2008 01da 4FF00002 		mov	r2, #0
 2009 01de 1A60     		str	r2, [r3, #0]
 2010              	.L91:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 47


 2011              		.loc 1 453 0
 2012 01e0 40F20003 		movw	r3, #:lower16:pidTimerInterrupted
 2013 01e4 C0F20003 		movt	r3, #:upper16:pidTimerInterrupted
 2014 01e8 1B68     		ldr	r3, [r3, #0]
 2015 01ea 002B     		cmp	r3, #0
 2016 01ec 08D0     		beq	.L92
 2017              		.loc 1 454 0
 2018 01ee FFF7FEFF 		bl	SpeedControl_handleTimer
 2019              		.loc 1 455 0
 2020 01f2 40F20003 		movw	r3, #:lower16:pidTimerInterrupted
 2021 01f6 C0F20003 		movt	r3, #:upper16:pidTimerInterrupted
 2022 01fa 4FF00002 		mov	r2, #0
 2023 01fe 1A60     		str	r2, [r3, #0]
 2024              	.L92:
 2025              		.loc 1 459 0
 2026 0200 40F20003 		movw	r3, #:lower16:camCompRiseInterrupted
 2027 0204 C0F20003 		movt	r3, #:upper16:camCompRiseInterrupted
 2028 0208 1B68     		ldr	r3, [r3, #0]
 2029 020a 002B     		cmp	r3, #0
 2030 020c 12D0     		beq	.L93
 2031              		.loc 1 463 0
 2032 020e 40F20003 		movw	r3, #:lower16:numCompBegin
 2033 0212 C0F20003 		movt	r3, #:upper16:numCompBegin
 2034 0216 1B68     		ldr	r3, [r3, #0]
 2035 0218 03F10102 		add	r2, r3, #1
 2036 021c 40F20003 		movw	r3, #:lower16:numCompBegin
 2037 0220 C0F20003 		movt	r3, #:upper16:numCompBegin
 2038 0224 1A60     		str	r2, [r3, #0]
 2039              		.loc 1 467 0
 2040 0226 40F20003 		movw	r3, #:lower16:camCompRiseInterrupted
 2041 022a C0F20003 		movt	r3, #:upper16:camCompRiseInterrupted
 2042 022e 4FF00002 		mov	r2, #0
 2043 0232 1A60     		str	r2, [r3, #0]
 2044              	.L93:
 2045              		.loc 1 471 0
 2046 0234 40F20003 		movw	r3, #:lower16:camCompFallInterrupted
 2047 0238 C0F20003 		movt	r3, #:upper16:camCompFallInterrupted
 2048 023c 1B68     		ldr	r3, [r3, #0]
 2049 023e 002B     		cmp	r3, #0
 2050 0240 12D0     		beq	.L94
 2051              		.loc 1 475 0
 2052 0242 40F20003 		movw	r3, #:lower16:numCompEnd
 2053 0246 C0F20003 		movt	r3, #:upper16:numCompEnd
 2054 024a 1B68     		ldr	r3, [r3, #0]
 2055 024c 03F10102 		add	r2, r3, #1
 2056 0250 40F20003 		movw	r3, #:lower16:numCompEnd
 2057 0254 C0F20003 		movt	r3, #:upper16:numCompEnd
 2058 0258 1A60     		str	r2, [r3, #0]
 2059              		.loc 1 479 0
 2060 025a 40F20003 		movw	r3, #:lower16:camCompFallInterrupted
 2061 025e C0F20003 		movt	r3, #:upper16:camCompFallInterrupted
 2062 0262 4FF00002 		mov	r2, #0
 2063 0266 1A60     		str	r2, [r3, #0]
 2064              	.L94:
 2065              		.loc 1 483 0
 2066 0268 40F20003 		movw	r3, #:lower16:camRowInterrupted
 2067 026c C0F20003 		movt	r3, #:upper16:camRowInterrupted
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 48


 2068 0270 1B68     		ldr	r3, [r3, #0]
 2069 0272 002B     		cmp	r3, #0
 2070 0274 12D0     		beq	.L95
 2071              		.loc 1 487 0
 2072 0276 40F20003 		movw	r3, #:lower16:numRows
 2073 027a C0F20003 		movt	r3, #:upper16:numRows
 2074 027e 1B68     		ldr	r3, [r3, #0]
 2075 0280 03F10102 		add	r2, r3, #1
 2076 0284 40F20003 		movw	r3, #:lower16:numRows
 2077 0288 C0F20003 		movt	r3, #:upper16:numRows
 2078 028c 1A60     		str	r2, [r3, #0]
 2079              		.loc 1 490 0
 2080 028e 40F20003 		movw	r3, #:lower16:camRowInterrupted
 2081 0292 C0F20003 		movt	r3, #:upper16:camRowInterrupted
 2082 0296 4FF00002 		mov	r2, #0
 2083 029a 1A60     		str	r2, [r3, #0]
 2084              	.L95:
 2085              		.loc 1 494 0
 2086 029c 40F20003 		movw	r3, #:lower16:camFrameInterrupted
 2087 02a0 C0F20003 		movt	r3, #:upper16:camFrameInterrupted
 2088 02a4 1B68     		ldr	r3, [r3, #0]
 2089 02a6 002B     		cmp	r3, #0
 2090 02a8 3FF44AAF 		beq	.L99
 2091              		.loc 1 495 0
 2092 02ac 40F20003 		movw	r3, #:lower16:numFrames
 2093 02b0 C0F20003 		movt	r3, #:upper16:numFrames
 2094 02b4 1B68     		ldr	r3, [r3, #0]
 2095 02b6 03F10102 		add	r2, r3, #1
 2096 02ba 40F20003 		movw	r3, #:lower16:numFrames
 2097 02be C0F20003 		movt	r3, #:upper16:numFrames
 2098 02c2 1A60     		str	r2, [r3, #0]
 2099              		.loc 1 496 0
 2100 02c4 40F20003 		movw	r3, #:lower16:camFrameInterrupted
 2101 02c8 C0F20003 		movt	r3, #:upper16:camFrameInterrupted
 2102 02cc 4FF00002 		mov	r2, #0
 2103 02d0 1A60     		str	r2, [r3, #0]
 2104              		.loc 1 498 0
 2105 02d2 36E7     		b	.L97
 2106              		.cfi_endproc
 2107              	.LFE41:
 2108              		.size	main, .-main
 2109              		.text
 2110              	.Letext0:
 2111              		.section	.debug_loc,"",%progbits
 2112              	.Ldebug_loc0:
 2113              	.LLST0:
 2114 0000 00000000 		.4byte	.LFB29
 2115 0004 02000000 		.4byte	.LCFI0
 2116 0008 0100     		.2byte	0x1
 2117 000a 5D       		.byte	0x5d
 2118 000b 02000000 		.4byte	.LCFI0
 2119 000f 04000000 		.4byte	.LCFI1
 2120 0013 0200     		.2byte	0x2
 2121 0015 7D       		.byte	0x7d
 2122 0016 08       		.sleb128 8
 2123 0017 04000000 		.4byte	.LCFI1
 2124 001b 06000000 		.4byte	.LCFI2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 49


 2125 001f 0200     		.2byte	0x2
 2126 0021 7D       		.byte	0x7d
 2127 0022 10       		.sleb128 16
 2128 0023 06000000 		.4byte	.LCFI2
 2129 0027 2A000000 		.4byte	.LFE29
 2130 002b 0200     		.2byte	0x2
 2131 002d 77       		.byte	0x77
 2132 002e 10       		.sleb128 16
 2133 002f 00000000 		.4byte	0x0
 2134 0033 00000000 		.4byte	0x0
 2135              	.LLST1:
 2136 0037 00000000 		.4byte	.LFB30
 2137 003b 02000000 		.4byte	.LCFI3
 2138 003f 0100     		.2byte	0x1
 2139 0041 5D       		.byte	0x5d
 2140 0042 02000000 		.4byte	.LCFI3
 2141 0046 04000000 		.4byte	.LCFI4
 2142 004a 0200     		.2byte	0x2
 2143 004c 7D       		.byte	0x7d
 2144 004d 08       		.sleb128 8
 2145 004e 04000000 		.4byte	.LCFI4
 2146 0052 06000000 		.4byte	.LCFI5
 2147 0056 0200     		.2byte	0x2
 2148 0058 7D       		.byte	0x7d
 2149 0059 10       		.sleb128 16
 2150 005a 06000000 		.4byte	.LCFI5
 2151 005e 3A000000 		.4byte	.LFE30
 2152 0062 0200     		.2byte	0x2
 2153 0064 77       		.byte	0x77
 2154 0065 10       		.sleb128 16
 2155 0066 00000000 		.4byte	0x0
 2156 006a 00000000 		.4byte	0x0
 2157              	.LLST2:
 2158 006e 00000000 		.4byte	.LFB31
 2159 0072 04000000 		.4byte	.LCFI6
 2160 0076 0100     		.2byte	0x1
 2161 0078 5D       		.byte	0x5d
 2162 0079 04000000 		.4byte	.LCFI6
 2163 007d 06000000 		.4byte	.LCFI7
 2164 0081 0200     		.2byte	0x2
 2165 0083 7D       		.byte	0x7d
 2166 0084 24       		.sleb128 36
 2167 0085 06000000 		.4byte	.LCFI7
 2168 0089 08000000 		.4byte	.LCFI8
 2169 008d 0300     		.2byte	0x3
 2170 008f 7D       		.byte	0x7d
 2171 0090 B001     		.sleb128 176
 2172 0092 08000000 		.4byte	.LCFI8
 2173 0096 80090000 		.4byte	.LFE31
 2174 009a 0300     		.2byte	0x3
 2175 009c 77       		.byte	0x77
 2176 009d 9001     		.sleb128 144
 2177 009f 00000000 		.4byte	0x0
 2178 00a3 00000000 		.4byte	0x0
 2179              	.LLST3:
 2180 00a7 00000000 		.4byte	.LFB32
 2181 00ab 02000000 		.4byte	.LCFI9
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 50


 2182 00af 0100     		.2byte	0x1
 2183 00b1 5D       		.byte	0x5d
 2184 00b2 02000000 		.4byte	.LCFI9
 2185 00b6 04000000 		.4byte	.LCFI10
 2186 00ba 0200     		.2byte	0x2
 2187 00bc 7D       		.byte	0x7d
 2188 00bd 08       		.sleb128 8
 2189 00be 04000000 		.4byte	.LCFI10
 2190 00c2 2E000000 		.4byte	.LFE32
 2191 00c6 0200     		.2byte	0x2
 2192 00c8 77       		.byte	0x77
 2193 00c9 08       		.sleb128 8
 2194 00ca 00000000 		.4byte	0x0
 2195 00ce 00000000 		.4byte	0x0
 2196              	.LLST4:
 2197 00d2 00000000 		.4byte	.LFB33
 2198 00d6 02000000 		.4byte	.LCFI11
 2199 00da 0100     		.2byte	0x1
 2200 00dc 5D       		.byte	0x5d
 2201 00dd 02000000 		.4byte	.LCFI11
 2202 00e1 04000000 		.4byte	.LCFI12
 2203 00e5 0200     		.2byte	0x2
 2204 00e7 7D       		.byte	0x7d
 2205 00e8 08       		.sleb128 8
 2206 00e9 04000000 		.4byte	.LCFI12
 2207 00ed 2E000000 		.4byte	.LFE33
 2208 00f1 0200     		.2byte	0x2
 2209 00f3 77       		.byte	0x77
 2210 00f4 08       		.sleb128 8
 2211 00f5 00000000 		.4byte	0x0
 2212 00f9 00000000 		.4byte	0x0
 2213              	.LLST5:
 2214 00fd 00000000 		.4byte	.LFB34
 2215 0101 02000000 		.4byte	.LCFI13
 2216 0105 0100     		.2byte	0x1
 2217 0107 5D       		.byte	0x5d
 2218 0108 02000000 		.4byte	.LCFI13
 2219 010c 04000000 		.4byte	.LCFI14
 2220 0110 0200     		.2byte	0x2
 2221 0112 7D       		.byte	0x7d
 2222 0113 08       		.sleb128 8
 2223 0114 04000000 		.4byte	.LCFI14
 2224 0118 2E000000 		.4byte	.LFE34
 2225 011c 0200     		.2byte	0x2
 2226 011e 77       		.byte	0x77
 2227 011f 08       		.sleb128 8
 2228 0120 00000000 		.4byte	0x0
 2229 0124 00000000 		.4byte	0x0
 2230              	.LLST6:
 2231 0128 00000000 		.4byte	.LFB35
 2232 012c 02000000 		.4byte	.LCFI15
 2233 0130 0100     		.2byte	0x1
 2234 0132 5D       		.byte	0x5d
 2235 0133 02000000 		.4byte	.LCFI15
 2236 0137 04000000 		.4byte	.LCFI16
 2237 013b 0200     		.2byte	0x2
 2238 013d 7D       		.byte	0x7d
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 51


 2239 013e 08       		.sleb128 8
 2240 013f 04000000 		.4byte	.LCFI16
 2241 0143 2E000000 		.4byte	.LFE35
 2242 0147 0200     		.2byte	0x2
 2243 0149 77       		.byte	0x77
 2244 014a 08       		.sleb128 8
 2245 014b 00000000 		.4byte	0x0
 2246 014f 00000000 		.4byte	0x0
 2247              	.LLST7:
 2248 0153 00000000 		.4byte	.LFB36
 2249 0157 02000000 		.4byte	.LCFI17
 2250 015b 0100     		.2byte	0x1
 2251 015d 5D       		.byte	0x5d
 2252 015e 02000000 		.4byte	.LCFI17
 2253 0162 04000000 		.4byte	.LCFI18
 2254 0166 0200     		.2byte	0x2
 2255 0168 7D       		.byte	0x7d
 2256 0169 08       		.sleb128 8
 2257 016a 04000000 		.4byte	.LCFI18
 2258 016e 2E000000 		.4byte	.LFE36
 2259 0172 0200     		.2byte	0x2
 2260 0174 77       		.byte	0x77
 2261 0175 08       		.sleb128 8
 2262 0176 00000000 		.4byte	0x0
 2263 017a 00000000 		.4byte	0x0
 2264              	.LLST8:
 2265 017e 00000000 		.4byte	.LFB37
 2266 0182 02000000 		.4byte	.LCFI19
 2267 0186 0100     		.2byte	0x1
 2268 0188 5D       		.byte	0x5d
 2269 0189 02000000 		.4byte	.LCFI19
 2270 018d 04000000 		.4byte	.LCFI20
 2271 0191 0200     		.2byte	0x2
 2272 0193 7D       		.byte	0x7d
 2273 0194 04       		.sleb128 4
 2274 0195 04000000 		.4byte	.LCFI20
 2275 0199 30000000 		.4byte	.LFE37
 2276 019d 0200     		.2byte	0x2
 2277 019f 77       		.byte	0x77
 2278 01a0 04       		.sleb128 4
 2279 01a1 00000000 		.4byte	0x0
 2280 01a5 00000000 		.4byte	0x0
 2281              	.LLST9:
 2282 01a9 00000000 		.4byte	.LFB38
 2283 01ad 02000000 		.4byte	.LCFI21
 2284 01b1 0100     		.2byte	0x1
 2285 01b3 5D       		.byte	0x5d
 2286 01b4 02000000 		.4byte	.LCFI21
 2287 01b8 04000000 		.4byte	.LCFI22
 2288 01bc 0200     		.2byte	0x2
 2289 01be 7D       		.byte	0x7d
 2290 01bf 04       		.sleb128 4
 2291 01c0 04000000 		.4byte	.LCFI22
 2292 01c4 30000000 		.4byte	.LFE38
 2293 01c8 0200     		.2byte	0x2
 2294 01ca 77       		.byte	0x77
 2295 01cb 04       		.sleb128 4
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 52


 2296 01cc 00000000 		.4byte	0x0
 2297 01d0 00000000 		.4byte	0x0
 2298              	.LLST10:
 2299 01d4 00000000 		.4byte	.LFB39
 2300 01d8 02000000 		.4byte	.LCFI23
 2301 01dc 0100     		.2byte	0x1
 2302 01de 5D       		.byte	0x5d
 2303 01df 02000000 		.4byte	.LCFI23
 2304 01e3 04000000 		.4byte	.LCFI24
 2305 01e7 0200     		.2byte	0x2
 2306 01e9 7D       		.byte	0x7d
 2307 01ea 04       		.sleb128 4
 2308 01eb 04000000 		.4byte	.LCFI24
 2309 01ef 30000000 		.4byte	.LFE39
 2310 01f3 0200     		.2byte	0x2
 2311 01f5 77       		.byte	0x77
 2312 01f6 04       		.sleb128 4
 2313 01f7 00000000 		.4byte	0x0
 2314 01fb 00000000 		.4byte	0x0
 2315              	.LLST11:
 2316 01ff 00000000 		.4byte	.LFB40
 2317 0203 02000000 		.4byte	.LCFI25
 2318 0207 0100     		.2byte	0x1
 2319 0209 5D       		.byte	0x5d
 2320 020a 02000000 		.4byte	.LCFI25
 2321 020e 04000000 		.4byte	.LCFI26
 2322 0212 0200     		.2byte	0x2
 2323 0214 7D       		.byte	0x7d
 2324 0215 04       		.sleb128 4
 2325 0216 04000000 		.4byte	.LCFI26
 2326 021a 30000000 		.4byte	.LFE40
 2327 021e 0200     		.2byte	0x2
 2328 0220 77       		.byte	0x77
 2329 0221 04       		.sleb128 4
 2330 0222 00000000 		.4byte	0x0
 2331 0226 00000000 		.4byte	0x0
 2332              	.LLST12:
 2333 022a 00000000 		.4byte	.LFB41
 2334 022e 02000000 		.4byte	.LCFI27
 2335 0232 0100     		.2byte	0x1
 2336 0234 5D       		.byte	0x5d
 2337 0235 02000000 		.4byte	.LCFI27
 2338 0239 04000000 		.4byte	.LCFI28
 2339 023d 0200     		.2byte	0x2
 2340 023f 7D       		.byte	0x7d
 2341 0240 08       		.sleb128 8
 2342 0241 04000000 		.4byte	.LCFI28
 2343 0245 06000000 		.4byte	.LCFI29
 2344 0249 0200     		.2byte	0x2
 2345 024b 7D       		.byte	0x7d
 2346 024c 10       		.sleb128 16
 2347 024d 06000000 		.4byte	.LCFI29
 2348 0251 D4020000 		.4byte	.LFE41
 2349 0255 0200     		.2byte	0x2
 2350 0257 77       		.byte	0x77
 2351 0258 10       		.sleb128 16
 2352 0259 00000000 		.4byte	0x0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 53


 2353 025d 00000000 		.4byte	0x0
 2354              		.file 2 "./Generated_Source/PSoC5/core_cm3.h"
 2355              		.section	.debug_info
 2356 0000 8F050000 		.4byte	0x58f
 2357 0004 0200     		.2byte	0x2
 2358 0006 00000000 		.4byte	.Ldebug_abbrev0
 2359 000a 04       		.byte	0x4
 2360 000b 01       		.uleb128 0x1
 2361 000c 22030000 		.4byte	.LASF61
 2362 0010 01       		.byte	0x1
 2363 0011 07030000 		.4byte	.LASF62
 2364 0015 AA010000 		.4byte	.LASF63
 2365 0019 00000000 		.4byte	0x0
 2366 001d 00000000 		.4byte	0x0
 2367 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2368 0025 00000000 		.4byte	.Ldebug_line0
 2369 0029 02       		.uleb128 0x2
 2370 002a 01       		.byte	0x1
 2371 002b 06       		.byte	0x6
 2372 002c 9E010000 		.4byte	.LASF0
 2373 0030 02       		.uleb128 0x2
 2374 0031 01       		.byte	0x1
 2375 0032 08       		.byte	0x8
 2376 0033 82010000 		.4byte	.LASF1
 2377 0037 02       		.uleb128 0x2
 2378 0038 02       		.byte	0x2
 2379 0039 05       		.byte	0x5
 2380 003a 4E000000 		.4byte	.LASF2
 2381 003e 02       		.uleb128 0x2
 2382 003f 02       		.byte	0x2
 2383 0040 07       		.byte	0x7
 2384 0041 90020000 		.4byte	.LASF3
 2385 0045 02       		.uleb128 0x2
 2386 0046 04       		.byte	0x4
 2387 0047 05       		.byte	0x5
 2388 0048 A8020000 		.4byte	.LASF4
 2389 004c 02       		.uleb128 0x2
 2390 004d 04       		.byte	0x4
 2391 004e 07       		.byte	0x7
 2392 004f 27020000 		.4byte	.LASF5
 2393 0053 02       		.uleb128 0x2
 2394 0054 08       		.byte	0x8
 2395 0055 05       		.byte	0x5
 2396 0056 1A010000 		.4byte	.LASF6
 2397 005a 02       		.uleb128 0x2
 2398 005b 08       		.byte	0x8
 2399 005c 07       		.byte	0x7
 2400 005d 03020000 		.4byte	.LASF7
 2401 0061 03       		.uleb128 0x3
 2402 0062 04       		.byte	0x4
 2403 0063 05       		.byte	0x5
 2404 0064 696E7400 		.ascii	"int\000"
 2405 0068 02       		.uleb128 0x2
 2406 0069 04       		.byte	0x4
 2407 006a 07       		.byte	0x7
 2408 006b 1A020000 		.4byte	.LASF8
 2409 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 54


 2410 0070 01       		.byte	0x1
 2411 0071 08       		.byte	0x8
 2412 0072 A3020000 		.4byte	.LASF9
 2413 0076 04       		.uleb128 0x4
 2414 0077 04       		.byte	0x4
 2415 0078 07       		.byte	0x7
 2416 0079 05       		.uleb128 0x5
 2417 007a 04       		.byte	0x4
 2418 007b 6F000000 		.4byte	0x6f
 2419 007f 06       		.uleb128 0x6
 2420 0080 01       		.byte	0x1
 2421 0081 24000000 		.4byte	.LASF11
 2422 0085 01       		.byte	0x1
 2423 0086 34       		.byte	0x34
 2424 0087 01       		.byte	0x1
 2425 0088 A9000000 		.4byte	0xa9
 2426 008c 00000000 		.4byte	.LFB29
 2427 0090 2A000000 		.4byte	.LFE29
 2428 0094 00000000 		.4byte	.LLST0
 2429 0098 A9000000 		.4byte	0xa9
 2430 009c 07       		.uleb128 0x7
 2431 009d 6100     		.ascii	"a\000"
 2432 009f 01       		.byte	0x1
 2433 00a0 34       		.byte	0x34
 2434 00a1 A9000000 		.4byte	0xa9
 2435 00a5 02       		.byte	0x2
 2436 00a6 91       		.byte	0x91
 2437 00a7 70       		.sleb128 -16
 2438 00a8 00       		.byte	0x0
 2439 00a9 02       		.uleb128 0x2
 2440 00aa 08       		.byte	0x8
 2441 00ab 04       		.byte	0x4
 2442 00ac E1020000 		.4byte	.LASF10
 2443 00b0 06       		.uleb128 0x6
 2444 00b1 01       		.byte	0x1
 2445 00b2 1D030000 		.4byte	.LASF12
 2446 00b6 01       		.byte	0x1
 2447 00b7 38       		.byte	0x38
 2448 00b8 01       		.byte	0x1
 2449 00b9 A9000000 		.4byte	0xa9
 2450 00bd 00000000 		.4byte	.LFB30
 2451 00c1 3A000000 		.4byte	.LFE30
 2452 00c5 37000000 		.4byte	.LLST1
 2453 00c9 DA000000 		.4byte	0xda
 2454 00cd 07       		.uleb128 0x7
 2455 00ce 6100     		.ascii	"a\000"
 2456 00d0 01       		.byte	0x1
 2457 00d1 38       		.byte	0x38
 2458 00d2 A9000000 		.4byte	0xa9
 2459 00d6 02       		.byte	0x2
 2460 00d7 91       		.byte	0x91
 2461 00d8 70       		.sleb128 -16
 2462 00d9 00       		.byte	0x0
 2463 00da 08       		.uleb128 0x8
 2464 00db 01       		.byte	0x1
 2465 00dc D2000000 		.4byte	.LASF31
 2466 00e0 01       		.byte	0x1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 55


 2467 00e1 44       		.byte	0x44
 2468 00e2 01       		.byte	0x1
 2469 00e3 00000000 		.4byte	.LFB31
 2470 00e7 80090000 		.4byte	.LFE31
 2471 00eb 6E000000 		.4byte	.LLST2
 2472 00ef 67020000 		.4byte	0x267
 2473 00f3 09       		.uleb128 0x9
 2474 00f4 D9020000 		.4byte	.LASF13
 2475 00f8 01       		.byte	0x1
 2476 00f9 44       		.byte	0x44
 2477 00fa 79000000 		.4byte	0x79
 2478 00fe 03       		.byte	0x3
 2479 00ff 91       		.byte	0x91
 2480 0100 F47E     		.sleb128 -140
 2481 0102 0A       		.uleb128 0xa
 2482 0103 CF020000 		.4byte	.LASF14
 2483 0107 01       		.byte	0x1
 2484 0108 47       		.byte	0x47
 2485 0109 67020000 		.4byte	0x267
 2486 010d 03       		.byte	0x3
 2487 010e 91       		.byte	0x91
 2488 010f A87F     		.sleb128 -88
 2489 0111 0B       		.uleb128 0xb
 2490 0112 2E000000 		.4byte	.LBB2
 2491 0116 6A090000 		.4byte	.LBE2
 2492 011a 0A       		.uleb128 0xa
 2493 011b 52030000 		.4byte	.LASF15
 2494 011f 01       		.byte	0x1
 2495 0120 49       		.byte	0x49
 2496 0121 61000000 		.4byte	0x61
 2497 0125 03       		.byte	0x3
 2498 0126 91       		.byte	0x91
 2499 0127 AC7F     		.sleb128 -84
 2500 0129 0C       		.uleb128 0xc
 2501 012a 54000000 		.4byte	.LBB3
 2502 012e AE000000 		.4byte	.LBE3
 2503 0132 46010000 		.4byte	0x146
 2504 0136 0A       		.uleb128 0xa
 2505 0137 91000000 		.4byte	.LASF16
 2506 013b 01       		.byte	0x1
 2507 013c 4D       		.byte	0x4d
 2508 013d 61000000 		.4byte	0x61
 2509 0141 03       		.byte	0x3
 2510 0142 91       		.byte	0x91
 2511 0143 A47F     		.sleb128 -92
 2512 0145 00       		.byte	0x0
 2513 0146 0C       		.uleb128 0xc
 2514 0147 32020000 		.4byte	.LBB4
 2515 014b 96020000 		.4byte	.LBE4
 2516 014f 63010000 		.4byte	0x163
 2517 0153 0A       		.uleb128 0xa
 2518 0154 91000000 		.4byte	.LASF16
 2519 0158 01       		.byte	0x1
 2520 0159 89       		.byte	0x89
 2521 015a 61000000 		.4byte	0x61
 2522 015e 03       		.byte	0x3
 2523 015f 91       		.byte	0x91
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 56


 2524 0160 A07F     		.sleb128 -96
 2525 0162 00       		.byte	0x0
 2526 0163 0C       		.uleb128 0xc
 2527 0164 AE020000 		.4byte	.LBB5
 2528 0168 10030000 		.4byte	.LBE5
 2529 016c 80010000 		.4byte	0x180
 2530 0170 0A       		.uleb128 0xa
 2531 0171 91000000 		.4byte	.LASF16
 2532 0175 01       		.byte	0x1
 2533 0176 94       		.byte	0x94
 2534 0177 A9000000 		.4byte	0xa9
 2535 017b 03       		.byte	0x3
 2536 017c 91       		.byte	0x91
 2537 017d 987F     		.sleb128 -104
 2538 017f 00       		.byte	0x0
 2539 0180 0C       		.uleb128 0xc
 2540 0181 28030000 		.4byte	.LBB6
 2541 0185 8C030000 		.4byte	.LBE6
 2542 0189 9D010000 		.4byte	0x19d
 2543 018d 0A       		.uleb128 0xa
 2544 018e 91000000 		.4byte	.LASF16
 2545 0192 01       		.byte	0x1
 2546 0193 9F       		.byte	0x9f
 2547 0194 61000000 		.4byte	0x61
 2548 0198 03       		.byte	0x3
 2549 0199 91       		.byte	0x91
 2550 019a 947F     		.sleb128 -108
 2551 019c 00       		.byte	0x0
 2552 019d 0C       		.uleb128 0xc
 2553 019e A4030000 		.4byte	.LBB7
 2554 01a2 FC030000 		.4byte	.LBE7
 2555 01a6 BA010000 		.4byte	0x1ba
 2556 01aa 0A       		.uleb128 0xa
 2557 01ab 91000000 		.4byte	.LASF16
 2558 01af 01       		.byte	0x1
 2559 01b0 AA       		.byte	0xaa
 2560 01b1 61000000 		.4byte	0x61
 2561 01b5 03       		.byte	0x3
 2562 01b6 91       		.byte	0x91
 2563 01b7 907F     		.sleb128 -112
 2564 01b9 00       		.byte	0x0
 2565 01ba 0C       		.uleb128 0xc
 2566 01bb 14040000 		.4byte	.LBB8
 2567 01bf 76040000 		.4byte	.LBE8
 2568 01c3 D7010000 		.4byte	0x1d7
 2569 01c7 0A       		.uleb128 0xa
 2570 01c8 91000000 		.4byte	.LASF16
 2571 01cc 01       		.byte	0x1
 2572 01cd B5       		.byte	0xb5
 2573 01ce A9000000 		.4byte	0xa9
 2574 01d2 03       		.byte	0x3
 2575 01d3 91       		.byte	0x91
 2576 01d4 887F     		.sleb128 -120
 2577 01d6 00       		.byte	0x0
 2578 01d7 0C       		.uleb128 0xc
 2579 01d8 8E040000 		.4byte	.LBB9
 2580 01dc F0040000 		.4byte	.LBE9
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 57


 2581 01e0 F4010000 		.4byte	0x1f4
 2582 01e4 0A       		.uleb128 0xa
 2583 01e5 91000000 		.4byte	.LASF16
 2584 01e9 01       		.byte	0x1
 2585 01ea C0       		.byte	0xc0
 2586 01eb A9000000 		.4byte	0xa9
 2587 01ef 03       		.byte	0x3
 2588 01f0 91       		.byte	0x91
 2589 01f1 807F     		.sleb128 -128
 2590 01f3 00       		.byte	0x0
 2591 01f4 0B       		.uleb128 0xb
 2592 01f5 FE060000 		.4byte	.LBB10
 2593 01f9 6A090000 		.4byte	.LBE10
 2594 01fd 0D       		.uleb128 0xd
 2595 01fe 91000000 		.4byte	.LASF16
 2596 0202 01       		.byte	0x1
 2597 0203 0701     		.2byte	0x107
 2598 0205 A9000000 		.4byte	0xa9
 2599 0209 03       		.byte	0x3
 2600 020a 91       		.byte	0x91
 2601 020b F87E     		.sleb128 -136
 2602 020d 0D       		.uleb128 0xd
 2603 020e BA000000 		.4byte	.LASF17
 2604 0212 01       		.byte	0x1
 2605 0213 1201     		.2byte	0x112
 2606 0215 A9000000 		.4byte	0xa9
 2607 0219 03       		.byte	0x3
 2608 021a 91       		.byte	0x91
 2609 021b B07F     		.sleb128 -80
 2610 021d 0D       		.uleb128 0xd
 2611 021e 53010000 		.4byte	.LASF18
 2612 0222 01       		.byte	0x1
 2613 0223 1301     		.2byte	0x113
 2614 0225 A9000000 		.4byte	0xa9
 2615 0229 03       		.byte	0x3
 2616 022a 91       		.byte	0x91
 2617 022b B87F     		.sleb128 -72
 2618 022d 0B       		.uleb128 0xb
 2619 022e 2C070000 		.4byte	.LBB11
 2620 0232 B8080000 		.4byte	.LBE11
 2621 0236 0D       		.uleb128 0xd
 2622 0237 6D000000 		.4byte	.LASF19
 2623 023b 01       		.byte	0x1
 2624 023c 0B01     		.2byte	0x10b
 2625 023e A9000000 		.4byte	0xa9
 2626 0242 02       		.byte	0x2
 2627 0243 91       		.byte	0x91
 2628 0244 40       		.sleb128 -64
 2629 0245 0D       		.uleb128 0xd
 2630 0246 DF000000 		.4byte	.LASF20
 2631 024a 01       		.byte	0x1
 2632 024b 0C01     		.2byte	0x10c
 2633 024d A9000000 		.4byte	0xa9
 2634 0251 02       		.byte	0x2
 2635 0252 91       		.byte	0x91
 2636 0253 48       		.sleb128 -56
 2637 0254 0D       		.uleb128 0xd
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 58


 2638 0255 B1020000 		.4byte	.LASF21
 2639 0259 01       		.byte	0x1
 2640 025a 0D01     		.2byte	0x10d
 2641 025c A9000000 		.4byte	0xa9
 2642 0260 02       		.byte	0x2
 2643 0261 91       		.byte	0x91
 2644 0262 50       		.sleb128 -48
 2645 0263 00       		.byte	0x0
 2646 0264 00       		.byte	0x0
 2647 0265 00       		.byte	0x0
 2648 0266 00       		.byte	0x0
 2649 0267 0E       		.uleb128 0xe
 2650 0268 6F000000 		.4byte	0x6f
 2651 026c 77020000 		.4byte	0x277
 2652 0270 0F       		.uleb128 0xf
 2653 0271 76000000 		.4byte	0x76
 2654 0275 03       		.byte	0x3
 2655 0276 00       		.byte	0x0
 2656 0277 10       		.uleb128 0x10
 2657 0278 01       		.byte	0x1
 2658 0279 49020000 		.4byte	.LASF22
 2659 027d 01       		.byte	0x1
 2660 027e 1C01     		.2byte	0x11c
 2661 0280 01       		.byte	0x1
 2662 0281 00000000 		.4byte	.LFB32
 2663 0285 2E000000 		.4byte	.LFE32
 2664 0289 A7000000 		.4byte	.LLST3
 2665 028d 10       		.uleb128 0x10
 2666 028e 01       		.byte	0x1
 2667 028f 64000000 		.4byte	.LASF23
 2668 0293 01       		.byte	0x1
 2669 0294 2401     		.2byte	0x124
 2670 0296 01       		.byte	0x1
 2671 0297 00000000 		.4byte	.LFB33
 2672 029b 2E000000 		.4byte	.LFE33
 2673 029f D2000000 		.4byte	.LLST4
 2674 02a3 10       		.uleb128 0x10
 2675 02a4 01       		.byte	0x1
 2676 02a5 58000000 		.4byte	.LASF24
 2677 02a9 01       		.byte	0x1
 2678 02aa 2C01     		.2byte	0x12c
 2679 02ac 01       		.byte	0x1
 2680 02ad 00000000 		.4byte	.LFB34
 2681 02b1 2E000000 		.4byte	.LFE34
 2682 02b5 FD000000 		.4byte	.LLST5
 2683 02b9 10       		.uleb128 0x10
 2684 02ba 01       		.byte	0x1
 2685 02bb 90010000 		.4byte	.LASF25
 2686 02bf 01       		.byte	0x1
 2687 02c0 3401     		.2byte	0x134
 2688 02c2 01       		.byte	0x1
 2689 02c3 00000000 		.4byte	.LFB35
 2690 02c7 2E000000 		.4byte	.LFE35
 2691 02cb 28010000 		.4byte	.LLST6
 2692 02cf 10       		.uleb128 0x10
 2693 02d0 01       		.byte	0x1
 2694 02d1 77000000 		.4byte	.LASF26
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 59


 2695 02d5 01       		.byte	0x1
 2696 02d6 3C01     		.2byte	0x13c
 2697 02d8 01       		.byte	0x1
 2698 02d9 00000000 		.4byte	.LFB36
 2699 02dd 2E000000 		.4byte	.LFE36
 2700 02e1 53010000 		.4byte	.LLST7
 2701 02e5 10       		.uleb128 0x10
 2702 02e6 01       		.byte	0x1
 2703 02e7 56020000 		.4byte	.LASF27
 2704 02eb 01       		.byte	0x1
 2705 02ec 4401     		.2byte	0x144
 2706 02ee 01       		.byte	0x1
 2707 02ef 00000000 		.4byte	.LFB37
 2708 02f3 30000000 		.4byte	.LFE37
 2709 02f7 7E010000 		.4byte	.LLST8
 2710 02fb 10       		.uleb128 0x10
 2711 02fc 01       		.byte	0x1
 2712 02fd 5A010000 		.4byte	.LASF28
 2713 0301 01       		.byte	0x1
 2714 0302 4D01     		.2byte	0x14d
 2715 0304 01       		.byte	0x1
 2716 0305 00000000 		.4byte	.LFB38
 2717 0309 30000000 		.4byte	.LFE38
 2718 030d A9010000 		.4byte	.LLST9
 2719 0311 10       		.uleb128 0x10
 2720 0312 01       		.byte	0x1
 2721 0313 75030000 		.4byte	.LASF29
 2722 0317 01       		.byte	0x1
 2723 0318 5601     		.2byte	0x156
 2724 031a 01       		.byte	0x1
 2725 031b 00000000 		.4byte	.LFB39
 2726 031f 30000000 		.4byte	.LFE39
 2727 0323 D4010000 		.4byte	.LLST10
 2728 0327 10       		.uleb128 0x10
 2729 0328 01       		.byte	0x1
 2730 0329 39020000 		.4byte	.LASF30
 2731 032d 01       		.byte	0x1
 2732 032e 5F01     		.2byte	0x15f
 2733 0330 01       		.byte	0x1
 2734 0331 00000000 		.4byte	.LFB40
 2735 0335 30000000 		.4byte	.LFE40
 2736 0339 FF010000 		.4byte	.LLST11
 2737 033d 11       		.uleb128 0x11
 2738 033e 01       		.byte	0x1
 2739 033f 81000000 		.4byte	.LASF32
 2740 0343 01       		.byte	0x1
 2741 0344 6701     		.2byte	0x167
 2742 0346 61000000 		.4byte	0x61
 2743 034a 00000000 		.4byte	.LFB41
 2744 034e D4020000 		.4byte	.LFE41
 2745 0352 2A020000 		.4byte	.LLST12
 2746 0356 74030000 		.4byte	0x374
 2747 035a 0B       		.uleb128 0xb
 2748 035b 84010000 		.4byte	.LBB12
 2749 035f A0010000 		.4byte	.LBE12
 2750 0363 0D       		.uleb128 0xd
 2751 0364 D9020000 		.4byte	.LASF13
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 60


 2752 0368 01       		.byte	0x1
 2753 0369 B301     		.2byte	0x1b3
 2754 036b 79000000 		.4byte	0x79
 2755 036f 02       		.byte	0x2
 2756 0370 91       		.byte	0x91
 2757 0371 74       		.sleb128 -12
 2758 0372 00       		.byte	0x0
 2759 0373 00       		.byte	0x0
 2760 0374 12       		.uleb128 0x12
 2761 0375 E8020000 		.4byte	.LASF33
 2762 0379 02       		.byte	0x2
 2763 037a CE06     		.2byte	0x6ce
 2764 037c 82030000 		.4byte	0x382
 2765 0380 01       		.byte	0x1
 2766 0381 01       		.byte	0x1
 2767 0382 13       		.uleb128 0x13
 2768 0383 61000000 		.4byte	0x61
 2769 0387 0E       		.uleb128 0xe
 2770 0388 6F000000 		.4byte	0x6f
 2771 038c 97030000 		.4byte	0x397
 2772 0390 0F       		.uleb128 0xf
 2773 0391 76000000 		.4byte	0x76
 2774 0395 0B       		.byte	0xb
 2775 0396 00       		.byte	0x0
 2776 0397 14       		.uleb128 0x14
 2777 0398 45030000 		.4byte	.LASF34
 2778 039c 01       		.byte	0x1
 2779 039d 0B       		.byte	0xb
 2780 039e 87030000 		.4byte	0x387
 2781 03a2 01       		.byte	0x1
 2782 03a3 05       		.byte	0x5
 2783 03a4 03       		.byte	0x3
 2784 03a5 00000000 		.4byte	buildVersion
 2785 03a9 0E       		.uleb128 0xe
 2786 03aa 6F000000 		.4byte	0x6f
 2787 03ae B9030000 		.4byte	0x3b9
 2788 03b2 0F       		.uleb128 0xf
 2789 03b3 76000000 		.4byte	0x76
 2790 03b7 63       		.byte	0x63
 2791 03b8 00       		.byte	0x0
 2792 03b9 14       		.uleb128 0x14
 2793 03ba 49010000 		.4byte	.LASF35
 2794 03be 01       		.byte	0x1
 2795 03bf 0C       		.byte	0xc
 2796 03c0 A9030000 		.4byte	0x3a9
 2797 03c4 01       		.byte	0x1
 2798 03c5 05       		.byte	0x5
 2799 03c6 03       		.byte	0x3
 2800 03c7 00000000 		.4byte	strbuffer
 2801 03cb 14       		.uleb128 0x14
 2802 03cc 6A020000 		.4byte	.LASF36
 2803 03d0 01       		.byte	0x1
 2804 03d1 12       		.byte	0x12
 2805 03d2 61000000 		.4byte	0x61
 2806 03d6 01       		.byte	0x1
 2807 03d7 05       		.byte	0x5
 2808 03d8 03       		.byte	0x3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 61


 2809 03d9 00000000 		.4byte	buttonInterrupted
 2810 03dd 14       		.uleb128 0x14
 2811 03de 97000000 		.4byte	.LASF37
 2812 03e2 01       		.byte	0x1
 2813 03e3 13       		.byte	0x13
 2814 03e4 61000000 		.4byte	0x61
 2815 03e8 01       		.byte	0x1
 2816 03e9 05       		.byte	0x5
 2817 03ea 03       		.byte	0x3
 2818 03eb 00000000 		.4byte	rxInterrupted
 2819 03ef 14       		.uleb128 0x14
 2820 03f0 A5000000 		.4byte	.LASF38
 2821 03f4 01       		.byte	0x1
 2822 03f5 14       		.byte	0x14
 2823 03f6 61000000 		.4byte	0x61
 2824 03fa 01       		.byte	0x1
 2825 03fb 05       		.byte	0x5
 2826 03fc 03       		.byte	0x3
 2827 03fd 00000000 		.4byte	wheelTickInterrupted
 2828 0401 14       		.uleb128 0x14
 2829 0402 2E030000 		.4byte	.LASF39
 2830 0406 01       		.byte	0x1
 2831 0407 15       		.byte	0x15
 2832 0408 61000000 		.4byte	0x61
 2833 040c 01       		.byte	0x1
 2834 040d 05       		.byte	0x5
 2835 040e 03       		.byte	0x3
 2836 040f 00000000 		.4byte	tickTimeoutInterrupted
 2837 0413 14       		.uleb128 0x14
 2838 0414 BB020000 		.4byte	.LASF40
 2839 0418 01       		.byte	0x1
 2840 0419 16       		.byte	0x16
 2841 041a 61000000 		.4byte	0x61
 2842 041e 01       		.byte	0x1
 2843 041f 05       		.byte	0x5
 2844 0420 03       		.byte	0x3
 2845 0421 00000000 		.4byte	pidTimerInterrupted
 2846 0425 14       		.uleb128 0x14
 2847 0426 28010000 		.4byte	.LASF41
 2848 042a 01       		.byte	0x1
 2849 042b 17       		.byte	0x17
 2850 042c 61000000 		.4byte	0x61
 2851 0430 01       		.byte	0x1
 2852 0431 05       		.byte	0x5
 2853 0432 03       		.byte	0x3
 2854 0433 00000000 		.4byte	camCompRiseInterrupted
 2855 0437 14       		.uleb128 0x14
 2856 0438 03010000 		.4byte	.LASF42
 2857 043c 01       		.byte	0x1
 2858 043d 18       		.byte	0x18
 2859 043e 61000000 		.4byte	0x61
 2860 0442 01       		.byte	0x1
 2861 0443 05       		.byte	0x5
 2862 0444 03       		.byte	0x3
 2863 0445 00000000 		.4byte	camCompFallInterrupted
 2864 0449 14       		.uleb128 0x14
 2865 044a F5020000 		.4byte	.LASF43
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 62


 2866 044e 01       		.byte	0x1
 2867 044f 19       		.byte	0x19
 2868 0450 61000000 		.4byte	0x61
 2869 0454 01       		.byte	0x1
 2870 0455 05       		.byte	0x5
 2871 0456 03       		.byte	0x3
 2872 0457 00000000 		.4byte	camRowInterrupted
 2873 045b 14       		.uleb128 0x14
 2874 045c 00000000 		.4byte	.LASF44
 2875 0460 01       		.byte	0x1
 2876 0461 1A       		.byte	0x1a
 2877 0462 61000000 		.4byte	0x61
 2878 0466 01       		.byte	0x1
 2879 0467 05       		.byte	0x5
 2880 0468 03       		.byte	0x3
 2881 0469 00000000 		.4byte	camFrameInterrupted
 2882 046d 14       		.uleb128 0x14
 2883 046e 3F010000 		.4byte	.LASF45
 2884 0472 01       		.byte	0x1
 2885 0473 1C       		.byte	0x1c
 2886 0474 61000000 		.4byte	0x61
 2887 0478 01       		.byte	0x1
 2888 0479 05       		.byte	0x5
 2889 047a 03       		.byte	0x3
 2890 047b 00000000 		.4byte	numFrames
 2891 047f 14       		.uleb128 0x14
 2892 0480 46000000 		.4byte	.LASF46
 2893 0484 01       		.byte	0x1
 2894 0485 1D       		.byte	0x1d
 2895 0486 61000000 		.4byte	0x61
 2896 048a 01       		.byte	0x1
 2897 048b 05       		.byte	0x5
 2898 048c 03       		.byte	0x3
 2899 048d 00000000 		.4byte	numRows
 2900 0491 14       		.uleb128 0x14
 2901 0492 10030000 		.4byte	.LASF47
 2902 0496 01       		.byte	0x1
 2903 0497 1E       		.byte	0x1e
 2904 0498 61000000 		.4byte	0x61
 2905 049c 01       		.byte	0x1
 2906 049d 05       		.byte	0x5
 2907 049e 03       		.byte	0x3
 2908 049f 00000000 		.4byte	numCompBegin
 2909 04a3 14       		.uleb128 0x14
 2910 04a4 86000000 		.4byte	.LASF48
 2911 04a8 01       		.byte	0x1
 2912 04a9 1F       		.byte	0x1f
 2913 04aa 61000000 		.4byte	0x61
 2914 04ae 01       		.byte	0x1
 2915 04af 05       		.byte	0x5
 2916 04b0 03       		.byte	0x3
 2917 04b1 00000000 		.4byte	numCompEnd
 2918 04b5 14       		.uleb128 0x14
 2919 04b6 6B030000 		.4byte	.LASF49
 2920 04ba 01       		.byte	0x1
 2921 04bb 20       		.byte	0x20
 2922 04bc 61000000 		.4byte	0x61
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 63


 2923 04c0 01       		.byte	0x1
 2924 04c1 05       		.byte	0x5
 2925 04c2 03       		.byte	0x3
 2926 04c3 00000000 		.4byte	rowCycles
 2927 04c7 14       		.uleb128 0x14
 2928 04c8 14000000 		.4byte	.LASF50
 2929 04cc 01       		.byte	0x1
 2930 04cd 21       		.byte	0x21
 2931 04ce 61000000 		.4byte	0x61
 2932 04d2 01       		.byte	0x1
 2933 04d3 05       		.byte	0x5
 2934 04d4 03       		.byte	0x3
 2935 04d5 00000000 		.4byte	lineBeginCycles
 2936 04d9 14       		.uleb128 0x14
 2937 04da 38000000 		.4byte	.LASF51
 2938 04de 01       		.byte	0x1
 2939 04df 22       		.byte	0x22
 2940 04e0 61000000 		.4byte	0x61
 2941 04e4 01       		.byte	0x1
 2942 04e5 05       		.byte	0x5
 2943 04e6 03       		.byte	0x3
 2944 04e7 00000000 		.4byte	lineEndCycles
 2945 04eb 14       		.uleb128 0x14
 2946 04ec 2A000000 		.4byte	.LASF52
 2947 04f0 01       		.byte	0x1
 2948 04f1 24       		.byte	0x24
 2949 04f2 FD040000 		.4byte	0x4fd
 2950 04f6 01       		.byte	0x1
 2951 04f7 05       		.byte	0x5
 2952 04f8 03       		.byte	0x3
 2953 04f9 00000000 		.4byte	MAIN_CLK_FREQ
 2954 04fd 15       		.uleb128 0x15
 2955 04fe A9000000 		.4byte	0xa9
 2956 0502 14       		.uleb128 0x14
 2957 0503 C3000000 		.4byte	.LASF53
 2958 0507 01       		.byte	0x1
 2959 0508 27       		.byte	0x27
 2960 0509 FD040000 		.4byte	0x4fd
 2961 050d 01       		.byte	0x1
 2962 050e 05       		.byte	0x5
 2963 050f 03       		.byte	0x3
 2964 0510 00000000 		.4byte	MIN_TIME_SERVO
 2965 0514 14       		.uleb128 0x14
 2966 0515 5C030000 		.4byte	.LASF54
 2967 0519 01       		.byte	0x1
 2968 051a 28       		.byte	0x28
 2969 051b FD040000 		.4byte	0x4fd
 2970 051f 01       		.byte	0x1
 2971 0520 05       		.byte	0x5
 2972 0521 03       		.byte	0x3
 2973 0522 00000000 		.4byte	MAX_TIME_SERVO
 2974 0526 14       		.uleb128 0x14
 2975 0527 7C020000 		.4byte	.LASF55
 2976 052b 01       		.byte	0x1
 2977 052c 2A       		.byte	0x2a
 2978 052d FD040000 		.4byte	0x4fd
 2979 0531 01       		.byte	0x1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 64


 2980 0532 05       		.byte	0x5
 2981 0533 03       		.byte	0x3
 2982 0534 00000000 		.4byte	CAMERA_TIMER_PERIOD
 2983 0538 14       		.uleb128 0x14
 2984 0539 6E010000 		.4byte	.LASF56
 2985 053d 01       		.byte	0x1
 2986 053e 2D       		.byte	0x2d
 2987 053f FD040000 		.4byte	0x4fd
 2988 0543 01       		.byte	0x1
 2989 0544 05       		.byte	0x5
 2990 0545 03       		.byte	0x3
 2991 0546 00000000 		.4byte	EXPECTED_ROW_CYCLES
 2992 054a 14       		.uleb128 0x14
 2993 054b EB000000 		.4byte	.LASF57
 2994 054f 01       		.byte	0x1
 2995 0550 2F       		.byte	0x2f
 2996 0551 61000000 		.4byte	0x61
 2997 0555 01       		.byte	0x1
 2998 0556 05       		.byte	0x5
 2999 0557 03       		.byte	0x3
 3000 0558 00000000 		.4byte	test6
 3001 055c 14       		.uleb128 0x14
 3002 055d F1000000 		.4byte	.LASF58
 3003 0561 01       		.byte	0x1
 3004 0562 30       		.byte	0x30
 3005 0563 61000000 		.4byte	0x61
 3006 0567 01       		.byte	0x1
 3007 0568 05       		.byte	0x5
 3008 0569 03       		.byte	0x3
 3009 056a 00000000 		.4byte	test7
 3010 056e 14       		.uleb128 0x14
 3011 056f F7000000 		.4byte	.LASF59
 3012 0573 01       		.byte	0x1
 3013 0574 31       		.byte	0x31
 3014 0575 61000000 		.4byte	0x61
 3015 0579 01       		.byte	0x1
 3016 057a 05       		.byte	0x5
 3017 057b 03       		.byte	0x3
 3018 057c 00000000 		.4byte	test8
 3019 0580 14       		.uleb128 0x14
 3020 0581 FD000000 		.4byte	.LASF60
 3021 0585 01       		.byte	0x1
 3022 0586 32       		.byte	0x32
 3023 0587 61000000 		.4byte	0x61
 3024 058b 01       		.byte	0x1
 3025 058c 05       		.byte	0x5
 3026 058d 03       		.byte	0x3
 3027 058e 00000000 		.4byte	test9
 3028 0592 00       		.byte	0x0
 3029              		.section	.debug_abbrev
 3030 0000 01       		.uleb128 0x1
 3031 0001 11       		.uleb128 0x11
 3032 0002 01       		.byte	0x1
 3033 0003 25       		.uleb128 0x25
 3034 0004 0E       		.uleb128 0xe
 3035 0005 13       		.uleb128 0x13
 3036 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 65


 3037 0007 03       		.uleb128 0x3
 3038 0008 0E       		.uleb128 0xe
 3039 0009 1B       		.uleb128 0x1b
 3040 000a 0E       		.uleb128 0xe
 3041 000b 11       		.uleb128 0x11
 3042 000c 01       		.uleb128 0x1
 3043 000d 52       		.uleb128 0x52
 3044 000e 01       		.uleb128 0x1
 3045 000f 55       		.uleb128 0x55
 3046 0010 06       		.uleb128 0x6
 3047 0011 10       		.uleb128 0x10
 3048 0012 06       		.uleb128 0x6
 3049 0013 00       		.byte	0x0
 3050 0014 00       		.byte	0x0
 3051 0015 02       		.uleb128 0x2
 3052 0016 24       		.uleb128 0x24
 3053 0017 00       		.byte	0x0
 3054 0018 0B       		.uleb128 0xb
 3055 0019 0B       		.uleb128 0xb
 3056 001a 3E       		.uleb128 0x3e
 3057 001b 0B       		.uleb128 0xb
 3058 001c 03       		.uleb128 0x3
 3059 001d 0E       		.uleb128 0xe
 3060 001e 00       		.byte	0x0
 3061 001f 00       		.byte	0x0
 3062 0020 03       		.uleb128 0x3
 3063 0021 24       		.uleb128 0x24
 3064 0022 00       		.byte	0x0
 3065 0023 0B       		.uleb128 0xb
 3066 0024 0B       		.uleb128 0xb
 3067 0025 3E       		.uleb128 0x3e
 3068 0026 0B       		.uleb128 0xb
 3069 0027 03       		.uleb128 0x3
 3070 0028 08       		.uleb128 0x8
 3071 0029 00       		.byte	0x0
 3072 002a 00       		.byte	0x0
 3073 002b 04       		.uleb128 0x4
 3074 002c 24       		.uleb128 0x24
 3075 002d 00       		.byte	0x0
 3076 002e 0B       		.uleb128 0xb
 3077 002f 0B       		.uleb128 0xb
 3078 0030 3E       		.uleb128 0x3e
 3079 0031 0B       		.uleb128 0xb
 3080 0032 00       		.byte	0x0
 3081 0033 00       		.byte	0x0
 3082 0034 05       		.uleb128 0x5
 3083 0035 0F       		.uleb128 0xf
 3084 0036 00       		.byte	0x0
 3085 0037 0B       		.uleb128 0xb
 3086 0038 0B       		.uleb128 0xb
 3087 0039 49       		.uleb128 0x49
 3088 003a 13       		.uleb128 0x13
 3089 003b 00       		.byte	0x0
 3090 003c 00       		.byte	0x0
 3091 003d 06       		.uleb128 0x6
 3092 003e 2E       		.uleb128 0x2e
 3093 003f 01       		.byte	0x1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 66


 3094 0040 3F       		.uleb128 0x3f
 3095 0041 0C       		.uleb128 0xc
 3096 0042 03       		.uleb128 0x3
 3097 0043 0E       		.uleb128 0xe
 3098 0044 3A       		.uleb128 0x3a
 3099 0045 0B       		.uleb128 0xb
 3100 0046 3B       		.uleb128 0x3b
 3101 0047 0B       		.uleb128 0xb
 3102 0048 27       		.uleb128 0x27
 3103 0049 0C       		.uleb128 0xc
 3104 004a 49       		.uleb128 0x49
 3105 004b 13       		.uleb128 0x13
 3106 004c 11       		.uleb128 0x11
 3107 004d 01       		.uleb128 0x1
 3108 004e 12       		.uleb128 0x12
 3109 004f 01       		.uleb128 0x1
 3110 0050 40       		.uleb128 0x40
 3111 0051 06       		.uleb128 0x6
 3112 0052 01       		.uleb128 0x1
 3113 0053 13       		.uleb128 0x13
 3114 0054 00       		.byte	0x0
 3115 0055 00       		.byte	0x0
 3116 0056 07       		.uleb128 0x7
 3117 0057 05       		.uleb128 0x5
 3118 0058 00       		.byte	0x0
 3119 0059 03       		.uleb128 0x3
 3120 005a 08       		.uleb128 0x8
 3121 005b 3A       		.uleb128 0x3a
 3122 005c 0B       		.uleb128 0xb
 3123 005d 3B       		.uleb128 0x3b
 3124 005e 0B       		.uleb128 0xb
 3125 005f 49       		.uleb128 0x49
 3126 0060 13       		.uleb128 0x13
 3127 0061 02       		.uleb128 0x2
 3128 0062 0A       		.uleb128 0xa
 3129 0063 00       		.byte	0x0
 3130 0064 00       		.byte	0x0
 3131 0065 08       		.uleb128 0x8
 3132 0066 2E       		.uleb128 0x2e
 3133 0067 01       		.byte	0x1
 3134 0068 3F       		.uleb128 0x3f
 3135 0069 0C       		.uleb128 0xc
 3136 006a 03       		.uleb128 0x3
 3137 006b 0E       		.uleb128 0xe
 3138 006c 3A       		.uleb128 0x3a
 3139 006d 0B       		.uleb128 0xb
 3140 006e 3B       		.uleb128 0x3b
 3141 006f 0B       		.uleb128 0xb
 3142 0070 27       		.uleb128 0x27
 3143 0071 0C       		.uleb128 0xc
 3144 0072 11       		.uleb128 0x11
 3145 0073 01       		.uleb128 0x1
 3146 0074 12       		.uleb128 0x12
 3147 0075 01       		.uleb128 0x1
 3148 0076 40       		.uleb128 0x40
 3149 0077 06       		.uleb128 0x6
 3150 0078 01       		.uleb128 0x1
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 67


 3151 0079 13       		.uleb128 0x13
 3152 007a 00       		.byte	0x0
 3153 007b 00       		.byte	0x0
 3154 007c 09       		.uleb128 0x9
 3155 007d 05       		.uleb128 0x5
 3156 007e 00       		.byte	0x0
 3157 007f 03       		.uleb128 0x3
 3158 0080 0E       		.uleb128 0xe
 3159 0081 3A       		.uleb128 0x3a
 3160 0082 0B       		.uleb128 0xb
 3161 0083 3B       		.uleb128 0x3b
 3162 0084 0B       		.uleb128 0xb
 3163 0085 49       		.uleb128 0x49
 3164 0086 13       		.uleb128 0x13
 3165 0087 02       		.uleb128 0x2
 3166 0088 0A       		.uleb128 0xa
 3167 0089 00       		.byte	0x0
 3168 008a 00       		.byte	0x0
 3169 008b 0A       		.uleb128 0xa
 3170 008c 34       		.uleb128 0x34
 3171 008d 00       		.byte	0x0
 3172 008e 03       		.uleb128 0x3
 3173 008f 0E       		.uleb128 0xe
 3174 0090 3A       		.uleb128 0x3a
 3175 0091 0B       		.uleb128 0xb
 3176 0092 3B       		.uleb128 0x3b
 3177 0093 0B       		.uleb128 0xb
 3178 0094 49       		.uleb128 0x49
 3179 0095 13       		.uleb128 0x13
 3180 0096 02       		.uleb128 0x2
 3181 0097 0A       		.uleb128 0xa
 3182 0098 00       		.byte	0x0
 3183 0099 00       		.byte	0x0
 3184 009a 0B       		.uleb128 0xb
 3185 009b 0B       		.uleb128 0xb
 3186 009c 01       		.byte	0x1
 3187 009d 11       		.uleb128 0x11
 3188 009e 01       		.uleb128 0x1
 3189 009f 12       		.uleb128 0x12
 3190 00a0 01       		.uleb128 0x1
 3191 00a1 00       		.byte	0x0
 3192 00a2 00       		.byte	0x0
 3193 00a3 0C       		.uleb128 0xc
 3194 00a4 0B       		.uleb128 0xb
 3195 00a5 01       		.byte	0x1
 3196 00a6 11       		.uleb128 0x11
 3197 00a7 01       		.uleb128 0x1
 3198 00a8 12       		.uleb128 0x12
 3199 00a9 01       		.uleb128 0x1
 3200 00aa 01       		.uleb128 0x1
 3201 00ab 13       		.uleb128 0x13
 3202 00ac 00       		.byte	0x0
 3203 00ad 00       		.byte	0x0
 3204 00ae 0D       		.uleb128 0xd
 3205 00af 34       		.uleb128 0x34
 3206 00b0 00       		.byte	0x0
 3207 00b1 03       		.uleb128 0x3
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 68


 3208 00b2 0E       		.uleb128 0xe
 3209 00b3 3A       		.uleb128 0x3a
 3210 00b4 0B       		.uleb128 0xb
 3211 00b5 3B       		.uleb128 0x3b
 3212 00b6 05       		.uleb128 0x5
 3213 00b7 49       		.uleb128 0x49
 3214 00b8 13       		.uleb128 0x13
 3215 00b9 02       		.uleb128 0x2
 3216 00ba 0A       		.uleb128 0xa
 3217 00bb 00       		.byte	0x0
 3218 00bc 00       		.byte	0x0
 3219 00bd 0E       		.uleb128 0xe
 3220 00be 01       		.uleb128 0x1
 3221 00bf 01       		.byte	0x1
 3222 00c0 49       		.uleb128 0x49
 3223 00c1 13       		.uleb128 0x13
 3224 00c2 01       		.uleb128 0x1
 3225 00c3 13       		.uleb128 0x13
 3226 00c4 00       		.byte	0x0
 3227 00c5 00       		.byte	0x0
 3228 00c6 0F       		.uleb128 0xf
 3229 00c7 21       		.uleb128 0x21
 3230 00c8 00       		.byte	0x0
 3231 00c9 49       		.uleb128 0x49
 3232 00ca 13       		.uleb128 0x13
 3233 00cb 2F       		.uleb128 0x2f
 3234 00cc 0B       		.uleb128 0xb
 3235 00cd 00       		.byte	0x0
 3236 00ce 00       		.byte	0x0
 3237 00cf 10       		.uleb128 0x10
 3238 00d0 2E       		.uleb128 0x2e
 3239 00d1 00       		.byte	0x0
 3240 00d2 3F       		.uleb128 0x3f
 3241 00d3 0C       		.uleb128 0xc
 3242 00d4 03       		.uleb128 0x3
 3243 00d5 0E       		.uleb128 0xe
 3244 00d6 3A       		.uleb128 0x3a
 3245 00d7 0B       		.uleb128 0xb
 3246 00d8 3B       		.uleb128 0x3b
 3247 00d9 05       		.uleb128 0x5
 3248 00da 27       		.uleb128 0x27
 3249 00db 0C       		.uleb128 0xc
 3250 00dc 11       		.uleb128 0x11
 3251 00dd 01       		.uleb128 0x1
 3252 00de 12       		.uleb128 0x12
 3253 00df 01       		.uleb128 0x1
 3254 00e0 40       		.uleb128 0x40
 3255 00e1 06       		.uleb128 0x6
 3256 00e2 00       		.byte	0x0
 3257 00e3 00       		.byte	0x0
 3258 00e4 11       		.uleb128 0x11
 3259 00e5 2E       		.uleb128 0x2e
 3260 00e6 01       		.byte	0x1
 3261 00e7 3F       		.uleb128 0x3f
 3262 00e8 0C       		.uleb128 0xc
 3263 00e9 03       		.uleb128 0x3
 3264 00ea 0E       		.uleb128 0xe
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 69


 3265 00eb 3A       		.uleb128 0x3a
 3266 00ec 0B       		.uleb128 0xb
 3267 00ed 3B       		.uleb128 0x3b
 3268 00ee 05       		.uleb128 0x5
 3269 00ef 49       		.uleb128 0x49
 3270 00f0 13       		.uleb128 0x13
 3271 00f1 11       		.uleb128 0x11
 3272 00f2 01       		.uleb128 0x1
 3273 00f3 12       		.uleb128 0x12
 3274 00f4 01       		.uleb128 0x1
 3275 00f5 40       		.uleb128 0x40
 3276 00f6 06       		.uleb128 0x6
 3277 00f7 01       		.uleb128 0x1
 3278 00f8 13       		.uleb128 0x13
 3279 00f9 00       		.byte	0x0
 3280 00fa 00       		.byte	0x0
 3281 00fb 12       		.uleb128 0x12
 3282 00fc 34       		.uleb128 0x34
 3283 00fd 00       		.byte	0x0
 3284 00fe 03       		.uleb128 0x3
 3285 00ff 0E       		.uleb128 0xe
 3286 0100 3A       		.uleb128 0x3a
 3287 0101 0B       		.uleb128 0xb
 3288 0102 3B       		.uleb128 0x3b
 3289 0103 05       		.uleb128 0x5
 3290 0104 49       		.uleb128 0x49
 3291 0105 13       		.uleb128 0x13
 3292 0106 3F       		.uleb128 0x3f
 3293 0107 0C       		.uleb128 0xc
 3294 0108 3C       		.uleb128 0x3c
 3295 0109 0C       		.uleb128 0xc
 3296 010a 00       		.byte	0x0
 3297 010b 00       		.byte	0x0
 3298 010c 13       		.uleb128 0x13
 3299 010d 35       		.uleb128 0x35
 3300 010e 00       		.byte	0x0
 3301 010f 49       		.uleb128 0x49
 3302 0110 13       		.uleb128 0x13
 3303 0111 00       		.byte	0x0
 3304 0112 00       		.byte	0x0
 3305 0113 14       		.uleb128 0x14
 3306 0114 34       		.uleb128 0x34
 3307 0115 00       		.byte	0x0
 3308 0116 03       		.uleb128 0x3
 3309 0117 0E       		.uleb128 0xe
 3310 0118 3A       		.uleb128 0x3a
 3311 0119 0B       		.uleb128 0xb
 3312 011a 3B       		.uleb128 0x3b
 3313 011b 0B       		.uleb128 0xb
 3314 011c 49       		.uleb128 0x49
 3315 011d 13       		.uleb128 0x13
 3316 011e 3F       		.uleb128 0x3f
 3317 011f 0C       		.uleb128 0xc
 3318 0120 02       		.uleb128 0x2
 3319 0121 0A       		.uleb128 0xa
 3320 0122 00       		.byte	0x0
 3321 0123 00       		.byte	0x0
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 70


 3322 0124 15       		.uleb128 0x15
 3323 0125 26       		.uleb128 0x26
 3324 0126 00       		.byte	0x0
 3325 0127 49       		.uleb128 0x49
 3326 0128 13       		.uleb128 0x13
 3327 0129 00       		.byte	0x0
 3328 012a 00       		.byte	0x0
 3329 012b 00       		.byte	0x0
 3330              		.section	.debug_pubnames,"",%progbits
 3331 0000 D4020000 		.4byte	0x2d4
 3332 0004 0200     		.2byte	0x2
 3333 0006 00000000 		.4byte	.Ldebug_info0
 3334 000a 93050000 		.4byte	0x593
 3335 000e 7F000000 		.4byte	0x7f
 3336 0012 666C6F6F 		.ascii	"floor\000"
 3336      7200
 3337 0018 B0000000 		.4byte	0xb0
 3338 001c 6365696C 		.ascii	"ceil\000"
 3338      00
 3339 0021 DA000000 		.4byte	0xda
 3340 0025 70617273 		.ascii	"parseMessage\000"
 3340      654D6573 
 3340      73616765 
 3340      00
 3341 0032 77020000 		.4byte	0x277
 3342 0036 62757474 		.ascii	"button_inter\000"
 3342      6F6E5F69 
 3342      6E746572 
 3342      00
 3343 0043 8D020000 		.4byte	0x28d
 3344 0047 72785F69 		.ascii	"rx_inter\000"
 3344      6E746572 
 3344      00
 3345 0050 A3020000 		.4byte	0x2a3
 3346 0054 77686565 		.ascii	"wheel_inter\000"
 3346      6C5F696E 
 3346      74657200 
 3347 0060 B9020000 		.4byte	0x2b9
 3348 0064 74696D65 		.ascii	"timeout_inter\000"
 3348      6F75745F 
 3348      696E7465 
 3348      7200
 3349 0072 CF020000 		.4byte	0x2cf
 3350 0076 7069645F 		.ascii	"pid_inter\000"
 3350      696E7465 
 3350      7200
 3351 0080 E5020000 		.4byte	0x2e5
 3352 0084 63616D5F 		.ascii	"cam_comp_rise_inter\000"
 3352      636F6D70 
 3352      5F726973 
 3352      655F696E 
 3352      74657200 
 3353 0098 FB020000 		.4byte	0x2fb
 3354 009c 63616D5F 		.ascii	"cam_comp_fall_inter\000"
 3354      636F6D70 
 3354      5F66616C 
 3354      6C5F696E 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 71


 3354      74657200 
 3355 00b0 11030000 		.4byte	0x311
 3356 00b4 63616D5F 		.ascii	"cam_row_inter\000"
 3356      726F775F 
 3356      696E7465 
 3356      7200
 3357 00c2 27030000 		.4byte	0x327
 3358 00c6 63616D5F 		.ascii	"cam_frame_inter\000"
 3358      6672616D 
 3358      655F696E 
 3358      74657200 
 3359 00d6 3D030000 		.4byte	0x33d
 3360 00da 6D61696E 		.ascii	"main\000"
 3360      00
 3361 00df 97030000 		.4byte	0x397
 3362 00e3 6275696C 		.ascii	"buildVersion\000"
 3362      64566572 
 3362      73696F6E 
 3362      00
 3363 00f0 B9030000 		.4byte	0x3b9
 3364 00f4 73747262 		.ascii	"strbuffer\000"
 3364      75666665 
 3364      7200
 3365 00fe CB030000 		.4byte	0x3cb
 3366 0102 62757474 		.ascii	"buttonInterrupted\000"
 3366      6F6E496E 
 3366      74657272 
 3366      75707465 
 3366      6400
 3367 0114 DD030000 		.4byte	0x3dd
 3368 0118 7278496E 		.ascii	"rxInterrupted\000"
 3368      74657272 
 3368      75707465 
 3368      6400
 3369 0126 EF030000 		.4byte	0x3ef
 3370 012a 77686565 		.ascii	"wheelTickInterrupted\000"
 3370      6C546963 
 3370      6B496E74 
 3370      65727275 
 3370      70746564 
 3371 013f 01040000 		.4byte	0x401
 3372 0143 7469636B 		.ascii	"tickTimeoutInterrupted\000"
 3372      54696D65 
 3372      6F757449 
 3372      6E746572 
 3372      72757074 
 3373 015a 13040000 		.4byte	0x413
 3374 015e 70696454 		.ascii	"pidTimerInterrupted\000"
 3374      696D6572 
 3374      496E7465 
 3374      72727570 
 3374      74656400 
 3375 0172 25040000 		.4byte	0x425
 3376 0176 63616D43 		.ascii	"camCompRiseInterrupted\000"
 3376      6F6D7052 
 3376      69736549 
 3376      6E746572 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 72


 3376      72757074 
 3377 018d 37040000 		.4byte	0x437
 3378 0191 63616D43 		.ascii	"camCompFallInterrupted\000"
 3378      6F6D7046 
 3378      616C6C49 
 3378      6E746572 
 3378      72757074 
 3379 01a8 49040000 		.4byte	0x449
 3380 01ac 63616D52 		.ascii	"camRowInterrupted\000"
 3380      6F77496E 
 3380      74657272 
 3380      75707465 
 3380      6400
 3381 01be 5B040000 		.4byte	0x45b
 3382 01c2 63616D46 		.ascii	"camFrameInterrupted\000"
 3382      72616D65 
 3382      496E7465 
 3382      72727570 
 3382      74656400 
 3383 01d6 6D040000 		.4byte	0x46d
 3384 01da 6E756D46 		.ascii	"numFrames\000"
 3384      72616D65 
 3384      7300
 3385 01e4 7F040000 		.4byte	0x47f
 3386 01e8 6E756D52 		.ascii	"numRows\000"
 3386      6F777300 
 3387 01f0 91040000 		.4byte	0x491
 3388 01f4 6E756D43 		.ascii	"numCompBegin\000"
 3388      6F6D7042 
 3388      6567696E 
 3388      00
 3389 0201 A3040000 		.4byte	0x4a3
 3390 0205 6E756D43 		.ascii	"numCompEnd\000"
 3390      6F6D7045 
 3390      6E6400
 3391 0210 B5040000 		.4byte	0x4b5
 3392 0214 726F7743 		.ascii	"rowCycles\000"
 3392      79636C65 
 3392      7300
 3393 021e C7040000 		.4byte	0x4c7
 3394 0222 6C696E65 		.ascii	"lineBeginCycles\000"
 3394      42656769 
 3394      6E437963 
 3394      6C657300 
 3395 0232 D9040000 		.4byte	0x4d9
 3396 0236 6C696E65 		.ascii	"lineEndCycles\000"
 3396      456E6443 
 3396      79636C65 
 3396      7300
 3397 0244 EB040000 		.4byte	0x4eb
 3398 0248 4D41494E 		.ascii	"MAIN_CLK_FREQ\000"
 3398      5F434C4B 
 3398      5F465245 
 3398      5100
 3399 0256 02050000 		.4byte	0x502
 3400 025a 4D494E5F 		.ascii	"MIN_TIME_SERVO\000"
 3400      54494D45 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 73


 3400      5F534552 
 3400      564F00
 3401 0269 14050000 		.4byte	0x514
 3402 026d 4D41585F 		.ascii	"MAX_TIME_SERVO\000"
 3402      54494D45 
 3402      5F534552 
 3402      564F00
 3403 027c 26050000 		.4byte	0x526
 3404 0280 43414D45 		.ascii	"CAMERA_TIMER_PERIOD\000"
 3404      52415F54 
 3404      494D4552 
 3404      5F504552 
 3404      494F4400 
 3405 0294 38050000 		.4byte	0x538
 3406 0298 45585045 		.ascii	"EXPECTED_ROW_CYCLES\000"
 3406      43544544 
 3406      5F524F57 
 3406      5F435943 
 3406      4C455300 
 3407 02ac 4A050000 		.4byte	0x54a
 3408 02b0 74657374 		.ascii	"test6\000"
 3408      3600
 3409 02b6 5C050000 		.4byte	0x55c
 3410 02ba 74657374 		.ascii	"test7\000"
 3410      3700
 3411 02c0 6E050000 		.4byte	0x56e
 3412 02c4 74657374 		.ascii	"test8\000"
 3412      3800
 3413 02ca 80050000 		.4byte	0x580
 3414 02ce 74657374 		.ascii	"test9\000"
 3414      3900
 3415 02d4 00000000 		.4byte	0x0
 3416              		.section	.debug_aranges,"",%progbits
 3417 0000 7C000000 		.4byte	0x7c
 3418 0004 0200     		.2byte	0x2
 3419 0006 00000000 		.4byte	.Ldebug_info0
 3420 000a 04       		.byte	0x4
 3421 000b 00       		.byte	0x0
 3422 000c 0000     		.2byte	0x0
 3423 000e 0000     		.2byte	0x0
 3424 0010 00000000 		.4byte	.LFB29
 3425 0014 2A000000 		.4byte	.LFE29-.LFB29
 3426 0018 00000000 		.4byte	.LFB30
 3427 001c 3A000000 		.4byte	.LFE30-.LFB30
 3428 0020 00000000 		.4byte	.LFB31
 3429 0024 80090000 		.4byte	.LFE31-.LFB31
 3430 0028 00000000 		.4byte	.LFB32
 3431 002c 2E000000 		.4byte	.LFE32-.LFB32
 3432 0030 00000000 		.4byte	.LFB33
 3433 0034 2E000000 		.4byte	.LFE33-.LFB33
 3434 0038 00000000 		.4byte	.LFB34
 3435 003c 2E000000 		.4byte	.LFE34-.LFB34
 3436 0040 00000000 		.4byte	.LFB35
 3437 0044 2E000000 		.4byte	.LFE35-.LFB35
 3438 0048 00000000 		.4byte	.LFB36
 3439 004c 2E000000 		.4byte	.LFE36-.LFB36
 3440 0050 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 74


 3441 0054 30000000 		.4byte	.LFE37-.LFB37
 3442 0058 00000000 		.4byte	.LFB38
 3443 005c 30000000 		.4byte	.LFE38-.LFB38
 3444 0060 00000000 		.4byte	.LFB39
 3445 0064 30000000 		.4byte	.LFE39-.LFB39
 3446 0068 00000000 		.4byte	.LFB40
 3447 006c 30000000 		.4byte	.LFE40-.LFB40
 3448 0070 00000000 		.4byte	.LFB41
 3449 0074 D4020000 		.4byte	.LFE41-.LFB41
 3450 0078 00000000 		.4byte	0x0
 3451 007c 00000000 		.4byte	0x0
 3452              		.section	.debug_ranges,"",%progbits
 3453              	.Ldebug_ranges0:
 3454 0000 00000000 		.4byte	.Ltext0
 3455 0004 00000000 		.4byte	.Letext0
 3456 0008 00000000 		.4byte	.LFB29
 3457 000c 2A000000 		.4byte	.LFE29
 3458 0010 00000000 		.4byte	.LFB30
 3459 0014 3A000000 		.4byte	.LFE30
 3460 0018 00000000 		.4byte	.LFB31
 3461 001c 80090000 		.4byte	.LFE31
 3462 0020 00000000 		.4byte	.LFB32
 3463 0024 2E000000 		.4byte	.LFE32
 3464 0028 00000000 		.4byte	.LFB33
 3465 002c 2E000000 		.4byte	.LFE33
 3466 0030 00000000 		.4byte	.LFB34
 3467 0034 2E000000 		.4byte	.LFE34
 3468 0038 00000000 		.4byte	.LFB35
 3469 003c 2E000000 		.4byte	.LFE35
 3470 0040 00000000 		.4byte	.LFB36
 3471 0044 2E000000 		.4byte	.LFE36
 3472 0048 00000000 		.4byte	.LFB37
 3473 004c 30000000 		.4byte	.LFE37
 3474 0050 00000000 		.4byte	.LFB38
 3475 0054 30000000 		.4byte	.LFE38
 3476 0058 00000000 		.4byte	.LFB39
 3477 005c 30000000 		.4byte	.LFE39
 3478 0060 00000000 		.4byte	.LFB40
 3479 0064 30000000 		.4byte	.LFE40
 3480 0068 00000000 		.4byte	.LFB41
 3481 006c D4020000 		.4byte	.LFE41
 3482 0070 00000000 		.4byte	0x0
 3483 0074 00000000 		.4byte	0x0
 3484              		.section	.debug_str,"MS",%progbits,1
 3485              	.LASF44:
 3486 0000 63616D46 		.ascii	"camFrameInterrupted\000"
 3486      72616D65 
 3486      496E7465 
 3486      72727570 
 3486      74656400 
 3487              	.LASF50:
 3488 0014 6C696E65 		.ascii	"lineBeginCycles\000"
 3488      42656769 
 3488      6E437963 
 3488      6C657300 
 3489              	.LASF11:
 3490 0024 666C6F6F 		.ascii	"floor\000"
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 75


 3490      7200
 3491              	.LASF52:
 3492 002a 4D41494E 		.ascii	"MAIN_CLK_FREQ\000"
 3492      5F434C4B 
 3492      5F465245 
 3492      5100
 3493              	.LASF51:
 3494 0038 6C696E65 		.ascii	"lineEndCycles\000"
 3494      456E6443 
 3494      79636C65 
 3494      7300
 3495              	.LASF46:
 3496 0046 6E756D52 		.ascii	"numRows\000"
 3496      6F777300 
 3497              	.LASF2:
 3498 004e 73686F72 		.ascii	"short int\000"
 3498      7420696E 
 3498      7400
 3499              	.LASF24:
 3500 0058 77686565 		.ascii	"wheel_inter\000"
 3500      6C5F696E 
 3500      74657200 
 3501              	.LASF23:
 3502 0064 72785F69 		.ascii	"rx_inter\000"
 3502      6E746572 
 3502      00
 3503              	.LASF19:
 3504 006d 73657276 		.ascii	"servoTime\000"
 3504      6F54696D 
 3504      6500
 3505              	.LASF26:
 3506 0077 7069645F 		.ascii	"pid_inter\000"
 3506      696E7465 
 3506      7200
 3507              	.LASF32:
 3508 0081 6D61696E 		.ascii	"main\000"
 3508      00
 3509              	.LASF48:
 3510 0086 6E756D43 		.ascii	"numCompEnd\000"
 3510      6F6D7045 
 3510      6E6400
 3511              	.LASF16:
 3512 0091 76616C75 		.ascii	"value\000"
 3512      6500
 3513              	.LASF37:
 3514 0097 7278496E 		.ascii	"rxInterrupted\000"
 3514      74657272 
 3514      75707465 
 3514      6400
 3515              	.LASF38:
 3516 00a5 77686565 		.ascii	"wheelTickInterrupted\000"
 3516      6C546963 
 3516      6B496E74 
 3516      65727275 
 3516      70746564 
 3517              	.LASF17:
 3518 00ba 73657276 		.ascii	"servoVal\000"
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 76


 3518      6F56616C 
 3518      00
 3519              	.LASF53:
 3520 00c3 4D494E5F 		.ascii	"MIN_TIME_SERVO\000"
 3520      54494D45 
 3520      5F534552 
 3520      564F00
 3521              	.LASF31:
 3522 00d2 70617273 		.ascii	"parseMessage\000"
 3522      654D6573 
 3522      73616765 
 3522      00
 3523              	.LASF20:
 3524 00df 73657276 		.ascii	"servoPeriod\000"
 3524      6F506572 
 3524      696F6400 
 3525              	.LASF57:
 3526 00eb 74657374 		.ascii	"test6\000"
 3526      3600
 3527              	.LASF58:
 3528 00f1 74657374 		.ascii	"test7\000"
 3528      3700
 3529              	.LASF59:
 3530 00f7 74657374 		.ascii	"test8\000"
 3530      3800
 3531              	.LASF60:
 3532 00fd 74657374 		.ascii	"test9\000"
 3532      3900
 3533              	.LASF42:
 3534 0103 63616D43 		.ascii	"camCompFallInterrupted\000"
 3534      6F6D7046 
 3534      616C6C49 
 3534      6E746572 
 3534      72757074 
 3535              	.LASF6:
 3536 011a 6C6F6E67 		.ascii	"long long int\000"
 3536      206C6F6E 
 3536      6720696E 
 3536      7400
 3537              	.LASF41:
 3538 0128 63616D43 		.ascii	"camCompRiseInterrupted\000"
 3538      6F6D7052 
 3538      69736549 
 3538      6E746572 
 3538      72757074 
 3539              	.LASF45:
 3540 013f 6E756D46 		.ascii	"numFrames\000"
 3540      72616D65 
 3540      7300
 3541              	.LASF35:
 3542 0149 73747262 		.ascii	"strbuffer\000"
 3542      75666665 
 3542      7200
 3543              	.LASF18:
 3544 0153 73657456 		.ascii	"setVal\000"
 3544      616C00
 3545              	.LASF28:
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 77


 3546 015a 63616D5F 		.ascii	"cam_comp_fall_inter\000"
 3546      636F6D70 
 3546      5F66616C 
 3546      6C5F696E 
 3546      74657200 
 3547              	.LASF56:
 3548 016e 45585045 		.ascii	"EXPECTED_ROW_CYCLES\000"
 3548      43544544 
 3548      5F524F57 
 3548      5F435943 
 3548      4C455300 
 3549              	.LASF1:
 3550 0182 756E7369 		.ascii	"unsigned char\000"
 3550      676E6564 
 3550      20636861 
 3550      7200
 3551              	.LASF25:
 3552 0190 74696D65 		.ascii	"timeout_inter\000"
 3552      6F75745F 
 3552      696E7465 
 3552      7200
 3553              	.LASF0:
 3554 019e 7369676E 		.ascii	"signed char\000"
 3554      65642063 
 3554      68617200 
 3555              	.LASF63:
 3556 01aa 433A5C55 		.ascii	"C:\\Users\\Public\\Documents\\Carlab\\BC and TJ\\Pr"
 3556      73657273 
 3556      5C507562 
 3556      6C69635C 
 3556      446F6375 
 3557 01d7 6F6A6563 		.ascii	"oject 4\\SpeedControl01\\SpeedControl01.cydsn\000"
 3557      7420345C 
 3557      53706565 
 3557      64436F6E 
 3557      74726F6C 
 3558              	.LASF7:
 3559 0203 6C6F6E67 		.ascii	"long long unsigned int\000"
 3559      206C6F6E 
 3559      6720756E 
 3559      7369676E 
 3559      65642069 
 3560              	.LASF8:
 3561 021a 756E7369 		.ascii	"unsigned int\000"
 3561      676E6564 
 3561      20696E74 
 3561      00
 3562              	.LASF5:
 3563 0227 6C6F6E67 		.ascii	"long unsigned int\000"
 3563      20756E73 
 3563      69676E65 
 3563      6420696E 
 3563      7400
 3564              	.LASF30:
 3565 0239 63616D5F 		.ascii	"cam_frame_inter\000"
 3565      6672616D 
 3565      655F696E 
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 78


 3565      74657200 
 3566              	.LASF22:
 3567 0249 62757474 		.ascii	"button_inter\000"
 3567      6F6E5F69 
 3567      6E746572 
 3567      00
 3568              	.LASF27:
 3569 0256 63616D5F 		.ascii	"cam_comp_rise_inter\000"
 3569      636F6D70 
 3569      5F726973 
 3569      655F696E 
 3569      74657200 
 3570              	.LASF36:
 3571 026a 62757474 		.ascii	"buttonInterrupted\000"
 3571      6F6E496E 
 3571      74657272 
 3571      75707465 
 3571      6400
 3572              	.LASF55:
 3573 027c 43414D45 		.ascii	"CAMERA_TIMER_PERIOD\000"
 3573      52415F54 
 3573      494D4552 
 3573      5F504552 
 3573      494F4400 
 3574              	.LASF3:
 3575 0290 73686F72 		.ascii	"short unsigned int\000"
 3575      7420756E 
 3575      7369676E 
 3575      65642069 
 3575      6E7400
 3576              	.LASF9:
 3577 02a3 63686172 		.ascii	"char\000"
 3577      00
 3578              	.LASF4:
 3579 02a8 6C6F6E67 		.ascii	"long int\000"
 3579      20696E74 
 3579      00
 3580              	.LASF21:
 3581 02b1 6D696450 		.ascii	"midPeriod\000"
 3581      6572696F 
 3581      6400
 3582              	.LASF40:
 3583 02bb 70696454 		.ascii	"pidTimerInterrupted\000"
 3583      696D6572 
 3583      496E7465 
 3583      72727570 
 3583      74656400 
 3584              	.LASF14:
 3585 02cf 6D736750 		.ascii	"msgPrefix\000"
 3585      72656669 
 3585      7800
 3586              	.LASF13:
 3587 02d9 6D657373 		.ascii	"message\000"
 3587      61676500 
 3588              	.LASF10:
 3589 02e1 646F7562 		.ascii	"double\000"
 3589      6C6500
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 79


 3590              	.LASF33:
 3591 02e8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3591      52784275 
 3591      66666572 
 3591      00
 3592              	.LASF43:
 3593 02f5 63616D52 		.ascii	"camRowInterrupted\000"
 3593      6F77496E 
 3593      74657272 
 3593      75707465 
 3593      6400
 3594              	.LASF62:
 3595 0307 2E5C6D61 		.ascii	".\\main.c\000"
 3595      696E2E63 
 3595      00
 3596              	.LASF47:
 3597 0310 6E756D43 		.ascii	"numCompBegin\000"
 3597      6F6D7042 
 3597      6567696E 
 3597      00
 3598              	.LASF12:
 3599 031d 6365696C 		.ascii	"ceil\000"
 3599      00
 3600              	.LASF61:
 3601 0322 474E5520 		.ascii	"GNU C 4.4.1\000"
 3601      4320342E 
 3601      342E3100 
 3602              	.LASF39:
 3603 032e 7469636B 		.ascii	"tickTimeoutInterrupted\000"
 3603      54696D65 
 3603      6F757449 
 3603      6E746572 
 3603      72757074 
 3604              	.LASF34:
 3605 0345 6275696C 		.ascii	"buildVersion\000"
 3605      64566572 
 3605      73696F6E 
 3605      00
 3606              	.LASF15:
 3607 0352 70726566 		.ascii	"prefixLen\000"
 3607      69784C65 
 3607      6E00
 3608              	.LASF54:
 3609 035c 4D41585F 		.ascii	"MAX_TIME_SERVO\000"
 3609      54494D45 
 3609      5F534552 
 3609      564F00
 3610              	.LASF49:
 3611 036b 726F7743 		.ascii	"rowCycles\000"
 3611      79636C65 
 3611      7300
 3612              	.LASF29:
 3613 0375 63616D5F 		.ascii	"cam_row_inter\000"
 3613      726F775F 
 3613      696E7465 
 3613      7200
 3614              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
ARM GAS  C:\Users\bccho\AppData\Local\Temp\ccGiHDDa.s 			page 80


