-- Project:   SpeedControl01
-- Generated: 03/02/2017 21:47:03
-- 

ENTITY SpeedControl01 IS
    PORT(
        Hall_sensor(0)_PAD : IN std_ulogic;
        Pin_button(0)_PAD : IN std_ulogic;
        Pin_motor(0)_PAD : OUT std_ulogic;
        Rx_1(0)_PAD : IN std_ulogic;
        Tx_1(0)_PAD : OUT std_ulogic;
        \LCD:LCDPort(0)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(1)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(2)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(3)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(4)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(5)_PAD\ : OUT std_ulogic;
        \LCD:LCDPort(6)_PAD\ : OUT std_ulogic);
    ATTRIBUTE voltage_Vio1 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vusb OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vddd OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vio3 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vdda OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vio0 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_Vio2 OF __DEFAULT__ : ENTITY IS 5e0;
END SpeedControl01;

ARCHITECTURE __DEFAULT__ OF SpeedControl01 IS
    SIGNAL ClockBlock_100k : bit;
    SIGNAL ClockBlock_1k : bit;
    SIGNAL ClockBlock_32k : bit;
    SIGNAL ClockBlock_BUS_CLK : bit;
    ATTRIBUTE global_signal OF ClockBlock_BUS_CLK : SIGNAL IS true;
    SIGNAL ClockBlock_BUS_CLK_local : bit;
    SIGNAL ClockBlock_ILO : bit;
    SIGNAL ClockBlock_IMO : bit;
    SIGNAL ClockBlock_MASTER_CLK : bit;
    SIGNAL ClockBlock_PLL_OUT : bit;
    SIGNAL ClockBlock_XTAL : bit;
    SIGNAL ClockBlock_XTAL_32KHZ : bit;
    SIGNAL Net_133 : bit;
    ATTRIBUTE placement_force OF Net_133 : SIGNAL IS "U(3,3,A)1";
    SIGNAL Net_18 : bit;
    ATTRIBUTE global_signal OF Net_18 : SIGNAL IS true;
    SIGNAL Net_18_local : bit;
    SIGNAL Net_266 : bit;
    SIGNAL Net_276 : bit;
    ATTRIBUTE placement_force OF Net_276 : SIGNAL IS "U(2,0,A)3";
    SIGNAL Net_277 : bit;
    SIGNAL Net_301 : bit;
    SIGNAL Net_347 : bit;
    SIGNAL Net_384 : bit;
    SIGNAL Net_397 : bit;
    SIGNAL Net_398 : bit;
    ATTRIBUTE global_signal OF Net_398 : SIGNAL IS true;
    SIGNAL Net_398_local : bit;
    SIGNAL Net_416 : bit;
    ATTRIBUTE placement_force OF Net_416 : SIGNAL IS "U(2,3,A)0";
    SIGNAL Net_47 : bit;
    ATTRIBUTE placement_force OF Net_47 : SIGNAL IS "U(3,0,A)2";
    SIGNAL Net_52 : bit;
    SIGNAL Net_72 : bit;
    SIGNAL \Counter_1:Net_48\ : bit;
    SIGNAL \Counter_1:Net_54\ : bit;
    SIGNAL \Counter_2:Net_54\ : bit;
    SIGNAL \PWM:PWMUDB:compare1\ : bit;
    SIGNAL \PWM:PWMUDB:control_0\ : bit;
    SIGNAL \PWM:PWMUDB:control_1\ : bit;
    SIGNAL \PWM:PWMUDB:control_2\ : bit;
    SIGNAL \PWM:PWMUDB:control_3\ : bit;
    SIGNAL \PWM:PWMUDB:control_4\ : bit;
    SIGNAL \PWM:PWMUDB:control_5\ : bit;
    SIGNAL \PWM:PWMUDB:control_6\ : bit;
    SIGNAL \PWM:PWMUDB:ctrl_enable\ : bit;
    SIGNAL \PWM:PWMUDB:final_kill_reg\ : bit;
    ATTRIBUTE placement_force OF \PWM:PWMUDB:final_kill_reg\ : SIGNAL IS "U(3,3,A)2";
    SIGNAL \PWM:PWMUDB:prevCompare1\ : bit;
    ATTRIBUTE placement_force OF \PWM:PWMUDB:prevCompare1\ : SIGNAL IS "U(3,3,B)0";
    SIGNAL \PWM:PWMUDB:runmode_enable\ : bit;
    ATTRIBUTE placement_force OF \PWM:PWMUDB:runmode_enable\ : SIGNAL IS "U(3,3,B)1";
    SIGNAL \PWM:PWMUDB:status_0\ : bit;
    ATTRIBUTE placement_force OF \PWM:PWMUDB:status_0\ : SIGNAL IS "U(3,3,A)3";
    SIGNAL \PWM:PWMUDB:status_3\ : bit;
    SIGNAL \PWM:PWMUDB:status_5\ : bit;
    ATTRIBUTE placement_force OF \PWM:PWMUDB:status_5\ : SIGNAL IS "U(3,3,B)3";
    SIGNAL \PWM:PWMUDB:tc_i\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_1\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_2\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_3\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_4\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_5\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_6\ : bit;
    SIGNAL \ShiftReg_1:bSR:control_7\ : bit;
    SIGNAL \ShiftReg_1:bSR:ctrl_clk_enable\ : bit;
    SIGNAL \ShiftReg_1:bSR:status_3\ : bit;
    SIGNAL \ShiftReg_1:bSR:status_4\ : bit;
    SIGNAL \ShiftReg_1:bSR:status_5\ : bit;
    SIGNAL \ShiftReg_1:bSR:status_6\ : bit;
    SIGNAL \Timer_1:Net_261\ : bit;
    SIGNAL \Timer_1:Net_51\ : bit;
    SIGNAL \Timer_1:Net_57\ : bit;
    SIGNAL \UART_1:BUART:counter_load_not\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:counter_load_not\ : SIGNAL IS "U(3,3,B)2";
    SIGNAL \UART_1:BUART:pollcount_0\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:pollcount_0\ : SIGNAL IS "U(2,0,B)0";
    SIGNAL \UART_1:BUART:pollcount_1\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:pollcount_1\ : SIGNAL IS "U(2,0,A)1";
    SIGNAL \UART_1:BUART:rx_address_detected\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_address_detected\ : SIGNAL IS "U(3,1,A)3";
    SIGNAL \UART_1:BUART:rx_bitclk_enable\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_bitclk_enable\ : SIGNAL IS "U(2,2,A)3";
    SIGNAL \UART_1:BUART:rx_count7_tc\ : bit;
    SIGNAL \UART_1:BUART:rx_count_0\ : bit;
    SIGNAL \UART_1:BUART:rx_count_1\ : bit;
    SIGNAL \UART_1:BUART:rx_count_2\ : bit;
    SIGNAL \UART_1:BUART:rx_count_3\ : bit;
    SIGNAL \UART_1:BUART:rx_count_4\ : bit;
    SIGNAL \UART_1:BUART:rx_count_5\ : bit;
    SIGNAL \UART_1:BUART:rx_count_6\ : bit;
    SIGNAL \UART_1:BUART:rx_counter_load\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_counter_load\ : SIGNAL IS "U(3,0,B)3";
    SIGNAL \UART_1:BUART:rx_fifofull\ : bit;
    SIGNAL \UART_1:BUART:rx_fifonotempty\ : bit;
    SIGNAL \UART_1:BUART:rx_last\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_last\ : SIGNAL IS "U(2,1,A)1";
    SIGNAL \UART_1:BUART:rx_load_fifo\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_load_fifo\ : SIGNAL IS "U(2,1,B)1";
    SIGNAL \UART_1:BUART:rx_postpoll\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_postpoll\ : SIGNAL IS "U(2,1,B)2";
    SIGNAL \UART_1:BUART:rx_state_0\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_state_0\ : SIGNAL IS "U(2,1,A)0";
    SIGNAL \UART_1:BUART:rx_state_2\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_state_2\ : SIGNAL IS "U(2,1,B)0";
    SIGNAL \UART_1:BUART:rx_state_3\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_state_3\ : SIGNAL IS "U(2,1,A)2";
    SIGNAL \UART_1:BUART:rx_state_stop1_reg\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_state_stop1_reg\ : SIGNAL IS "U(2,0,B)2";
    SIGNAL \UART_1:BUART:rx_status_3\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_status_3\ : SIGNAL IS "U(2,0,A)0";
    SIGNAL \UART_1:BUART:rx_status_4\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_status_4\ : SIGNAL IS "U(2,2,B)0";
    SIGNAL \UART_1:BUART:rx_status_5\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:rx_status_5\ : SIGNAL IS "U(2,0,B)1";
    SIGNAL \UART_1:BUART:tx_bitclk\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_bitclk\ : SIGNAL IS "U(3,2,B)3";
    SIGNAL \UART_1:BUART:tx_bitclk_dp\ : bit;
    SIGNAL \UART_1:BUART:tx_bitclk_enable_pre\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_bitclk_enable_pre\ : SIGNAL IS "U(2,2,A)0";
    SIGNAL \UART_1:BUART:tx_counter_dp\ : bit;
    SIGNAL \UART_1:BUART:tx_fifo_empty\ : bit;
    SIGNAL \UART_1:BUART:tx_fifo_notfull\ : bit;
    SIGNAL \UART_1:BUART:tx_shift_out\ : bit;
    SIGNAL \UART_1:BUART:tx_state_0\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_state_0\ : SIGNAL IS "U(2,2,B)3";
    SIGNAL \UART_1:BUART:tx_state_1\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_state_1\ : SIGNAL IS "U(2,2,A)1";
    SIGNAL \UART_1:BUART:tx_state_2\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_state_2\ : SIGNAL IS "U(3,2,A)0";
    SIGNAL \UART_1:BUART:tx_status_0\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_status_0\ : SIGNAL IS "U(2,3,A)2";
    SIGNAL \UART_1:BUART:tx_status_2\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:tx_status_2\ : SIGNAL IS "U(2,3,A)1";
    SIGNAL \UART_1:BUART:txn\ : bit;
    ATTRIBUTE placement_force OF \UART_1:BUART:txn\ : SIGNAL IS "U(3,2,B)2";
    SIGNAL \UART_1:Net_9\ : bit;
    ATTRIBUTE global_signal OF \UART_1:Net_9\ : SIGNAL IS true;
    SIGNAL \UART_1:Net_9_local\ : bit;
    SIGNAL __ONE__ : bit;
    ATTRIBUTE placement_force OF __ONE__ : SIGNAL IS "U(3,1,A)2";
    ATTRIBUTE POWER OF __ONE__ : SIGNAL IS true;
    SIGNAL __ZERO__ : bit;
    ATTRIBUTE GROUND OF __ZERO__ : SIGNAL IS true;
    SIGNAL tmpOE__Pin_button_net_0 : bit;
    ATTRIBUTE POWER OF tmpOE__Pin_button_net_0 : SIGNAL IS true;
    SIGNAL zero : bit;
    ATTRIBUTE GROUND OF zero : SIGNAL IS true;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.ce0__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.cl0__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.z0__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.ff0__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.ce1__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.cl1__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.z1__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.ff1__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.co_msb__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.sol_msb__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u0.cfbo__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u1.sor__sig\ : bit;
    SIGNAL \PWM:PWMUDB:sP16:pwmdp:u1.cmsbo__sig\ : bit;
    ATTRIBUTE Location OF ClockBlock : LABEL IS "F(Clock,0)";
    ATTRIBUTE lib_model OF Hall_sensor(0) : LABEL IS "iocell1";
    ATTRIBUTE Location OF Hall_sensor(0) : LABEL IS "P5[0]";
    ATTRIBUTE lib_model OF Net_133 : LABEL IS "macrocell1";
    ATTRIBUTE Location OF Net_133 : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF Net_276 : LABEL IS "macrocell2";
    ATTRIBUTE Location OF Net_276 : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF Net_416 : LABEL IS "macrocell3";
    ATTRIBUTE Location OF Net_416 : LABEL IS "U(2,3)";
    ATTRIBUTE lib_model OF Net_47 : LABEL IS "macrocell4";
    ATTRIBUTE Location OF Net_47 : LABEL IS "U(3,0)";
    ATTRIBUTE lib_model OF Pin_button(0) : LABEL IS "iocell2";
    ATTRIBUTE Location OF Pin_button(0) : LABEL IS "P6[1]";
    ATTRIBUTE lib_model OF Pin_motor(0) : LABEL IS "iocell3";
    ATTRIBUTE Location OF Pin_motor(0) : LABEL IS "P4[1]";
    ATTRIBUTE lib_model OF Rx_1(0) : LABEL IS "iocell4";
    ATTRIBUTE Location OF Rx_1(0) : LABEL IS "P3[0]";
    ATTRIBUTE lib_model OF Tx_1(0) : LABEL IS "iocell5";
    ATTRIBUTE Location OF Tx_1(0) : LABEL IS "P3[1]";
    ATTRIBUTE Location OF \Counter_1:CounterHW\ : LABEL IS "F(Timer,0)";
    ATTRIBUTE Location OF \Counter_2:CounterHW\ : LABEL IS "F(Timer,1)";
    ATTRIBUTE lib_model OF \LCD:LCDPort(0)\ : LABEL IS "iocell6";
    ATTRIBUTE Location OF \LCD:LCDPort(0)\ : LABEL IS "P2[0]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(1)\ : LABEL IS "iocell7";
    ATTRIBUTE Location OF \LCD:LCDPort(1)\ : LABEL IS "P2[1]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(2)\ : LABEL IS "iocell8";
    ATTRIBUTE Location OF \LCD:LCDPort(2)\ : LABEL IS "P2[2]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(3)\ : LABEL IS "iocell9";
    ATTRIBUTE Location OF \LCD:LCDPort(3)\ : LABEL IS "P2[3]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(4)\ : LABEL IS "iocell10";
    ATTRIBUTE Location OF \LCD:LCDPort(4)\ : LABEL IS "P2[4]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(5)\ : LABEL IS "iocell11";
    ATTRIBUTE Location OF \LCD:LCDPort(5)\ : LABEL IS "P2[5]";
    ATTRIBUTE lib_model OF \LCD:LCDPort(6)\ : LABEL IS "iocell12";
    ATTRIBUTE Location OF \LCD:LCDPort(6)\ : LABEL IS "P2[6]";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:final_kill_reg\ : LABEL IS "macrocell5";
    ATTRIBUTE Location OF \PWM:PWMUDB:final_kill_reg\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:prevCompare1\ : LABEL IS "macrocell6";
    ATTRIBUTE Location OF \PWM:PWMUDB:prevCompare1\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:runmode_enable\ : LABEL IS "macrocell7";
    ATTRIBUTE Location OF \PWM:PWMUDB:runmode_enable\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:sCTRLReg:SyncCtl:ctrlreg\ : LABEL IS "controlcell1";
    ATTRIBUTE Location OF \PWM:PWMUDB:sCTRLReg:SyncCtl:ctrlreg\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:sP16:pwmdp:u0\ : LABEL IS "datapathcell1";
    ATTRIBUTE Location OF \PWM:PWMUDB:sP16:pwmdp:u0\ : LABEL IS "U(2,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:sP16:pwmdp:u1\ : LABEL IS "datapathcell2";
    ATTRIBUTE Location OF \PWM:PWMUDB:sP16:pwmdp:u1\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:sSTSReg:rstSts:stsreg\ : LABEL IS "statusicell1";
    ATTRIBUTE Location OF \PWM:PWMUDB:sSTSReg:rstSts:stsreg\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:status_0\ : LABEL IS "macrocell8";
    ATTRIBUTE Location OF \PWM:PWMUDB:status_0\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \PWM:PWMUDB:status_5\ : LABEL IS "macrocell9";
    ATTRIBUTE Location OF \PWM:PWMUDB:status_5\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \ShiftReg_1:bSR:StsReg\ : LABEL IS "statusicell2";
    ATTRIBUTE Location OF \ShiftReg_1:bSR:StsReg\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \ShiftReg_1:bSR:SyncCtl:CtrlReg\ : LABEL IS "controlcell2";
    ATTRIBUTE Location OF \ShiftReg_1:bSR:SyncCtl:CtrlReg\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \ShiftReg_1:bSR:sC8:BShiftRegDp:u0\ : LABEL IS "datapathcell3";
    ATTRIBUTE Location OF \ShiftReg_1:bSR:sC8:BShiftRegDp:u0\ : LABEL IS "U(2,0)";
    ATTRIBUTE Location OF \Timer_1:TimerHW\ : LABEL IS "F(Timer,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:counter_load_not\ : LABEL IS "macrocell10";
    ATTRIBUTE Location OF \UART_1:BUART:counter_load_not\ : LABEL IS "U(3,3)";
    ATTRIBUTE lib_model OF \UART_1:BUART:pollcount_0\ : LABEL IS "macrocell11";
    ATTRIBUTE Location OF \UART_1:BUART:pollcount_0\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \UART_1:BUART:pollcount_1\ : LABEL IS "macrocell12";
    ATTRIBUTE Location OF \UART_1:BUART:pollcount_1\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_address_detected\ : LABEL IS "macrocell13";
    ATTRIBUTE Location OF \UART_1:BUART:rx_address_detected\ : LABEL IS "U(3,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_bitclk_enable\ : LABEL IS "macrocell14";
    ATTRIBUTE Location OF \UART_1:BUART:rx_bitclk_enable\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_counter_load\ : LABEL IS "macrocell15";
    ATTRIBUTE Location OF \UART_1:BUART:rx_counter_load\ : LABEL IS "U(3,0)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_last\ : LABEL IS "macrocell16";
    ATTRIBUTE Location OF \UART_1:BUART:rx_last\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_load_fifo\ : LABEL IS "macrocell17";
    ATTRIBUTE Location OF \UART_1:BUART:rx_load_fifo\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_postpoll\ : LABEL IS "macrocell18";
    ATTRIBUTE Location OF \UART_1:BUART:rx_postpoll\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_state_0\ : LABEL IS "macrocell19";
    ATTRIBUTE Location OF \UART_1:BUART:rx_state_0\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_state_2\ : LABEL IS "macrocell20";
    ATTRIBUTE Location OF \UART_1:BUART:rx_state_2\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_state_3\ : LABEL IS "macrocell21";
    ATTRIBUTE Location OF \UART_1:BUART:rx_state_3\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_state_stop1_reg\ : LABEL IS "macrocell22";
    ATTRIBUTE Location OF \UART_1:BUART:rx_state_stop1_reg\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_status_3\ : LABEL IS "macrocell23";
    ATTRIBUTE Location OF \UART_1:BUART:rx_status_3\ : LABEL IS "U(2,0)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_status_4\ : LABEL IS "macrocell24";
    ATTRIBUTE Location OF \UART_1:BUART:rx_status_4\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:rx_status_5\ : LABEL IS "macrocell25";
    ATTRIBUTE Location OF \UART_1:BUART:rx_status_5\ : LABEL IS "U(2,0)";
    ATTRIBUTE Location OF \UART_1:BUART:sRX:RxBitCounter\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:sRX:RxShifter:u0\ : LABEL IS "datapathcell4";
    ATTRIBUTE Location OF \UART_1:BUART:sRX:RxShifter:u0\ : LABEL IS "U(2,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:sRX:RxSts\ : LABEL IS "statusicell3";
    ATTRIBUTE Location OF \UART_1:BUART:sRX:RxSts\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:sTX:TxShifter:u0\ : LABEL IS "datapathcell5";
    ATTRIBUTE Location OF \UART_1:BUART:sTX:TxShifter:u0\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:sTX:TxSts\ : LABEL IS "statusicell4";
    ATTRIBUTE Location OF \UART_1:BUART:sTX:TxSts\ : LABEL IS "U(2,3)";
    ATTRIBUTE lib_model OF \UART_1:BUART:sTX:sCLOCK:TxBitClkGen\ : LABEL IS "datapathcell6";
    ATTRIBUTE Location OF \UART_1:BUART:sTX:sCLOCK:TxBitClkGen\ : LABEL IS "U(3,1)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_bitclk\ : LABEL IS "macrocell26";
    ATTRIBUTE Location OF \UART_1:BUART:tx_bitclk\ : LABEL IS "U(3,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_bitclk_enable_pre\ : LABEL IS "macrocell27";
    ATTRIBUTE Location OF \UART_1:BUART:tx_bitclk_enable_pre\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_state_0\ : LABEL IS "macrocell28";
    ATTRIBUTE Location OF \UART_1:BUART:tx_state_0\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_state_1\ : LABEL IS "macrocell29";
    ATTRIBUTE Location OF \UART_1:BUART:tx_state_1\ : LABEL IS "U(2,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_state_2\ : LABEL IS "macrocell30";
    ATTRIBUTE Location OF \UART_1:BUART:tx_state_2\ : LABEL IS "U(3,2)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_status_0\ : LABEL IS "macrocell31";
    ATTRIBUTE Location OF \UART_1:BUART:tx_status_0\ : LABEL IS "U(2,3)";
    ATTRIBUTE lib_model OF \UART_1:BUART:tx_status_2\ : LABEL IS "macrocell32";
    ATTRIBUTE Location OF \UART_1:BUART:tx_status_2\ : LABEL IS "U(2,3)";
    ATTRIBUTE lib_model OF \UART_1:BUART:txn\ : LABEL IS "macrocell33";
    ATTRIBUTE Location OF \UART_1:BUART:txn\ : LABEL IS "U(3,2)";
    ATTRIBUTE lib_model OF __ONE__ : LABEL IS "macrocell34";
    ATTRIBUTE Location OF __ONE__ : LABEL IS "U(3,1)";
    ATTRIBUTE Location OF inter_button : LABEL IS "[IntrHod=(0)][IntrId=(0)]";
    ATTRIBUTE Location OF rx_rcvd : LABEL IS "[IntrHod=(0)][IntrId=(1)]";
    ATTRIBUTE Location OF throttle_update : LABEL IS "[IntrHod=(0)][IntrId=(17)]";
    ATTRIBUTE Location OF tick_timeout : LABEL IS "[IntrHod=(0)][IntrId=(2)]";
    ATTRIBUTE Location OF wheel_tick : LABEL IS "[IntrHod=(0)][IntrId=(3)]";
    COMPONENT abufcell
    END COMPONENT;
    COMPONENT boostcell
        PORT (
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT cachecell
        PORT (
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT cancell
        PORT (
            clock : IN std_ulogic;
            can_rx : IN std_ulogic;
            can_tx : OUT std_ulogic;
            can_tx_en : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT capsensecell
        PORT (
            lft : IN std_ulogic;
            rt : IN std_ulogic);
    END COMPONENT;
    COMPONENT clockblockcell
        PORT (
            dclk_0 : OUT std_ulogic;
            dclk_1 : OUT std_ulogic;
            dclk_2 : OUT std_ulogic;
            dclk_3 : OUT std_ulogic;
            dclk_4 : OUT std_ulogic;
            dclk_5 : OUT std_ulogic;
            dclk_6 : OUT std_ulogic;
            dclk_7 : OUT std_ulogic;
            dclk_glb_0 : OUT std_ulogic;
            dclk_glb_1 : OUT std_ulogic;
            dclk_glb_2 : OUT std_ulogic;
            dclk_glb_3 : OUT std_ulogic;
            dclk_glb_4 : OUT std_ulogic;
            dclk_glb_5 : OUT std_ulogic;
            dclk_glb_6 : OUT std_ulogic;
            dclk_glb_7 : OUT std_ulogic;
            aclk_0 : OUT std_ulogic;
            aclk_1 : OUT std_ulogic;
            aclk_2 : OUT std_ulogic;
            aclk_3 : OUT std_ulogic;
            aclk_glb_0 : OUT std_ulogic;
            aclk_glb_1 : OUT std_ulogic;
            aclk_glb_2 : OUT std_ulogic;
            aclk_glb_3 : OUT std_ulogic;
            clk_a_dig_0 : OUT std_ulogic;
            clk_a_dig_1 : OUT std_ulogic;
            clk_a_dig_2 : OUT std_ulogic;
            clk_a_dig_3 : OUT std_ulogic;
            clk_a_dig_glb_0 : OUT std_ulogic;
            clk_a_dig_glb_1 : OUT std_ulogic;
            clk_a_dig_glb_2 : OUT std_ulogic;
            clk_a_dig_glb_3 : OUT std_ulogic;
            clk_bus : OUT std_ulogic;
            clk_bus_glb : OUT std_ulogic;
            clk_sync : OUT std_ulogic;
            clk_32k_xtal : OUT std_ulogic;
            clk_100k : OUT std_ulogic;
            clk_32k : OUT std_ulogic;
            clk_1k : OUT std_ulogic;
            clk_usb : OUT std_ulogic;
            xmhz_xerr : OUT std_ulogic;
            pll_lock_out : OUT std_ulogic;
            dsi_dig_div_0 : IN std_ulogic;
            dsi_dig_div_1 : IN std_ulogic;
            dsi_dig_div_2 : IN std_ulogic;
            dsi_dig_div_3 : IN std_ulogic;
            dsi_dig_div_4 : IN std_ulogic;
            dsi_dig_div_5 : IN std_ulogic;
            dsi_dig_div_6 : IN std_ulogic;
            dsi_dig_div_7 : IN std_ulogic;
            dsi_ana_div_0 : IN std_ulogic;
            dsi_ana_div_1 : IN std_ulogic;
            dsi_ana_div_2 : IN std_ulogic;
            dsi_ana_div_3 : IN std_ulogic;
            dsi_glb_div : IN std_ulogic;
            dsi_clkin_div : IN std_ulogic;
            imo : OUT std_ulogic;
            ilo : OUT std_ulogic;
            xtal : OUT std_ulogic;
            pllout : OUT std_ulogic);
    END COMPONENT;
    COMPONENT comparatorcell
        PORT (
            out : OUT std_ulogic;
            clk_udb : IN std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT controlcell
        PORT (
            control_0 : OUT std_ulogic;
            control_1 : OUT std_ulogic;
            control_2 : OUT std_ulogic;
            control_3 : OUT std_ulogic;
            control_4 : OUT std_ulogic;
            control_5 : OUT std_ulogic;
            control_6 : OUT std_ulogic;
            control_7 : OUT std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    COMPONENT count7cell
        PORT (
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            load : IN std_ulogic;
            enable : IN std_ulogic;
            clk_en : IN std_ulogic;
            count_0 : OUT std_ulogic;
            count_1 : OUT std_ulogic;
            count_2 : OUT std_ulogic;
            count_3 : OUT std_ulogic;
            count_4 : OUT std_ulogic;
            count_5 : OUT std_ulogic;
            count_6 : OUT std_ulogic;
            tc : OUT std_ulogic;
            clock_n : IN std_ulogic;
            extclk : IN std_ulogic;
            extclk_n : IN std_ulogic);
    END COMPONENT;
    COMPONENT csabufcell
        PORT (
            swon : IN std_ulogic);
    END COMPONENT;
    COMPONENT datapathcell
        PORT (
            clock : IN std_ulogic;
            clk_en : IN std_ulogic;
            reset : IN std_ulogic;
            cs_addr_0 : IN std_ulogic;
            cs_addr_1 : IN std_ulogic;
            cs_addr_2 : IN std_ulogic;
            route_si : IN std_ulogic;
            route_ci : IN std_ulogic;
            f0_load : IN std_ulogic;
            f1_load : IN std_ulogic;
            d0_load : IN std_ulogic;
            d1_load : IN std_ulogic;
            ce0_reg : OUT std_ulogic;
            cl0_reg : OUT std_ulogic;
            z0_reg : OUT std_ulogic;
            f0_reg : OUT std_ulogic;
            ce1_reg : OUT std_ulogic;
            cl1_reg : OUT std_ulogic;
            z1_reg : OUT std_ulogic;
            f1_reg : OUT std_ulogic;
            ov_msb_reg : OUT std_ulogic;
            co_msb_reg : OUT std_ulogic;
            cmsb_reg : OUT std_ulogic;
            so_reg : OUT std_ulogic;
            f0_bus_stat_reg : OUT std_ulogic;
            f0_blk_stat_reg : OUT std_ulogic;
            f1_bus_stat_reg : OUT std_ulogic;
            f1_blk_stat_reg : OUT std_ulogic;
            ce0_comb : OUT std_ulogic;
            cl0_comb : OUT std_ulogic;
            z0_comb : OUT std_ulogic;
            f0_comb : OUT std_ulogic;
            ce1_comb : OUT std_ulogic;
            cl1_comb : OUT std_ulogic;
            z1_comb : OUT std_ulogic;
            f1_comb : OUT std_ulogic;
            ov_msb_comb : OUT std_ulogic;
            co_msb_comb : OUT std_ulogic;
            cmsb_comb : OUT std_ulogic;
            so_comb : OUT std_ulogic;
            f0_bus_stat_comb : OUT std_ulogic;
            f0_blk_stat_comb : OUT std_ulogic;
            f1_bus_stat_comb : OUT std_ulogic;
            f1_blk_stat_comb : OUT std_ulogic;
            ce0 : OUT std_ulogic;
            ce0i : IN std_ulogic;
            p_in_0 : IN std_ulogic;
            p_in_1 : IN std_ulogic;
            p_in_2 : IN std_ulogic;
            p_in_3 : IN std_ulogic;
            p_in_4 : IN std_ulogic;
            p_in_5 : IN std_ulogic;
            p_in_6 : IN std_ulogic;
            p_in_7 : IN std_ulogic;
            p_out_0 : OUT std_ulogic;
            p_out_1 : OUT std_ulogic;
            p_out_2 : OUT std_ulogic;
            p_out_3 : OUT std_ulogic;
            p_out_4 : OUT std_ulogic;
            p_out_5 : OUT std_ulogic;
            p_out_6 : OUT std_ulogic;
            p_out_7 : OUT std_ulogic;
            cl0i : IN std_ulogic;
            cl0 : OUT std_ulogic;
            z0i : IN std_ulogic;
            z0 : OUT std_ulogic;
            ff0i : IN std_ulogic;
            ff0 : OUT std_ulogic;
            ce1i : IN std_ulogic;
            ce1 : OUT std_ulogic;
            cl1i : IN std_ulogic;
            cl1 : OUT std_ulogic;
            z1i : IN std_ulogic;
            z1 : OUT std_ulogic;
            ff1i : IN std_ulogic;
            ff1 : OUT std_ulogic;
            cap0i : IN std_ulogic;
            cap0 : OUT std_ulogic;
            cap1i : IN std_ulogic;
            cap1 : OUT std_ulogic;
            ci : IN std_ulogic;
            co_msb : OUT std_ulogic;
            sir : IN std_ulogic;
            sol_msb : OUT std_ulogic;
            cfbi : IN std_ulogic;
            cfbo : OUT std_ulogic;
            sil : IN std_ulogic;
            sor : OUT std_ulogic;
            cmsbi : IN std_ulogic;
            cmsbo : OUT std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    COMPONENT decimatorcell
        PORT (
            aclock : IN std_ulogic;
            mod_dat_0 : IN std_ulogic;
            mod_dat_1 : IN std_ulogic;
            mod_dat_2 : IN std_ulogic;
            mod_dat_3 : IN std_ulogic;
            ext_start : IN std_ulogic;
            modrst : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT dfbcell
        PORT (
            clock : IN std_ulogic;
            in_1 : IN std_ulogic;
            in_2 : IN std_ulogic;
            out_1 : OUT std_ulogic;
            out_2 : OUT std_ulogic;
            dmareq_1 : OUT std_ulogic;
            dmareq_2 : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT drqcell
        PORT (
            dmareq : IN std_ulogic;
            termin : IN std_ulogic;
            termout : OUT std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT dsmodcell
        PORT (
            aclock : IN std_ulogic;
            modbitin_udb : IN std_ulogic;
            reset_udb : IN std_ulogic;
            reset_dec : IN std_ulogic;
            dec_clock : OUT std_ulogic;
            mod_dat_0 : OUT std_ulogic;
            mod_dat_1 : OUT std_ulogic;
            mod_dat_2 : OUT std_ulogic;
            mod_dat_3 : OUT std_ulogic;
            dout_udb_0 : OUT std_ulogic;
            dout_udb_1 : OUT std_ulogic;
            dout_udb_2 : OUT std_ulogic;
            dout_udb_3 : OUT std_ulogic;
            dout_udb_4 : OUT std_ulogic;
            dout_udb_5 : OUT std_ulogic;
            dout_udb_6 : OUT std_ulogic;
            dout_udb_7 : OUT std_ulogic;
            extclk_cp_udb : IN std_ulogic;
            clk_udb : IN std_ulogic);
    END COMPONENT;
    COMPONENT emifcell
        PORT (
            EM_clock : OUT std_ulogic;
            EM_CEn : OUT std_ulogic;
            EM_OEn : OUT std_ulogic;
            EM_ADSCn : OUT std_ulogic;
            EM_sleep : OUT std_ulogic;
            EM_WRn : OUT std_ulogic;
            dataport_OE : OUT std_ulogic;
            dataport_OEn : OUT std_ulogic;
            wr : OUT std_ulogic;
            rd : OUT std_ulogic;
            udb_stall : IN std_ulogic;
            udb_ready : IN std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    COMPONENT i2ccell
        PORT (
            clock : IN std_ulogic;
            scl_in : IN std_ulogic;
            sda_in : IN std_ulogic;
            scl_out : OUT std_ulogic;
            sda_out : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT interrupt
        PORT (
            interrupt : IN std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT iocell
        PORT (
            pin_input : IN std_ulogic;
            oe : IN std_ulogic;
            clock : IN std_ulogic;
            fb : OUT std_ulogic;
            pad_in : IN std_ulogic;
            pad_out : OUT std_ulogic);
    END COMPONENT;
    COMPONENT lcdctrlcell
        PORT (
            drive_en : IN std_ulogic;
            frame : IN std_ulogic;
            data_clk : IN std_ulogic;
            en_hi : IN std_ulogic;
            dac_dis : IN std_ulogic;
            chop_clk : IN std_ulogic;
            int_clr : IN std_ulogic;
            lp_ack_udb : IN std_ulogic;
            mode_1 : IN std_ulogic;
            mode_2 : IN std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT logicalport
        PORT (
            interrupt : OUT std_ulogic;
            precharge : IN std_ulogic);
    END COMPONENT;
    COMPONENT lpfcell
    END COMPONENT;
    COMPONENT lvdcell
        PORT (
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT m0s8clockblockcell
        PORT (
            imo : OUT std_ulogic;
            ext : OUT std_ulogic;
            eco : OUT std_ulogic;
            ilo : OUT std_ulogic;
            wco : OUT std_ulogic;
            dbl : OUT std_ulogic;
            pll : OUT std_ulogic;
            dpll : OUT std_ulogic;
            dsi_out_0 : OUT std_ulogic;
            dsi_out_1 : OUT std_ulogic;
            dsi_out_2 : OUT std_ulogic;
            dsi_out_3 : OUT std_ulogic;
            lfclk : OUT std_ulogic;
            hfclk : OUT std_ulogic;
            sysclk : OUT std_ulogic;
            halfsysclk : OUT std_ulogic;
            udb_div_0 : OUT std_ulogic;
            udb_div_1 : OUT std_ulogic;
            udb_div_2 : OUT std_ulogic;
            udb_div_3 : OUT std_ulogic;
            udb_div_4 : OUT std_ulogic;
            udb_div_5 : OUT std_ulogic;
            udb_div_6 : OUT std_ulogic;
            udb_div_7 : OUT std_ulogic;
            uab_div_0 : OUT std_ulogic;
            uab_div_1 : OUT std_ulogic;
            uab_div_2 : OUT std_ulogic;
            uab_div_3 : OUT std_ulogic;
            ff_div_0 : OUT std_ulogic;
            ff_div_1 : OUT std_ulogic;
            ff_div_2 : OUT std_ulogic;
            ff_div_3 : OUT std_ulogic;
            ff_div_4 : OUT std_ulogic;
            ff_div_5 : OUT std_ulogic;
            ff_div_6 : OUT std_ulogic;
            ff_div_7 : OUT std_ulogic;
            ff_div_8 : OUT std_ulogic;
            ff_div_9 : OUT std_ulogic;
            ff_div_10 : OUT std_ulogic;
            ff_div_11 : OUT std_ulogic;
            ff_div_12 : OUT std_ulogic;
            ff_div_13 : OUT std_ulogic;
            ff_div_14 : OUT std_ulogic;
            ff_div_15 : OUT std_ulogic;
            dsi_in_0 : IN std_ulogic;
            dsi_in_1 : IN std_ulogic;
            dsi_in_2 : IN std_ulogic;
            dsi_in_3 : IN std_ulogic);
    END COMPONENT;
    COMPONENT m0s8lcdcell
        PORT (
            common_0 : OUT std_ulogic;
            common_1 : OUT std_ulogic;
            common_2 : OUT std_ulogic;
            common_3 : OUT std_ulogic;
            common_4 : OUT std_ulogic;
            common_5 : OUT std_ulogic;
            common_6 : OUT std_ulogic;
            common_7 : OUT std_ulogic;
            common_8 : OUT std_ulogic;
            common_9 : OUT std_ulogic;
            common_10 : OUT std_ulogic;
            common_11 : OUT std_ulogic;
            common_12 : OUT std_ulogic;
            common_13 : OUT std_ulogic;
            common_14 : OUT std_ulogic;
            common_15 : OUT std_ulogic;
            segment_0 : OUT std_ulogic;
            segment_1 : OUT std_ulogic;
            segment_2 : OUT std_ulogic;
            segment_3 : OUT std_ulogic;
            segment_4 : OUT std_ulogic;
            segment_5 : OUT std_ulogic;
            segment_6 : OUT std_ulogic;
            segment_7 : OUT std_ulogic;
            segment_8 : OUT std_ulogic;
            segment_9 : OUT std_ulogic;
            segment_10 : OUT std_ulogic;
            segment_11 : OUT std_ulogic;
            segment_12 : OUT std_ulogic;
            segment_13 : OUT std_ulogic;
            segment_14 : OUT std_ulogic;
            segment_15 : OUT std_ulogic;
            segment_16 : OUT std_ulogic;
            segment_17 : OUT std_ulogic;
            segment_18 : OUT std_ulogic;
            segment_19 : OUT std_ulogic;
            segment_20 : OUT std_ulogic;
            segment_21 : OUT std_ulogic;
            segment_22 : OUT std_ulogic;
            segment_23 : OUT std_ulogic;
            segment_24 : OUT std_ulogic;
            segment_25 : OUT std_ulogic;
            segment_26 : OUT std_ulogic;
            segment_27 : OUT std_ulogic;
            segment_28 : OUT std_ulogic;
            segment_29 : OUT std_ulogic;
            segment_30 : OUT std_ulogic;
            segment_31 : OUT std_ulogic;
            segment_32 : OUT std_ulogic;
            segment_33 : OUT std_ulogic;
            segment_34 : OUT std_ulogic;
            segment_35 : OUT std_ulogic;
            segment_36 : OUT std_ulogic;
            segment_37 : OUT std_ulogic;
            segment_38 : OUT std_ulogic;
            segment_39 : OUT std_ulogic;
            segment_40 : OUT std_ulogic;
            segment_41 : OUT std_ulogic;
            segment_42 : OUT std_ulogic;
            segment_43 : OUT std_ulogic;
            segment_44 : OUT std_ulogic;
            segment_45 : OUT std_ulogic;
            segment_46 : OUT std_ulogic;
            segment_47 : OUT std_ulogic;
            segment_48 : OUT std_ulogic;
            segment_49 : OUT std_ulogic;
            segment_50 : OUT std_ulogic;
            segment_51 : OUT std_ulogic;
            segment_52 : OUT std_ulogic;
            segment_53 : OUT std_ulogic;
            segment_54 : OUT std_ulogic;
            segment_55 : OUT std_ulogic;
            segment_56 : OUT std_ulogic;
            segment_57 : OUT std_ulogic;
            segment_58 : OUT std_ulogic;
            segment_59 : OUT std_ulogic;
            segment_60 : OUT std_ulogic;
            segment_61 : OUT std_ulogic;
            segment_62 : OUT std_ulogic;
            segment_63 : OUT std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT m0s8scbcell
        PORT (
            clock : IN std_ulogic;
            interrupt : OUT std_ulogic;
            rx : IN std_ulogic;
            tx : OUT std_ulogic;
            mosi_m : OUT std_ulogic;
            miso_m : IN std_ulogic;
            select_m_0 : OUT std_ulogic;
            select_m_1 : OUT std_ulogic;
            select_m_2 : OUT std_ulogic;
            select_m_3 : OUT std_ulogic;
            sclk_m : OUT std_ulogic;
            mosi_s : IN std_ulogic;
            miso_s : OUT std_ulogic;
            select_s : IN std_ulogic;
            sclk_s : IN std_ulogic;
            scl : INOUT std_ulogic;
            sda : INOUT std_ulogic);
    END COMPONENT;
    COMPONENT m0s8tcpwmcell
        PORT (
            clock : IN std_ulogic;
            capture : IN std_ulogic;
            count : IN std_ulogic;
            reload : IN std_ulogic;
            stop : IN std_ulogic;
            start : IN std_ulogic;
            tr_underflow : OUT std_ulogic;
            tr_overflow : OUT std_ulogic;
            tr_compare_match : OUT std_ulogic;
            line_out : OUT std_ulogic;
            line_out_compl : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT m0s8tsscell
        PORT (
            clk_seq : IN std_ulogic;
            clk_adc : IN std_ulogic;
            ext_reject : IN std_ulogic;
            ext_sync : IN std_ulogic;
            tx_sync : IN std_ulogic;
            reject_in : IN std_ulogic;
            start_in : IN std_ulogic;
            lx_det_hi : OUT std_ulogic;
            lx_det_lo : OUT std_ulogic;
            rej_window : OUT std_ulogic;
            tx_hilo : OUT std_ulogic;
            phase_end : OUT std_ulogic;
            phase_num_0 : OUT std_ulogic;
            phase_num_1 : OUT std_ulogic;
            phase_num_2 : OUT std_ulogic;
            phase_num_3 : OUT std_ulogic;
            ipq_reject : OUT std_ulogic;
            ipq_start : OUT std_ulogic;
            epq_reject : OUT std_ulogic;
            epq_start : OUT std_ulogic;
            mcs_reject : OUT std_ulogic;
            mcs_start : OUT std_ulogic;
            do_switch : OUT std_ulogic;
            adc_start : OUT std_ulogic;
            adc_done : OUT std_ulogic);
    END COMPONENT;
    COMPONENT macrocell
        PORT (
            main_0 : IN std_ulogic;
            main_1 : IN std_ulogic;
            main_2 : IN std_ulogic;
            main_3 : IN std_ulogic;
            main_4 : IN std_ulogic;
            main_5 : IN std_ulogic;
            main_6 : IN std_ulogic;
            main_7 : IN std_ulogic;
            main_8 : IN std_ulogic;
            main_9 : IN std_ulogic;
            main_10 : IN std_ulogic;
            main_11 : IN std_ulogic;
            ar_0 : IN std_ulogic;
            ap_0 : IN std_ulogic;
            clock_0 : IN std_ulogic;
            clk_en : IN std_ulogic;
            cin : IN std_ulogic;
            cpt0_0 : IN std_ulogic;
            cpt0_1 : IN std_ulogic;
            cpt0_2 : IN std_ulogic;
            cpt0_3 : IN std_ulogic;
            cpt0_4 : IN std_ulogic;
            cpt0_5 : IN std_ulogic;
            cpt0_6 : IN std_ulogic;
            cpt0_7 : IN std_ulogic;
            cpt0_8 : IN std_ulogic;
            cpt0_9 : IN std_ulogic;
            cpt0_10 : IN std_ulogic;
            cpt0_11 : IN std_ulogic;
            cpt1_0 : IN std_ulogic;
            cpt1_1 : IN std_ulogic;
            cpt1_2 : IN std_ulogic;
            cpt1_3 : IN std_ulogic;
            cpt1_4 : IN std_ulogic;
            cpt1_5 : IN std_ulogic;
            cpt1_6 : IN std_ulogic;
            cpt1_7 : IN std_ulogic;
            cpt1_8 : IN std_ulogic;
            cpt1_9 : IN std_ulogic;
            cpt1_10 : IN std_ulogic;
            cpt1_11 : IN std_ulogic;
            cout : OUT std_ulogic;
            q : OUT std_ulogic;
            q_fixed : OUT std_ulogic);
    END COMPONENT;
    COMPONENT p4abufcell
        PORT (
            ctb_dsi_comp : OUT std_ulogic;
            dsi_out : IN std_ulogic);
    END COMPONENT;
    COMPONENT p4csdcell
        PORT (
            sense_out : OUT std_ulogic;
            sample_out : OUT std_ulogic;
            sense_in : IN std_ulogic;
            sample_in : IN std_ulogic);
    END COMPONENT;
    COMPONENT p4csidaccell
        PORT (
            en : IN std_ulogic);
    END COMPONENT;
    COMPONENT p4halfuabcell
        PORT (
            clock : IN std_ulogic;
            comp : OUT std_ulogic;
            ctrl : IN std_ulogic);
    END COMPONENT;
    COMPONENT p4lpcompcell
        PORT (
            cmpout : OUT std_ulogic;
            irq : OUT std_ulogic);
    END COMPONENT;
    COMPONENT p4rsbcell
    END COMPONENT;
    COMPONENT p4sarcell
        PORT (
            clock : IN std_ulogic;
            pump_clock : IN std_ulogic;
            sample_done : OUT std_ulogic;
            chan_id_valid : OUT std_ulogic;
            chan_id_0 : OUT std_ulogic;
            chan_id_1 : OUT std_ulogic;
            chan_id_2 : OUT std_ulogic;
            chan_id_3 : OUT std_ulogic;
            data_valid : OUT std_ulogic;
            data_0 : OUT std_ulogic;
            data_1 : OUT std_ulogic;
            data_2 : OUT std_ulogic;
            data_3 : OUT std_ulogic;
            data_4 : OUT std_ulogic;
            data_5 : OUT std_ulogic;
            data_6 : OUT std_ulogic;
            data_7 : OUT std_ulogic;
            data_8 : OUT std_ulogic;
            data_9 : OUT std_ulogic;
            data_10 : OUT std_ulogic;
            data_11 : OUT std_ulogic;
            eos_intr : OUT std_ulogic;
            sw_negvref : IN std_ulogic;
            cfg_st_sel_0 : IN std_ulogic;
            cfg_st_sel_1 : IN std_ulogic;
            cfg_average : IN std_ulogic;
            cfg_resolution : IN std_ulogic;
            cfg_differential : IN std_ulogic;
            trigger : IN std_ulogic;
            data_hilo_sel : IN std_ulogic);
    END COMPONENT;
    COMPONENT p4tempcell
    END COMPONENT;
    COMPONENT p4vrefcell
    END COMPONENT;
    COMPONENT pmcell
        PORT (
            ctw_int : OUT std_ulogic;
            ftw_int : OUT std_ulogic;
            limact_int : OUT std_ulogic;
            onepps_int : OUT std_ulogic;
            pm_int : OUT std_ulogic);
    END COMPONENT;
    COMPONENT sarcell
        PORT (
            clock : IN std_ulogic;
            pump_clock : IN std_ulogic;
            clk_udb : IN std_ulogic;
            sof_udb : IN std_ulogic;
            vp_ctl_udb_0 : IN std_ulogic;
            vp_ctl_udb_1 : IN std_ulogic;
            vp_ctl_udb_2 : IN std_ulogic;
            vp_ctl_udb_3 : IN std_ulogic;
            vn_ctl_udb_0 : IN std_ulogic;
            vn_ctl_udb_1 : IN std_ulogic;
            vn_ctl_udb_2 : IN std_ulogic;
            vn_ctl_udb_3 : IN std_ulogic;
            data_out_udb_0 : OUT std_ulogic;
            data_out_udb_1 : OUT std_ulogic;
            data_out_udb_2 : OUT std_ulogic;
            data_out_udb_3 : OUT std_ulogic;
            data_out_udb_4 : OUT std_ulogic;
            data_out_udb_5 : OUT std_ulogic;
            data_out_udb_6 : OUT std_ulogic;
            data_out_udb_7 : OUT std_ulogic;
            data_out_udb_8 : OUT std_ulogic;
            data_out_udb_9 : OUT std_ulogic;
            data_out_udb_10 : OUT std_ulogic;
            data_out_udb_11 : OUT std_ulogic;
            eof_udb : OUT std_ulogic;
            irq : OUT std_ulogic;
            next : OUT std_ulogic);
    END COMPONENT;
    COMPONENT sccell
        PORT (
            aclk : IN std_ulogic;
            bst_clk : IN std_ulogic;
            clk_udb : IN std_ulogic;
            modout : OUT std_ulogic;
            dyn_cntl_udb : IN std_ulogic);
    END COMPONENT;
    COMPONENT spccell
        PORT (
            data_ready : OUT std_ulogic;
            eeprom_fault_int : OUT std_ulogic;
            idle : OUT std_ulogic);
    END COMPONENT;
    COMPONENT statuscell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            status_7 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    COMPONENT statusicell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            interrupt : OUT std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    COMPONENT synccell
        PORT (
            in : IN std_ulogic;
            clock : IN std_ulogic;
            out : OUT std_ulogic;
            clk_en : IN std_ulogic;
            clock_n : IN std_ulogic;
            extclk : IN std_ulogic;
            extclk_n : IN std_ulogic);
    END COMPONENT;
    COMPONENT tfaultcell
        PORT (
            tfault_dsi : OUT std_ulogic);
    END COMPONENT;
    COMPONENT timercell
        PORT (
            clock : IN std_ulogic;
            kill : IN std_ulogic;
            enable : IN std_ulogic;
            capture : IN std_ulogic;
            timer_reset : IN std_ulogic;
            tc : OUT std_ulogic;
            cmp : OUT std_ulogic;
            irq : OUT std_ulogic);
    END COMPONENT;
    COMPONENT udbclockencell
        PORT (
            clock_in : IN std_ulogic;
            enable : IN std_ulogic;
            clock_out : OUT std_ulogic);
    END COMPONENT;
    COMPONENT usbcell
        PORT (
            sof_int : OUT std_ulogic;
            arb_int : OUT std_ulogic;
            usb_int : OUT std_ulogic;
            ord_int : OUT std_ulogic;
            ept_int_0 : OUT std_ulogic;
            ept_int_1 : OUT std_ulogic;
            ept_int_2 : OUT std_ulogic;
            ept_int_3 : OUT std_ulogic;
            ept_int_4 : OUT std_ulogic;
            ept_int_5 : OUT std_ulogic;
            ept_int_6 : OUT std_ulogic;
            ept_int_7 : OUT std_ulogic;
            ept_int_8 : OUT std_ulogic;
            dma_req_0 : OUT std_ulogic;
            dma_req_1 : OUT std_ulogic;
            dma_req_2 : OUT std_ulogic;
            dma_req_3 : OUT std_ulogic;
            dma_req_4 : OUT std_ulogic;
            dma_req_5 : OUT std_ulogic;
            dma_req_6 : OUT std_ulogic;
            dma_req_7 : OUT std_ulogic;
            dma_termin : OUT std_ulogic);
    END COMPONENT;
    COMPONENT vidaccell
        PORT (
            data_0 : IN std_ulogic;
            data_1 : IN std_ulogic;
            data_2 : IN std_ulogic;
            data_3 : IN std_ulogic;
            data_4 : IN std_ulogic;
            data_5 : IN std_ulogic;
            data_6 : IN std_ulogic;
            data_7 : IN std_ulogic;
            strobe : IN std_ulogic;
            strobe_udb : IN std_ulogic;
            reset : IN std_ulogic;
            idir : IN std_ulogic;
            ioff : IN std_ulogic);
    END COMPONENT;
BEGIN

    ClockBlock:clockblockcell
        PORT MAP(
            clk_bus_glb => ClockBlock_BUS_CLK,
            clk_bus => ClockBlock_BUS_CLK_local,
            clk_sync => ClockBlock_MASTER_CLK,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ,
            xtal => ClockBlock_XTAL,
            ilo => ClockBlock_ILO,
            clk_100k => ClockBlock_100k,
            clk_1k => ClockBlock_1k,
            clk_32k => ClockBlock_32k,
            pllout => ClockBlock_PLL_OUT,
            imo => ClockBlock_IMO,
            dsi_clkin_div => open,
            dsi_glb_div => open,
            dclk_glb_0 => \UART_1:Net_9\,
            dclk_0 => \UART_1:Net_9_local\,
            dclk_glb_1 => Net_18,
            dclk_1 => Net_18_local,
            dclk_glb_2 => Net_398,
            dclk_2 => Net_398_local);

    Hall_sensor:logicalport
        GENERIC MAP(
            drive_mode => "001",
            ibuf_enabled => "1",
            id => "6698f4fc-8631-49c7-a3b4-30e1751cc25f",
            init_dr_st => "0",
            input_sync => "1",
            intr_mode => "00",
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            output_conn => "0",
            output_sync => "0",
            pin_aliases => "",
            pin_mode => "I",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "00",
            width => 1);

    Hall_sensor(0):iocell
        GENERIC MAP(
            logicalport => "Hall_sensor",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            fb => Net_277,
            pad_in => Hall_sensor(0)_PAD,
            clock => ClockBlock_BUS_CLK);

    Net_133:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)")
        PORT MAP(
            q => Net_133,
            clock_0 => Net_18,
            main_0 => \PWM:PWMUDB:ctrl_enable\,
            main_1 => \PWM:PWMUDB:compare1\);

    Net_276:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1)")
        PORT MAP(
            q => Net_276,
            main_0 => Net_277,
            main_1 => Net_301);

    Net_416:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)")
        PORT MAP(
            q => Net_416,
            main_0 => Net_397,
            clock_0 => Net_398);

    Net_47:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)")
        PORT MAP(
            q => Net_47,
            main_0 => \UART_1:BUART:txn\);

    Pin_button:logicalport
        GENERIC MAP(
            drive_mode => "010",
            ibuf_enabled => "1",
            id => "4c15b41e-e284-4978-99e7-5aaee19bd0ce",
            init_dr_st => "1",
            input_sync => "1",
            intr_mode => "00",
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            output_conn => "0",
            output_sync => "0",
            pin_aliases => "",
            pin_mode => "I",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "00",
            width => 1);

    Pin_button(0):iocell
        GENERIC MAP(
            logicalport => "Pin_button",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            fb => Net_397,
            pad_in => Pin_button(0)_PAD,
            clock => ClockBlock_BUS_CLK);

    Pin_motor:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "52f31aa9-2f0a-497d-9a1f-1424095e13e6",
            init_dr_st => "0",
            input_sync => "1",
            intr_mode => "00",
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            output_conn => "1",
            output_sync => "0",
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1);

    Pin_motor(0):iocell
        GENERIC MAP(
            logicalport => "Pin_motor",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pin_input => Net_133,
            pad_out => Pin_motor(0)_PAD,
            pad_in => Pin_motor(0)_PAD);

    Rx_1:logicalport
        GENERIC MAP(
            drive_mode => "001",
            ibuf_enabled => "1",
            id => "1425177d-0d0e-4468-8bcc-e638e5509a9b",
            init_dr_st => "0",
            input_sync => "1",
            intr_mode => "00",
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            output_conn => "0",
            output_sync => "0",
            pin_aliases => "",
            pin_mode => "I",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "00",
            width => 1);

    Rx_1(0):iocell
        GENERIC MAP(
            logicalport => "Rx_1",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            fb => Net_52,
            pad_in => Rx_1(0)_PAD,
            clock => ClockBlock_BUS_CLK);

    Tx_1:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "ed092b9b-d398-4703-be89-cebf998501f6",
            init_dr_st => "1",
            input_sync => "1",
            intr_mode => "00",
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            output_conn => "1",
            output_sync => "0",
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1);

    Tx_1(0):iocell
        GENERIC MAP(
            logicalport => "Tx_1",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pin_input => Net_47,
            pad_out => Tx_1(0)_PAD,
            pad_in => Tx_1(0)_PAD);

    \Counter_1:CounterHW\:timercell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clock => Net_18,
            kill => open,
            enable => open,
            capture => open,
            timer_reset => Net_276,
            tc => \Counter_1:Net_48\,
            cmp => \Counter_1:Net_54\,
            irq => Net_266);

    \Counter_2:CounterHW\:timercell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clock => Net_18,
            kill => open,
            enable => open,
            capture => open,
            timer_reset => Net_384,
            tc => Net_384,
            cmp => \Counter_2:Net_54\,
            irq => Net_347);

    \LCD:LCDPort(0)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(0)_PAD\);

    \LCD:LCDPort(1)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 1,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(1)_PAD\);

    \LCD:LCDPort(2)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 2,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(2)_PAD\);

    \LCD:LCDPort(3)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 3,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(3)_PAD\);

    \LCD:LCDPort(4)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 4,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(4)_PAD\);

    \LCD:LCDPort(5)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 5,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(5)_PAD\);

    \LCD:LCDPort(6)\:iocell
        GENERIC MAP(
            logicalport => "\LCD:LCDPort\",
            logicalport_pin_id => 6,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            oe => open,
            pad_in => \LCD:LCDPort(6)_PAD\);

    \LCD:LCDPort\:logicalport
        GENERIC MAP(
            drive_mode => "110110110110110110110",
            ibuf_enabled => "1111111",
            id => "f2225bbf-9fba-4b1b-b4c9-93181b074414/ed092b9b-d398-4703-be89-cebf998501f6",
            init_dr_st => "0000000",
            input_sync => "1111111",
            intr_mode => "00000000000000",
            io_voltage => ", , , , , , ",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0000000",
            output_conn => "0000000",
            output_sync => "0000000",
            pin_aliases => ",,,,,,",
            pin_mode => "OOOOOOO",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "",
            sio_hyst => "0000000",
            sio_ibuf => "00000000",
            sio_info => "00000000000000",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0000000",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0000000",
            vtrip => "10101010101010",
            width => 7);

    \PWM:PWMUDB:final_kill_reg\:macrocell
        GENERIC MAP(
            eqn_main => "1'b0")
        PORT MAP(
            q => \PWM:PWMUDB:final_kill_reg\,
            clock_0 => Net_18);

    \PWM:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)")
        PORT MAP(
            q => \PWM:PWMUDB:prevCompare1\,
            main_0 => \PWM:PWMUDB:compare1\,
            clock_0 => Net_18);

    \PWM:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)")
        PORT MAP(
            q => \PWM:PWMUDB:runmode_enable\,
            main_0 => \PWM:PWMUDB:ctrl_enable\,
            clock_0 => Net_18);

    \PWM:PWMUDB:sCTRLReg:SyncCtl:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000")
        PORT MAP(
            clock => Net_18,
            control_7 => \PWM:PWMUDB:ctrl_enable\,
            control_6 => \PWM:PWMUDB:control_6\,
            control_5 => \PWM:PWMUDB:control_5\,
            control_4 => \PWM:PWMUDB:control_4\,
            control_3 => \PWM:PWMUDB:control_3\,
            control_2 => \PWM:PWMUDB:control_2\,
            control_1 => \PWM:PWMUDB:control_1\,
            control_0 => \PWM:PWMUDB:control_0\,
            busclk => ClockBlock_BUS_CLK);

    \PWM:PWMUDB:sP16:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            clock => Net_18,
            cs_addr_2 => \PWM:PWMUDB:tc_i\,
            cs_addr_1 => \PWM:PWMUDB:runmode_enable\,
            busclk => ClockBlock_BUS_CLK,
            ce0 => \PWM:PWMUDB:sP16:pwmdp:u0.ce0__sig\,
            cl0 => \PWM:PWMUDB:sP16:pwmdp:u0.cl0__sig\,
            z0 => \PWM:PWMUDB:sP16:pwmdp:u0.z0__sig\,
            ff0 => \PWM:PWMUDB:sP16:pwmdp:u0.ff0__sig\,
            ce1 => \PWM:PWMUDB:sP16:pwmdp:u0.ce1__sig\,
            cl1 => \PWM:PWMUDB:sP16:pwmdp:u0.cl1__sig\,
            z1 => \PWM:PWMUDB:sP16:pwmdp:u0.z1__sig\,
            ff1 => \PWM:PWMUDB:sP16:pwmdp:u0.ff1__sig\,
            co_msb => \PWM:PWMUDB:sP16:pwmdp:u0.co_msb__sig\,
            sol_msb => \PWM:PWMUDB:sP16:pwmdp:u0.sol_msb__sig\,
            cfbo => \PWM:PWMUDB:sP16:pwmdp:u0.cfbo__sig\,
            sil => \PWM:PWMUDB:sP16:pwmdp:u1.sor__sig\,
            cmsbi => \PWM:PWMUDB:sP16:pwmdp:u1.cmsbo__sig\);

    \PWM:PWMUDB:sP16:pwmdp:u1\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            clock => Net_18,
            cs_addr_2 => \PWM:PWMUDB:tc_i\,
            cs_addr_1 => \PWM:PWMUDB:runmode_enable\,
            cl0_comb => \PWM:PWMUDB:compare1\,
            z0_comb => \PWM:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM:PWMUDB:status_3\,
            busclk => ClockBlock_BUS_CLK,
            ce0i => \PWM:PWMUDB:sP16:pwmdp:u0.ce0__sig\,
            cl0i => \PWM:PWMUDB:sP16:pwmdp:u0.cl0__sig\,
            z0i => \PWM:PWMUDB:sP16:pwmdp:u0.z0__sig\,
            ff0i => \PWM:PWMUDB:sP16:pwmdp:u0.ff0__sig\,
            ce1i => \PWM:PWMUDB:sP16:pwmdp:u0.ce1__sig\,
            cl1i => \PWM:PWMUDB:sP16:pwmdp:u0.cl1__sig\,
            z1i => \PWM:PWMUDB:sP16:pwmdp:u0.z1__sig\,
            ff1i => \PWM:PWMUDB:sP16:pwmdp:u0.ff1__sig\,
            ci => \PWM:PWMUDB:sP16:pwmdp:u0.co_msb__sig\,
            sir => \PWM:PWMUDB:sP16:pwmdp:u0.sol_msb__sig\,
            cfbi => \PWM:PWMUDB:sP16:pwmdp:u0.cfbo__sig\,
            sor => \PWM:PWMUDB:sP16:pwmdp:u1.sor__sig\,
            cmsbo => \PWM:PWMUDB:sP16:pwmdp:u1.cmsbo__sig\);

    \PWM:PWMUDB:sSTSReg:rstSts:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111")
        PORT MAP(
            clock => Net_18,
            status_6 => open,
            status_5 => \PWM:PWMUDB:status_5\,
            status_4 => open,
            status_3 => \PWM:PWMUDB:status_3\,
            status_2 => \PWM:PWMUDB:tc_i\,
            status_1 => open,
            status_0 => \PWM:PWMUDB:status_0\);

    \PWM:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1)")
        PORT MAP(
            q => \PWM:PWMUDB:status_0\,
            clock_0 => Net_18,
            main_0 => \PWM:PWMUDB:compare1\,
            main_1 => \PWM:PWMUDB:prevCompare1\);

    \PWM:PWMUDB:status_5\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)")
        PORT MAP(
            q => \PWM:PWMUDB:status_5\,
            main_0 => \PWM:PWMUDB:final_kill_reg\);

    \ShiftReg_1:bSR:StsReg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "0000111",
            cy_md_select => "0000111")
        PORT MAP(
            clock => Net_18,
            status_6 => \ShiftReg_1:bSR:status_6\,
            status_5 => \ShiftReg_1:bSR:status_5\,
            status_4 => \ShiftReg_1:bSR:status_4\,
            status_3 => \ShiftReg_1:bSR:status_3\,
            status_2 => open,
            status_1 => open,
            status_0 => open);

    \ShiftReg_1:bSR:SyncCtl:CtrlReg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000001",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000")
        PORT MAP(
            clock => Net_18,
            control_7 => \ShiftReg_1:bSR:control_7\,
            control_6 => \ShiftReg_1:bSR:control_6\,
            control_5 => \ShiftReg_1:bSR:control_5\,
            control_4 => \ShiftReg_1:bSR:control_4\,
            control_3 => \ShiftReg_1:bSR:control_3\,
            control_2 => \ShiftReg_1:bSR:control_2\,
            control_1 => \ShiftReg_1:bSR:control_1\,
            control_0 => \ShiftReg_1:bSR:ctrl_clk_enable\,
            busclk => ClockBlock_BUS_CLK);

    \ShiftReg_1:bSR:sC8:BShiftRegDp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000100000000000000010000000000000001000000000000000100000000000000010100101000010101000010000000000000011000000101010000100000011111111000000001111111111111111010101011110101001001000100100000000000000011100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            clock => Net_18,
            cs_addr_2 => \ShiftReg_1:bSR:ctrl_clk_enable\,
            route_si => Net_277,
            so_comb => Net_301,
            f0_bus_stat_comb => \ShiftReg_1:bSR:status_4\,
            f0_blk_stat_comb => \ShiftReg_1:bSR:status_3\,
            f1_bus_stat_comb => \ShiftReg_1:bSR:status_6\,
            f1_blk_stat_comb => \ShiftReg_1:bSR:status_5\,
            busclk => ClockBlock_BUS_CLK);

    \Timer_1:TimerHW\:timercell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clock => Net_18,
            kill => open,
            enable => __ONE__,
            capture => Net_277,
            timer_reset => open,
            tc => \Timer_1:Net_51\,
            cmp => \Timer_1:Net_261\,
            irq => \Timer_1:Net_57\);

    \UART_1:BUART:counter_load_not\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2) + (!main_0 * !main_1 * main_3)")
        PORT MAP(
            q => \UART_1:BUART:counter_load_not\,
            main_0 => \UART_1:BUART:tx_state_1\,
            main_1 => \UART_1:BUART:tx_state_0\,
            main_2 => \UART_1:BUART:tx_state_2\,
            main_3 => \UART_1:BUART:tx_bitclk\);

    \UART_1:BUART:pollcount_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3) + (!main_0 * !main_1 * main_2 * !main_3)")
        PORT MAP(
            q => \UART_1:BUART:pollcount_0\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_count_2\,
            main_1 => \UART_1:BUART:rx_count_1\,
            main_2 => Net_52,
            main_3 => \UART_1:BUART:pollcount_0\);

    \UART_1:BUART:pollcount_1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3 * main_4) + (!main_0 * !main_1 * main_2 * !main_3) + (!main_0 * !main_1 * main_2 * !main_4)")
        PORT MAP(
            q => \UART_1:BUART:pollcount_1\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_count_2\,
            main_1 => \UART_1:BUART:rx_count_1\,
            main_2 => \UART_1:BUART:pollcount_1\,
            main_3 => Net_52,
            main_4 => \UART_1:BUART:pollcount_0\);

    \UART_1:BUART:rx_address_detected\:macrocell
        GENERIC MAP(
            eqn_main => "1'b0")
        PORT MAP(
            q => \UART_1:BUART:rx_address_detected\,
            clock_0 => \UART_1:Net_9\);

    \UART_1:BUART:rx_bitclk_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2)")
        PORT MAP(
            q => \UART_1:BUART:rx_bitclk_enable\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_count_2\,
            main_1 => \UART_1:BUART:rx_count_1\,
            main_2 => \UART_1:BUART:rx_count_0\);

    \UART_1:BUART:rx_counter_load\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * !main_2 * !main_3 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_counter_load\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_state_3\,
            main_3 => \UART_1:BUART:rx_state_2\);

    \UART_1:BUART:rx_last\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_last\,
            clock_0 => \UART_1:Net_9\,
            main_0 => Net_52);

    \UART_1:BUART:rx_load_fifo\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * main_3 * !main_4 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_6 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_7 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_load_fifo\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_bitclk_enable\,
            main_3 => \UART_1:BUART:rx_state_3\,
            main_4 => \UART_1:BUART:rx_state_2\,
            main_5 => \UART_1:BUART:rx_count_6\,
            main_6 => \UART_1:BUART:rx_count_5\,
            main_7 => \UART_1:BUART:rx_count_4\);

    \UART_1:BUART:rx_postpoll\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0) + (main_1 * main_2)")
        PORT MAP(
            q => \UART_1:BUART:rx_postpoll\,
            main_0 => \UART_1:BUART:pollcount_1\,
            main_1 => Net_52,
            main_2 => \UART_1:BUART:pollcount_0\);

    \UART_1:BUART:rx_state_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * !main_3 * main_4 * !main_8 * !main_9 * !main_0) + (!main_1 * main_2 * !main_3 * main_4 * !main_8 * !main_10 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_6 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_7 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_state_0\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_bitclk_enable\,
            main_3 => \UART_1:BUART:rx_state_3\,
            main_4 => \UART_1:BUART:rx_state_2\,
            main_5 => \UART_1:BUART:rx_count_6\,
            main_6 => \UART_1:BUART:rx_count_5\,
            main_7 => \UART_1:BUART:rx_count_4\,
            main_8 => \UART_1:BUART:pollcount_1\,
            main_9 => Net_52,
            main_10 => \UART_1:BUART:pollcount_0\);

    \UART_1:BUART:rx_state_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * main_3 * !main_0) + (!main_1 * main_2 * main_4 * !main_0) + (!main_1 * !main_3 * !main_4 * !main_8 * !main_0 * main_9) + (main_1 * !main_3 * !main_4 * !main_5 * !main_6 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_7 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_state_2\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_bitclk_enable\,
            main_3 => \UART_1:BUART:rx_state_3\,
            main_4 => \UART_1:BUART:rx_state_2\,
            main_5 => \UART_1:BUART:rx_count_6\,
            main_6 => \UART_1:BUART:rx_count_5\,
            main_7 => \UART_1:BUART:rx_count_4\,
            main_8 => Net_52,
            main_9 => \UART_1:BUART:rx_last\);

    \UART_1:BUART:rx_state_3\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * main_3 * main_4 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_6 * !main_0) + (main_1 * !main_3 * !main_4 * !main_5 * !main_7 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_state_3\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_bitclk_enable\,
            main_3 => \UART_1:BUART:rx_state_3\,
            main_4 => \UART_1:BUART:rx_state_2\,
            main_5 => \UART_1:BUART:rx_count_6\,
            main_6 => \UART_1:BUART:rx_count_5\,
            main_7 => \UART_1:BUART:rx_count_4\);

    \UART_1:BUART:rx_state_stop1_reg\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * main_3 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_state_stop1_reg\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_state_3\,
            main_3 => \UART_1:BUART:rx_state_2\);

    \UART_1:BUART:rx_status_3\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_1 * main_2 * main_3 * main_4 * !main_5 * !main_6 * !main_0) + (!main_1 * main_2 * main_3 * main_4 * !main_5 * !main_7 * !main_0)")
        PORT MAP(
            q => \UART_1:BUART:rx_status_3\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:rx_address_detected\,
            main_1 => \UART_1:BUART:rx_state_0\,
            main_2 => \UART_1:BUART:rx_bitclk_enable\,
            main_3 => \UART_1:BUART:rx_state_3\,
            main_4 => \UART_1:BUART:rx_state_2\,
            main_5 => \UART_1:BUART:pollcount_1\,
            main_6 => Net_52,
            main_7 => \UART_1:BUART:pollcount_0\);

    \UART_1:BUART:rx_status_4\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)")
        PORT MAP(
            q => \UART_1:BUART:rx_status_4\,
            main_0 => \UART_1:BUART:rx_load_fifo\,
            main_1 => \UART_1:BUART:rx_fifofull\);

    \UART_1:BUART:rx_status_5\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)")
        PORT MAP(
            q => \UART_1:BUART:rx_status_5\,
            main_0 => \UART_1:BUART:rx_fifonotempty\,
            main_1 => \UART_1:BUART:rx_state_stop1_reg\);

    \UART_1:BUART:sRX:RxBitCounter\:count7cell
        GENERIC MAP(
            cy_alt_mode => 0,
            cy_init_value => "0000000",
            cy_period => "1110010",
            cy_route_en => 1,
            cy_route_ld => 1)
        PORT MAP(
            clock => \UART_1:Net_9\,
            reset => open,
            load => \UART_1:BUART:rx_counter_load\,
            enable => open,
            count_6 => \UART_1:BUART:rx_count_6\,
            count_5 => \UART_1:BUART:rx_count_5\,
            count_4 => \UART_1:BUART:rx_count_4\,
            count_3 => \UART_1:BUART:rx_count_3\,
            count_2 => \UART_1:BUART:rx_count_2\,
            count_1 => \UART_1:BUART:rx_count_1\,
            count_0 => \UART_1:BUART:rx_count_0\,
            tc => \UART_1:BUART:rx_count7_tc\);

    \UART_1:BUART:sRX:RxShifter:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            reset => open,
            clock => \UART_1:Net_9\,
            cs_addr_2 => \UART_1:BUART:rx_address_detected\,
            cs_addr_1 => \UART_1:BUART:rx_state_0\,
            cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\,
            route_si => \UART_1:BUART:rx_postpoll\,
            f0_load => \UART_1:BUART:rx_load_fifo\,
            f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\,
            f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\,
            busclk => ClockBlock_BUS_CLK);

    \UART_1:BUART:sRX:RxSts\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "1011111")
        PORT MAP(
            reset => open,
            clock => \UART_1:Net_9\,
            status_6 => open,
            status_5 => \UART_1:BUART:rx_status_5\,
            status_4 => \UART_1:BUART:rx_status_4\,
            status_3 => \UART_1:BUART:rx_status_3\,
            status_2 => open,
            status_1 => open,
            status_0 => open,
            interrupt => Net_72);

    \UART_1:BUART:sTX:TxShifter:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            reset => open,
            clock => \UART_1:Net_9\,
            cs_addr_2 => \UART_1:BUART:tx_state_1\,
            cs_addr_1 => \UART_1:BUART:tx_state_0\,
            cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\,
            so_comb => \UART_1:BUART:tx_shift_out\,
            f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\,
            f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\,
            busclk => ClockBlock_BUS_CLK);

    \UART_1:BUART:sTX:TxSts\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0000001")
        PORT MAP(
            reset => open,
            clock => \UART_1:Net_9\,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \UART_1:BUART:tx_fifo_notfull\,
            status_2 => \UART_1:BUART:tx_status_2\,
            status_1 => \UART_1:BUART:tx_fifo_empty\,
            status_0 => \UART_1:BUART:tx_status_0\);

    \UART_1:BUART:sTX:sCLOCK:TxBitClkGen\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0')
        PORT MAP(
            reset => open,
            clock => \UART_1:Net_9\,
            cs_addr_0 => \UART_1:BUART:counter_load_not\,
            cl0_comb => \UART_1:BUART:tx_bitclk_dp\,
            cl1_comb => \UART_1:BUART:tx_counter_dp\,
            busclk => ClockBlock_BUS_CLK);

    \UART_1:BUART:tx_bitclk\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)")
        PORT MAP(
            q => \UART_1:BUART:tx_bitclk\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:tx_bitclk_dp\);

    \UART_1:BUART:tx_bitclk_enable_pre\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)")
        PORT MAP(
            q => \UART_1:BUART:tx_bitclk_enable_pre\,
            main_0 => \UART_1:BUART:tx_bitclk_dp\);

    \UART_1:BUART:tx_state_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3) + (!main_0 * !main_1 * !main_2 * main_4) + (main_0 * main_1 * main_2 * main_4) + (main_1 * !main_3 * main_4)")
        PORT MAP(
            q => \UART_1:BUART:tx_state_0\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:tx_state_1\,
            main_1 => \UART_1:BUART:tx_state_0\,
            main_2 => \UART_1:BUART:tx_fifo_empty\,
            main_3 => \UART_1:BUART:tx_state_2\,
            main_4 => \UART_1:BUART:tx_bitclk\);

    \UART_1:BUART:tx_state_1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_3) + (main_0 * !main_2 * main_3 * !main_4) + (main_1 * !main_2 * main_3)")
        PORT MAP(
            q => \UART_1:BUART:tx_state_1\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:tx_state_1\,
            main_1 => \UART_1:BUART:tx_state_0\,
            main_2 => \UART_1:BUART:tx_state_2\,
            main_3 => \UART_1:BUART:tx_bitclk\,
            main_4 => \UART_1:BUART:tx_counter_dp\);

    \UART_1:BUART:tx_state_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3) + (main_0 * main_1 * main_3) + (main_0 * !main_2 * main_3 * !main_4)")
        PORT MAP(
            q => \UART_1:BUART:tx_state_2\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:tx_state_1\,
            main_1 => \UART_1:BUART:tx_state_0\,
            main_2 => \UART_1:BUART:tx_state_2\,
            main_3 => \UART_1:BUART:tx_bitclk\,
            main_4 => \UART_1:BUART:tx_counter_dp\);

    \UART_1:BUART:tx_status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3 * main_4)")
        PORT MAP(
            q => \UART_1:BUART:tx_status_0\,
            main_0 => \UART_1:BUART:tx_state_1\,
            main_1 => \UART_1:BUART:tx_state_0\,
            main_2 => \UART_1:BUART:tx_fifo_empty\,
            main_3 => \UART_1:BUART:tx_state_2\,
            main_4 => \UART_1:BUART:tx_bitclk\);

    \UART_1:BUART:tx_status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)")
        PORT MAP(
            q => \UART_1:BUART:tx_status_2\,
            main_0 => \UART_1:BUART:tx_fifo_notfull\);

    \UART_1:BUART:txn\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_5) + (main_0 * main_4) + (!main_1 * main_2 * !main_3 * !main_4) + (!main_1 * main_2 * !main_4 * !main_5) + (main_1 * !main_2 * !main_3 * !main_4 * main_5 * main_6)")
        PORT MAP(
            q => \UART_1:BUART:txn\,
            clock_0 => \UART_1:Net_9\,
            main_0 => \UART_1:BUART:txn\,
            main_1 => \UART_1:BUART:tx_state_1\,
            main_2 => \UART_1:BUART:tx_state_0\,
            main_3 => \UART_1:BUART:tx_shift_out\,
            main_4 => \UART_1:BUART:tx_state_2\,
            main_5 => \UART_1:BUART:tx_bitclk\,
            main_6 => \UART_1:BUART:tx_counter_dp\);

    __ONE__:macrocell
        GENERIC MAP(
            eqn_main => "1'b0")
        PORT MAP(
            q => __ONE__);

    inter_button:interrupt
        GENERIC MAP(
            int_type => "00")
        PORT MAP(
            interrupt => Net_416,
            clock => ClockBlock_BUS_CLK);

    rx_rcvd:interrupt
        GENERIC MAP(
            int_type => "00")
        PORT MAP(
            interrupt => Net_72,
            clock => ClockBlock_BUS_CLK);

    throttle_update:interrupt
        GENERIC MAP(
            int_type => "00")
        PORT MAP(
            interrupt => Net_347,
            clock => ClockBlock_BUS_CLK);

    tick_timeout:interrupt
        GENERIC MAP(
            int_type => "00")
        PORT MAP(
            interrupt => Net_266,
            clock => ClockBlock_BUS_CLK);

    wheel_tick:interrupt
        GENERIC MAP(
            int_type => "10")
        PORT MAP(
            interrupt => Net_277,
            clock => ClockBlock_BUS_CLK);

END __DEFAULT__;
